/*
   This file has been generated by IDA.
   It contains local type definitions from
   NSGameServer_TW_r_2_sql.idb
*/

/* 1 */
enum CNSConsole::OUTPUTTYPE
{
  OutputType_Normal = 0x0,
  OutputType_Info = 0x1,
  OutputType_Warring = 0x2,
  OutputType_Error = 0x3,
};

/* 2 */
enum CNSObject::OBJECTTYPE
{
  ObjectType_NULL = 0x0,
  ObjectType_Pc = 0x1,
  ObjectType_Npc = 0x2,
  ObjectType_Mob = 0x3,
  ObjectType_Item = 0x4,
  ObjectType_Party = 0x5,
  ObjectType_Object = 0x6,
  ObjectType_Pet = 0x7,
  ObjectType_Guild = 0x8,
  ObjectType_End = 0x9,
};

/* 3 */
enum vc_attributes::YesNoMaybe
{
  No = 0xFFF0001,
  Maybe = 0xFFF0010,
  Yes = 0xFFF0100,
};

/* 4 */
enum vc_attributes::AccessType
{
  NoAccess = 0x0,
  Read = 0x1,
  Write = 0x2,
  ReadWrite = 0x3,
};

/* 5 */
enum NS_MESSAGE
{
  NS_MSG_GET_EXP = 0x0,
  NS_MSG_GET_NS = 0x1,
  NS_MSG_GET_GOLD = 0x2,
  NS_MSG_GET_ITEM = 0x3,
  NS_MSG_SITDOWN = 0x4,
  NS_MSG_NOT_TARGET = 0x5,
  NS_MSG_NOT_TALK = 0x6,
  NS_MSG_TOOFAR_TARGET = 0x7,
  NS_MSG_AUTO_REBIRTH = 0x8,
  NS_MSG_USE_ALREADY = 0x9,
  NS_MSG_LOGOUT_DEALY = 0xA,
  NS_MSG_REALMPOINT = 0xB,
  NS_MSG_TOOFAR_SUMMON_TARGET = 0xC,
  NS_MSG_RESERVED = 0xD,
  NS_MSG_LIMIT_RIDE = 0xE,
  NS_MSG_START_1 = 0xF,
  NS_MSG_NAME_CHANGE_ERROR = 0x10,
  NS_MSG_PASSWORD_CHANGE_ERROR = 0x11,
  NS_MSG_ERROR_STRING = 0x12,
  NS_MSG_ERROR_LEVEL = 0x13,
  NS_MSG_ERROR_CHAT = 0x14,
  NS_MSG_ERROR_SUBSERVER = 0x15,
  NS_MSG_ERROR_CHAT_ZONE = 0x16,
  NS_MSG_ERROR_TOOLONG_STRING = 0x17,
  NS_MSG_LOST_EXP = 0x18,
  NS_MSG_LEVELUP_1 = 0x19,
  NS_MSG_LEVELUP_2 = 0x1A,
  NS_MSG_LEVELUP_3 = 0x1B,
  NS_MSG_LEVELUP_4 = 0x1C,
  NS_MSG_LEVELUP_5 = 0x1D,
  NS_MSG_LEVELUP_6 = 0x1E,
  NS_MSG_SKILL_NOT_USE = 0x1F,
  NS_MSG_SKILL_NOT_USE_PRODUCT = 0x20,
  NS_MSG_SKILL_NOT_CAST = 0x21,
  NS_MSG_SKILL_COOL_TIME = 0x22,
  NS_MSG_SKILL_OVER_RANGE = 0x23,
  NS_MSG_SKILL_BLOCK_TARGET = 0x24,
  NS_MSG_SKILL_NEED_HP = 0x25,
  NS_MSG_SKILL_NEED_MP = 0x26,
  NS_MSG_SKILL_NEED_STA = 0x27,
  NS_MSG_SKILL_NEED_GOLD = 0x28,
  NS_MSG_SKILL_NEED_NS = 0x29,
  NS_MSG_SKILL_NEED_WEAPON = 0x2A,
  NS_MSG_SKILL_OVER_HEAT = 0x2B,
  NS_MSG_SKILL_NOT_PARTY = 0x2C,
  NS_MSG_SKILL_NEED_GEL = 0x2D,
  NS_MSG_SKILL_NEED_AMULET = 0x2E,
  NS_MSG_SKILL_NEED_MENTALCRYSTAL = 0x2F,
  NS_MSG_SKILL_NEED_SPAWN = 0x30,
  NS_MSG_SKILL_NEED_BOMB = 0x31,
  NS_MSG_SKILL_NEED_REDPOWDER = 0x32,
  NS_MSG_SKILL_NEED_SHOCKBALL = 0x33,
  NS_MSG_SKILL_NEED_TAMEMOB = 0x34,
  NS_MSG_SKILL_NEED_TAMEMOB_SAVE = 0x35,
  NS_MSG_SKILL_NEED_ATTACK_TARGET = 0x36,
  NS_MSG_SKILL_NEED_BUFF_TARGET = 0x37,
  NS_MSG_SKILL_STEAL_SUCCESS = 0x38,
  NS_MSG_SKILL_NEW_ABILITY = 0x39,
  NS_MSG_SKILL_DEBUFF = 0x3A,
  NS_MSG_SKILL_UNLOCK_ERROR = 0x3B,
  NS_MSG_SKILL_RESET_TAME_SAVE = 0x3C,
  NS_MSG_SKILL_EXP_UP = 0x3D,
  NS_MSG_SKILL_ATTACK_CANCEL = 0x3E,
  NS_MSG_SKILL_CAST_FAIL = 0x3F,
  NS_MSG_SKILL_CAST_MASS_HEAL = 0x40,
  NS_MSG_SKILL_CAST_MASS_DEFENCE = 0x41,
  NS_MSG_SKILL_CAST_MASS_WEAPON = 0x42,
  NS_MSG_SKILL_CAST_MASS_RUSH = 0x43,
  NS_MSG_SKILL_CAST_MASS_MAGIC = 0x44,
  NS_MSG_SKILL_CAST_MASS_INSPIRATION = 0x45,
  NS_MSG_SKILL_CAST_MASS_FULLSWINE = 0x46,
  NS_MSG_SKILL_RESET = 0x47,
  NS_MSG_SKILL_ERROR_RESET = 0x48,
  NS_MSG_SKILL_ERROR_LEVELUP = 0x49,
  NS_MSG_SKILL_NEED_LEVELUP_ITEM = 0x4A,
  NS_MSG_SKILL_LEVELUP_NEED_LEVEL = 0x4B,
  NS_MSG_SKILL_LEVELUP_NEED_SP = 0x4C,
  NS_MSG_SKILL_LEVELUP_NEED_SKILLEXP = 0x4D,
  NS_MSG_SKILL_ERROR_CHANGE1 = 0x4E,
  NS_MSG_SKILL_ERROR_CHANGE2 = 0x4F,
  NS_MSG_ITEM_NOT_FOUND = 0x50,
  NS_MSG_ITEM_ERROR_COUNT = 0x51,
  NS_MSG_ITEM_EQUIP_ERROR_ITEM = 0x52,
  NS_MSG_ITEM_EQUIP_LIMIT_RACE = 0x53,
  NS_MSG_ITEM_EQUIP_LIMIT_JOB = 0x54,
  NS_MSG_ITEM_EQUIP_LIMIT_LEVEL = 0x55,
  NS_MSG_ITEM_EQUIP_LIMIT_RANK = 0x56,
  NS_MSG_ITEM_EQUIP_ERROR_POS = 0x57,
  NS_MSG_ITEM_EQUIP_ERROR_SOCKET = 0x58,
  NS_MSG_ITEM_EQUIP_ERROR_CORE = 0x59,
  NS_MSG_ITEM_EQUIP_EXIST_ITEM = 0x5A,
  NS_MSG_ITEM_EQUIP_NOT_SUPPORT = 0x5B,
  NS_MSG_ITEM_EQUIP_ERROR_BULLET = 0x5C,
  NS_MSG_ITEM_EQUIP_ERROR_GUN = 0x5D,
  NS_MSG_ITEM_EQUIP_ERROR_ARROW = 0x5E,
  NS_MSG_ITEM_EQUIP_ERROR_BOW = 0x5F,
  NS_MSG_ITEM_EQUIP_STICK = 0x60,
  NS_MSG_ITEM_EQUIP_ERROR_SKILL = 0x61,
  NS_MSG_ITEM_INVEN_FULL = 0x62,
  NS_MSG_ITEM_INVEN_MISS_OWNER = 0x63,
  NS_MSG_ITEM_INVEN_CANNOT_DELETE = 0x64,
  NS_MSG_ITEM_INVEN_EMPTY = 0x65,
  NS_MSG_ITEM_INVEN_CANNOT_DELETE2 = 0x66,
  NS_MSG_ITEM_PCSHOP_FULL = 0x67,
  NS_MSG_ITEM_PCSHOP_EXIST = 0x68,
  NS_MSG_ITEM_PCSHOP_CANNOT_CREATE = 0x69,
  NS_MSG_ITEM_NEED_SPEAKER = 0x6A,
  NS_MSG_WAREHOUSE_ITEM_FULL = 0x6B,
  NS_MSG_WAREHOUSE_IN_ERROR = 0x6C,
  NS_MSG_ITEM_USE_HP_FULL = 0x6D,
  NS_MSG_ITEM_USE_MP_FULL = 0x6E,
  NS_MSG_ITEM_USE_STA_FULL = 0x6F,
  NS_MSG_ITEM_USE_MAXHPEXPAND_SUCCESS = 0x70,
  NS_MSG_ITEM_USE_MAXHPEXPAND_FAIL = 0x71,
  NS_MSG_ITEM_USE_MAXHPEXPAND_FAIL2 = 0x72,
  NS_MSG_ITEM_USE_TRACEDARKSTONE_SUCCESS = 0x73,
  NS_MSG_ITEM_USE_TRACEDARKSTONE2_SUCCESS = 0x74,
  NS_MSG_ITEM_USE_TRACEDARKSTONE_FAIL = 0x75,
  NS_MSG_ITEM_USE_TITLE_FULL = 0x76,
  NS_MSG_ITEM_UPGRADE_MISS_PARTS = 0x77,
  NS_MSG_ITEM_UPGRADE_STEAM = 0x78,
  NS_MSG_ITEM_UPGRADE_ANCIENTSTEAM = 0x79,
  NS_MSG_ITEM_UPGRADE_RARESTEAM = 0x7A,
  NS_MSG_ITEM_UPGRADE_ITEM = 0x7B,
  NS_MSG_ITEM_UPGRADE_FAIL = 0x7C,
  NS_MSG_ITEM_UPGRADE_BROKEN = 0x7D,
  NS_MSG_ITEM_UPGRADE_LIMIT_UPGRADE = 0x7E,
  NS_MSG_ITEM_COMBINE_ERROR = 0x7F,
  NS_MSG_ITEM_MAKE_COMPLETE = 0x80,
  NS_MSG_ITEM_MAKE_ERROR_MATERIAL = 0x81,
  NS_MSG_ITEM_MAKE_ERROR_MAKE = 0x82,
  NS_MSG_ITEM_RESOLUTION_COMPLETE = 0x83,
  NS_MSG_ITEM_RESOLUTION_ERROR = 0x84,
  NS_MSG_ITEM_RESOLUTION_ERROR2 = 0x85,
  NS_MSG_ITEM_COREDIVIDE_COMPLETE = 0x86,
  NS_MSG_ITEM_QUEST_ERROR = 0x87,
  MS_MSG_ITEM_REVERT_ERROR = 0x88,
  MS_MSG_ITEM_BUY_ERROR = 0x89,
  NS_MSG_ITEM_BLOCK_FOUND_ERROR = 0x8A,
  NS_MSG_ITEM_BLOCK_ZONE_ERROR = 0x8B,
  NS_MSG_ITEM_BLOCK_LIMIT_ERROR = 0x8C,
  NS_MSG_QUEST_ERROR = 0x8D,
  NS_MSG_QUEST_ERROR_GIVEUP = 0x8E,
  NS_MSG_QUEST_ADD = 0x8F,
  NS_MSG_QUEST_COMPLETE = 0x90,
  NS_MSG_QUEST_UPDATE = 0x91,
  NS_MSG_QUEST_MOB_CHECK = 0x92,
  NS_MSG_QUEST_ITEM_CHECK = 0x93,
  NS_MSG_QUEST_NOT_COMPLETE = 0x94,
  NS_MSG_EXCHANGE_ERROR_GOLD = 0x95,
  NS_MSG_EXCHANGE_ERROR_ITEM = 0x96,
  NS_MSG_EXCHANGE_CANCEL = 0x97,
  NS_MSG_EXCHANGE_REQUEST1 = 0x98,
  NS_MSG_EXCHANGE_REQUEST2 = 0x99,
  NS_MSG_EXCHANGE_ALREADY = 0x9A,
  NS_MSG_CANNOT_FIND_ALIAS = 0x9B,
  NS_MSG_CANNOT_FIND_PARTY = 0x9C,
  NS_MSG_CANNOT_FIND_GUILD = 0x9D,
  NS_MSG_PARTY_JOIN = 0x9E,
  NS_MSG_PARTY_QUIT = 0x9F,
  NS_MSG_PARTY_KICK = 0xA0,
  NS_MSG_PARTY_CHANGE_LEADER = 0xA1,
  NS_MSG_PARTY_FULL = 0xA2,
  NS_MSG_PARTY_ERROR_PASSWORD = 0xA3,
  NS_MSG_PARTY_ALREADY = 0xA4,
  NS_MSG_PARTY_ERROR_PARTY = 0xA5,
  NS_MSG_PARTY_INVITE = 0xA6,
  NS_MSG_PARTY_INVITE_FROM = 0xA7,
  NS_MSG_PARTY_INVITE_REJECT = 0xA8,
  NS_MSG_PARTY_ERROR_LEADER = 0xA9,
  NS_MSG_PARTY_LOOT_ITEM = 0xAA,
  NS_MSG_PARTY_LOOT_MODE_NORMAL = 0xAB,
  NS_MSG_PARTY_LOOT_MODE_SEQ = 0xAC,
  NS_MSG_PARTY_LOOT_MODE_RANDOM = 0xAD,
  NS_MSG_PARTY_AUTO_NAME1 = 0xAE,
  NS_MSG_PARTY_AUTO_NAME2 = 0xAF,
  NS_MSG_GUILD_CREATE = 0xB0,
  NS_MSG_GUILD_JOIN = 0xB1,
  NS_MSG_GUILD_QUIT = 0xB2,
  NS_MSG_GUILD_ALREADY = 0xB3,
  NS_MSG_GUILD_FULL = 0xB4,
  NS_MSG_GUILD_ERROR_MASTER = 0xB5,
  NS_MSG_GUILD_QUIT_ERROR_MASTER = 0xB6,
  NS_MSG_GUILD_CANNOT_FIND_MASTER = 0xB7,
  NS_MSG_GUILD_CANNOT_CHANGE_MASTER = 0xB8,
  NS_MSG_GUILD_JOIN_REQ = 0xB9,
  NS_MSG_GUILD_JOIN_USER_REQ = 0xBA,
  NS_MSG_GUILD_FULL_SUBMASTER = 0xBB,
  NS_MSG_GUILD_CANNOT_CHANGE_MASTER2 = 0xBC,
  NS_MSG_MOB_CONTROL_ATTACK = 0xBD,
  NS_MSG_MOB_CONTROL_STICK = 0xBE,
  NS_MSG_MOB_CONTROL_AGGRESSIVE = 0xBF,
  NS_MSG_MOB_CONTROL_DEFENSIVE = 0xC0,
  NS_MSG_MOB_CONTROL_EXIT = 0xC1,
  NS_MSG_MOB_CONTROL_DEAD = 0xC2,
  NS_MSG_PET_EAT_FOOD = 0xC3,
  NS_MSG_PET_FOOD_FULL = 0xC4,
  NS_MSG_PET_NOT_FOOD = 0xC5,
  NS_MSG_PET_HUNGRY = 0xC6,
  NS_MSG_PET_HUNGRY_SKILL = 0xC7,
  NS_MSG_PET_HELP_GUN = 0xC8,
  NS_MSG_PET_HELP_BOW = 0xC9,
  NS_MSG_FRIEND_ENTER = 0xCA,
  NS_MSG_FRIEND_LEAVE = 0xCB,
  NS_MSG_FRIEND_ERROR_ADD = 0xCC,
  NS_MSG_FRIEND_ADD_REQ = 0xCD,
  NS_MSG_FRIEND_ADD_YES = 0xCE,
  NS_MSG_FRIEND_ADD_NO = 0xCF,
  NS_MSG_RESIST_START = 0xD0,
  NS_MSG_RESIST_SUCCESS = 0xD1,
  NS_MSG_RESIST_FAIL = 0xD2,
  NS_MSG_NEOSTEAM_CHARGED = 0xD3,
  NS_MSG_TRANSFER_ERROR = 0xD4,
  NS_MSG_TRANSFER_NOT_SAVE = 0xD5,
  NS_MSG_STICK_START = 0xD6,
  NS_MSG_STICK_END = 0xD7,
  NS_MSG_STICK_TOOFAR = 0xD8,
  NS_MSG_AUTORUN_START = 0xD9,
  NS_MSG_AUTORUN_END = 0xDA,
  NS_MSG_PK_DEAD = 0xDB,
  NS_MSG_PK_ATTACK = 0xDC,
  NS_MSG_RIDER_STOP = 0xDD,
  NS_MSG_RIDER_ACTION_ERROR = 0xDE,
  NS_MSG_RIDER_DROP = 0xDF,
  NS_MSG_DESC_SKILL_DISABLE = 0xE0,
  NS_MSG_DESC_SKILL_PASSIVE = 0xE1,
  NS_MSG_DESC_SKILL_ACTIVE_DEBUFF = 0xE2,
  NS_MSG_DESC_SKILL_ACTIVE_BUFF = 0xE3,
  NS_MSG_DESC_SKILL_ACTIVE = 0xE4,
  NS_MSG_DESC_SKILL_SKILLPOINT1 = 0xE5,
  NS_MSG_DESC_SKILL_SKILLPOINT2 = 0xE6,
  NS_MSG_DESC_SKILL_DURTIME_UNLIMIT = 0xE7,
  NS_MSG_DESC_SKILL_DURTIME_MIN = 0xE8,
  NS_MSG_DESC_SKILL_DURTIME_SEC = 0xE9,
  NS_MSG_DESC_SKILL_CAST_SEC = 0xEA,
  NS_MSG_DESC_SKILL_CAST_INST = 0xEB,
  NS_MSG_DESC_SKILL_USE_STA = 0xEC,
  NS_MSG_DESC_SKILL_USE_MP = 0xED,
  NS_MSG_DESC_SKILL_USE_NS = 0xEE,
  NS_MSG_DESC_SKILL_OVERHEAT_MIN = 0xEF,
  NS_MSG_DESC_SKILL_OVERHEAT_SEC = 0xF0,
  NS_MSG_DESC_SKILL_COOLTIME_MIN = 0xF1,
  NS_MSG_DESC_SKILL_COOLTIME_SEC = 0xF2,
  NS_MSG_DESC_SKILL_OVERHEAT_NONE = 0xF3,
  NS_MSG_DESC_SKILL_COOLTIME_NONE = 0xF4,
  NS_MSG_DESC_SKILL_SKILLPOINT3 = 0xF5,
  NS_MSG_DESC_SKILL_SKILLPOINT4 = 0xF6,
  NS_MSG_DESC_SKILL_NEED_LEVEL = 0xF7,
  NS_MSG_DESC_SKILL_NEED_SP = 0xF8,
  NS_MSG_DESC_SKILL_NEED_SKILLEXP = 0xF9,
  NS_MSG_DESC_NPCSKILL_CAST = 0xFA,
  NS_MSG_DESC_NPCSKILL_HARDATTACK = 0xFB,
  NS_MSG_DESC_NPCSKILL_HARDATTACKEX = 0xFC,
  NS_MSG_DESC_NPCSKILL_MUCUSPOISON = 0xFD,
  NS_MSG_DESC_NPCSKILL_SHOCK = 0xFE,
  NS_MSG_DESC_NPCSKILL_SHOUT = 0xFF,
  NS_MSG_DESC_NPCSKILL_CRIPPLEATTACK = 0x100,
  NS_MSG_DESC_NPCSKILL_WALKDAMAGE = 0x101,
  NS_MSG_DESC_NPCSKILL_CLAW = 0x102,
  NS_MSG_DESC_NPCSKILL_JUMPATTACK = 0x103,
  NS_MSG_DESC_NPCSKILL_MISSILE = 0x104,
  NS_MSG_DESC_NPCSKILL_SELFBOMB = 0x105,
  NS_MSG_DESC_NPCSKILL_STUNATTACK = 0x106,
  NS_MSG_DESC_NPCSKILL_ROOTATTACK = 0x107,
  NS_MSG_DESC_NPCSKILL_MASSSLEEP = 0x108,
  NS_MSG_DESC_NPCSKILL_MASSSTUN = 0x109,
  NS_MSG_DESC_NPCSKILL_MASSSLOW = 0x10A,
  NS_MSG_DESC_NPCSKILL_POWERBLADE = 0x10B,
  NS_MSG_DESC_NPCSKILL_DEADLYPOISON = 0x10C,
  NS_MSG_DESC_NPCSKILL_MASSDEADLYPOISON = 0x10D,
  NS_MSG_DESC_NPCSKILL_MASSBROKENHAMMER = 0x10E,
  NS_MSG_DESC_NPCSKILL_CRAZYBERSERKER = 0x10F,
  NS_MSG_DESC_NPCSKILL_INTERRUPTION = 0x110,
  NS_MSG_DESC_NPCSKILL_MASSINTERRUPTION = 0x111,
  NS_MSG_DESC_NPCSKILL_ABILITYREDUCTION = 0x112,
  NS_MSG_DESC_NPCSKILL_MASSABILITYREDUCTION = 0x113,
  NS_MSG_DESC_NPCSKILL_ROOTSELFBOME = 0x114,
  NS_MSG_DESC_NPCSKILL_REFLECTIONFIELD = 0x115,
  NS_MSG_DESC_NPCSKILL_DARKSHADOW = 0x116,
  NS_MSG_DESC_NPCSKILL_MINORHARDATTACK = 0x117,
  NS_MSG_DESC_NPCSKILL_SELFHEAL = 0x118,
  NS_MSG_DESC_NPCSKILL_SELFHEALEX = 0x119,
  NS_MSG_DESC_NPCSKILL_SELFHEALEX2 = 0x11A,
  NS_MSG_DESC_NPCSKILL_SELFHEALEX3 = 0x11B,
  NS_MSG_DESC_NPCSKILL_GROUPHEAL = 0x11C,
  NS_MSG_DESC_NPCSKILL_GROUPHEALEX = 0x11D,
  NS_MSG_DESC_NPCSKILL_FIREBALL = 0x11E,
  NS_MSG_DESC_NPCSKILL_FIREBALLEX = 0x11F,
  NS_MSG_DESC_NPCSKILL_BLUNTBACK = 0x120,
  NS_MSG_DESC_NPCSKILL_WINDBLADE = 0x121,
  NS_MSG_DESC_NPCSKILL_DUMP = 0x122,
  NS_MSG_DESC_NPCSKILL_LOWCOUNTER = 0x123,
  NS_MSG_DESC_NPCSKILL_MUSCLEBREAKER = 0x124,
  NS_MSG_DESC_NPCSKILL_FIREWALL = 0x125,
  NS_MSG_DESC_NPCSKILL_IMPALEDOOM = 0x126,
  NS_MSG_DESC_NPCSKILL_DOUBLERUSH = 0x127,
  NS_MSG_DESC_NPCSKILL_BERSERKER = 0x128,
  NS_MSG_DESC_NPCSKILL_GROUPDIVINEWEAPON = 0x129,
  NS_MSG_DESC_NPCSKILL_STONESKIN = 0x12A,
  NS_MSG_DESC_NPCSKILL_RAGE = 0x12B,
  NS_MSG_DESC_NPCSKILL_CHAOS = 0x12C,
  NS_MSG_DESC_NPCSKILL_BOMB = 0x12D,
  NS_MSG_DESC_NPCSKILL_BIGTHORN = 0x12E,
  NS_MSG_DESC_NPCSKILL_ICEBOLT = 0x12F,
  NS_MSG_DESC_NPCSKILL_REDSWIPE = 0x130,
  NS_MSG_DESC_NPCSKILL_INTERRUPTIONATTACK = 0x131,
  NS_MSG_DESC_NPCSKILL_IMPACTATTACK = 0x132,
  NS_MSG_DESC_NPCSKILL_REFECTIONWAVE = 0x133,
  NS_MSG_DESC_NPCSKILL_HAZARDSTORM = 0x134,
  NS_MSG_DESC_NPCSKILL_ATTACKPOWER = 0x135,
  NS_MSG_DESC_NPCSKILL_ASSAULTDISEASE = 0x136,
  NS_MSG_DESC_NPCSKILL_FATALPOSION = 0x137,
  NS_MSG_DESC_NPCSKILL_FATALSTORM = 0x138,
  NS_MSG_DESC_NPCSKILL_RECOVERYFIELD = 0x139,
  NS_MSG_DESC_NPCSKILL_DEATHSIGN = 0x13A,
  NS_MSG_DESC_NPCSKILL_MENTALBREAKER = 0x13B,
  NS_MSG_DESC_NPCSKILL_PROTECTCURE = 0x13C,
  NS_MSG_DESC_NPCSKILL_HEAVYQUAKE = 0x13D,
  NS_MSG_DESC_NPCSKILL_FURY = 0x13E,
  NS_MSG_DESC_NPCSKILL_MORTALATTACK = 0x13F,
  NS_MSG_DESC_NPCSKILL_MORTALBLAST = 0x140,
  NS_MSG_DESC_NPCSKILL_ROOTBREATH = 0x141,
  NS_MSG_DESC_NPCSKILL_GROUPDIVINEWEAPONEX = 0x142,
  NS_MSG_DESC_NPCSKILL_BLOCKCURSE = 0x143,
  NS_MSG_DESC_NPCSKILL_BLOCKSLOW = 0x144,
  NS_MSG_DESC_NPCSKILL_BLOCKRAGE = 0x145,
  NS_MSG_DESC_NPCSKILL_BLOCKSTUN = 0x146,
  NS_MSG_DESC_NPCSKILL_BLOCKSLEEP = 0x147,
  NS_MSG_DESC_NPCSKILL_BLOCKBOMB1 = 0x148,
  NS_MSG_DESC_NPCSKILL_BLOCKBOMB2 = 0x149,
  NS_MSG_DESC_NPCSKILL_MASSDEATHSIGN = 0x14A,
  NS_MSG_DESC_NPCSKILL_GROUPHEALEX2 = 0x14B,
  NS_MSG_DESC_NPCSKILL_GROUPHEALEX3 = 0x14C,
  NS_MSG_DESC_NPCSKILL_HARDATTACKEX2 = 0x14D,
  NS_MSG_DESC_NPCSKILL_DEATHHEALING = 0x14E,
  NS_MSG_DESC_NPCSKILL_ABSOLUTEPOWER = 0x14F,
  NS_MSG_DESC_NPCSKILL_PROTECTFIELD = 0x150,
  NS_MSG_DESC_NPCSKILL_WALKDAMAGEEX = 0x151,
  NS_MSG_DESC_NPCSKILL_WARCRY = 0x152,
  NS_MSG_DESC_NPCSKILL_HOLYSTORM = 0x153,
  NS_MSG_DESC_NPCSKILL_GROUPDIVINEDEPENSEEX = 0x154,
  NS_MSG_DESC_NPCSKILL_MASSDEADLYPOISONEX = 0x155,
  NS_MSG_DESC_BUFF_DP = 0x156,
  NS_MSG_DESC_BUFF_AP = 0x157,
  NS_MSG_DESC_BUFF_SPEED = 0x158,
  NS_MSG_DESC_BUFF_MAXHP = 0x159,
  NS_MSG_DESC_BUFF_Rs = 0x15A,
  NS_MSG_DESC_BUFF_AR = 0x15B,
  NS_MSG_DESC_BUFF_MA = 0x15C,
  NS_MSG_DESC_BUFF_BERSERKER = 0x15D,
  NS_MSG_DESC_BUFF_DUMP = 0x15E,
  NS_MSG_DESC_BUFF_THORN = 0x15F,
  NS_MSG_DESC_BUFF_LOWCOUNTER = 0x160,
  NS_MSG_DESC_BUFF_SAVEEXP = 0x161,
  NS_MSG_DESC_BUFF_CLARITY = 0x162,
  NS_MSG_DESC_BUFF_CLARITYEX = 0x163,
  NS_MSG_DESC_BUFF_PET = 0x164,
  NS_MSG_DESC_BUFF_TAME = 0x165,
  NS_MSG_DESC_BUFF_SUMMON = 0x166,
  NS_MSG_DESC_BUFF_RANGEBLOCK = 0x167,
  NS_MSG_DESC_BUFF_FULLSWINE = 0x168,
  NS_MSG_DESC_BUFF_TENDMELEE = 0x169,
  NS_MSG_DESC_BUFF_TENDRANGE = 0x16A,
  NS_MSG_DESC_BUFF_MYTHICBONE = 0x16B,
  NS_MSG_DESC_BUFF_MYTHICOCEAN = 0x16C,
  NS_MSG_DESC_BUFF_MYTHICFORCE = 0x16D,
  NS_MSG_DESC_BUFF_HPDRAIN = 0x16E,
  NS_MSG_DESC_BUFF_POISON = 0x16F,
  NS_MSG_DESC_BUFF_SLOW = 0x170,
  NS_MSG_DESC_BUFF_RAGE = 0x171,
  NS_MSG_DESC_BUFF_ROOT = 0x172,
  NS_MSG_DESC_BUFF_STUN = 0x173,
  NS_MSG_DESC_BUFF_SLEEP = 0x174,
  NS_MSG_DESC_BUFF_CHAOS = 0x175,
  NS_MSG_DESC_BUFF_CURSE = 0x176,
  NS_MSG_DESC_BUFF_WEAPONBREAK = 0x177,
  NS_MSG_DESC_BUFF_ARMORBREAK = 0x178,
  NS_MSG_DESC_BUFF_KILGICIAN = 0x179,
  NS_MSG_DESC_BUFF_BONEBREAK = 0x17A,
  NS_MSG_DESC_BUFF_TRANQUIL = 0x17B,
  NS_MSG_DESC_BUFF_BRAINSHOCK = 0x17C,
  NS_MSG_DESC_BUFF_AC = 0x17D,
  NS_MSG_DESC_BUFF_WEAPONSTICK = 0x17E,
  NS_MSG_DESC_BUFF_TRANSFER = 0x17F,
  NS_MSG_DESC_BUFF_RIDER = 0x180,
  NS_MSG_DESC_BUFF_DWELLDEITY = 0x181,
  NS_MSG_DESC_BUFF_DWELLGOAT = 0x182,
  NS_MSG_DESC_BUFF_BLOODOCEAN = 0x183,
  NS_MSG_DESC_BUFF_IMMUNDEBUFF = 0x184,
  NS_MSG_DESC_BUFF_INSERTCOAL = 0x185,
  NS_MSG_DESC_BUFF_SIGNTARGET = 0x186,
  NS_MSG_DESC_BUFF_FULLBARREL = 0x187,
  NS_MSG_DESC_BUFF_INSPIRATION = 0x188,
  NS_MSG_DESC_BUFF_DELAYATTACK = 0x189,
  NS_MSG_DESC_BUFF_NEEDLECOUNTER = 0x18A,
  NS_MSG_DESC_BUFF_REDPOWDER = 0x18B,
  NS_MSG_DESC_BUFF_HOLYDEFENSE = 0x18C,
  NS_MSG_DESC_BUFF_NOBLESHIELD = 0x18D,
  NS_MSG_DESC_BUFF_DWELLHERO = 0x18E,
  NS_MSG_DESC_BUFF_IMMUNSLEEP = 0x18F,
  NS_MSG_DESC_BUFF_IMMUNSLOW = 0x190,
  NS_MSG_DESC_BUFF_IMMUNROOT = 0x191,
  NS_MSG_DESC_BUFF_IMMUNRAGE = 0x192,
  NS_MSG_DESC_BUFF_IMMUNPOISON = 0x193,
  NS_MSG_DESC_BUFF_IMMUNSTUN = 0x194,
  NS_MSG_DESC_BUFF_ASPECVOLITION = 0x195,
  NS_MSG_DESC_BUFF_WEAVEILLUSION = 0x196,
  NS_MSG_DESC_BUFF_DPBREAK = 0x197,
  NS_MSG_DESC_BUFF_TAUNT = 0x198,
  NS_MSG_DESC_BUFF_POWERSTAFF = 0x199,
  NS_MSG_DESC_BUFF_MACHINESHIELD = 0x19A,
  NS_MSG_DESC_BUFF_MACHINEPROTECTER = 0x19B,
  NS_MSG_DESC_BUFF_BATTLE = 0x19C,
  NS_MSG_DESC_BUFF_AUTOSKILL = 0x19D,
  NS_MSG_DESC_BUFF_LIMITHPRECOVERY = 0x19E,
  NS_MSG_DESC_BUFF_EXPUP = 0x19F,
  NS_MSG_DESC_BUFF_EXPUP_PARTY = 0x1A0,
  NS_MSG_DESC_BUFF_MININGUP = 0x1A1,
  NS_MSG_DESC_BUFF_CURSEPROPERTY = 0x1A2,
  NS_MSG_DESC_BUFF_AMULETPROPERTY = 0x1A3,
  NS_MSG_DESC_BUFF_FIRE = 0x1A4,
  NS_MSG_DESC_BUFF_WPMA = 0x1A5,
  NS_MSG_DESC_BUFF_DPPERSKILL = 0x1A6,
  NS_MSG_DESC_BUFF_DPPERPREMIUM = 0x1A7,
  NS_MSG_DESC_BUFF_DR = 0x1A8,
  NS_MSG_DESC_BUFF_DPBEAST = 0x1A9,
  NS_MSG_DESC_BUFF_APBEAST = 0x1AA,
  NS_MSG_DESC_BUFF_HIDDEN = 0x1AB,
  NS_MSG_DESC_BUFF_RSPER = 0x1AC,
  NS_MSG_DESC_BUFF_NSTANK = 0x1AD,
  NS_MSG_DESC_BUFF_SPEEDBEAST = 0x1AE,
  NS_MSG_DESC_BUFF_TPUP = 0x1AF,
  NS_MSG_DESC_BUFF_DASH = 0x1B0,
  NS_MSG_DESC_BUFF_DEATHHEALING = 0x1B1,
  NS_MSG_DESC_BUFF_CRUSHDIVISION = 0x1B2,
  NS_MSG_DESC_BUFF_SUMMONMASTER = 0x1B3,
  NS_MSG_DESC_BUFF_PROTECTFIELD = 0x1B4,
  NS_MSG_DESC_BUFF_ABSOLUTPOWER = 0x1B5,
  NS_MSG_DESC_BUFF_MAXHPEXPAND = 0x1B6,
  NS_MSG_DESC_BUFF_EXPUPSHORT = 0x1B7,
  NS_MSG_DESC_BUFF_EXPPENALTY = 0x1B8,
  NS_MSG_DESC_BUFF_NOVICESHEILD = 0x1B9,
  NS_MSG_DESC_BUFF_OVERLAPEXPUP1 = 0x1BA,
  NS_MSG_DESC_BUFF_OVERLAPEXPUP2 = 0x1BB,
  NS_MSG_DESC_BUFF_OVERLAPEXPUP3 = 0x1BC,
  NS_MSG_DESC_BUFF_OVERLAPEXPUP4 = 0x1BD,
  NS_MSG_DESC_BUFF_OVERLAPEXPUP5 = 0x1BE,
  NS_MSG_DESC_BUFF_OVERLAPEXPUP6 = 0x1BF,
  NS_MSG_DESC_BUFF_VITALATTACK = 0x1C0,
  NS_MSG_DESC_BUFF_SIEGEMODE = 0x1C1,
  NS_MSG_DESC_BUFF_OVERLAPGOLDUP1 = 0x1C2,
  NS_MSG_DESC_BUFF_OVERLAPGOLDUP2 = 0x1C3,
  NS_MSG_DESC_BUFF_OVERLAPGOLDUP3 = 0x1C4,
  NS_MSG_DESC_BUFF_OVERLAPGOLDUP4 = 0x1C5,
  NS_MSG_DESC_BUFF_OVERLAPGOLDUP5 = 0x1C6,
  NS_MSG_DESC_BUFF_OVERLAPGOLDUP6 = 0x1C7,
  NS_MSG_DESC_BUFF_IMMUNPOISONEX = 0x1C8,
  NS_MSG_DESC_BUFF_PERSONALSIEGEWEAPON = 0x1C9,
  NS_MSG_DESC_BUFF_DUTYFRONT = 0x1CA,
  NS_MSG_DESC_BUFF_MAXSTAMP = 0x1CB,
  NS_MSG_DESC_BUFF_NEOSTEAMSHIELD = 0x1CC,
  NS_MSG_DESC_BUFF_NEOSTEAMDECREASE = 0x1CD,
  NS_MSG_DESC_BUFF_DEVINESHIELD = 0x1CE,
  NS_MSG_DESC_BUFF_IMMUNINCREASE = 0x1CF,
  NS_MSG_DESC_BUFF_RECOVERYSTUN = 0x1D0,
  NS_MSG_DESC_BUFF_OPTION_STR = 0x1D1,
  NS_MSG_DESC_BUFF_OPTION_DEX = 0x1D2,
  NS_MSG_DESC_BUFF_OPTION_CON = 0x1D3,
  NS_MSG_DESC_BUFF_OPTION_INT = 0x1D4,
  NS_MSG_DESC_BUFF_OPTION_MAXHP = 0x1D5,
  NS_MSG_DESC_BUFF_OPTION_STA = 0x1D6,
  NS_MSG_DESC_BUFF_OPTION_MP = 0x1D7,
  NS_MSG_DESC_BUFF_OPTION_AP = 0x1D8,
  NS_MSG_DESC_BUFF_OPTION_MA = 0x1D9,
  NS_MSG_DESC_BUFF_OPTION_DP = 0x1DA,
  NS_MSG_DESC_BUFF_OPTION_AR = 0x1DB,
  NS_MSG_DESC_BUFF_OPTION_DR = 0x1DC,
  NS_MSG_DESC_BUFF_OPTION_RS = 0x1DD,
  NS_MSG_DESC_BUFF_OPTION_WPMA = 0x1DE,
  NS_MSG_DESC_BUFF_OPTION_DPPER = 0x1DF,
  NS_MSG_DESC_BUFF_OPTION_DPBEAST = 0x1E0,
  NS_MSG_DESC_BUFF_OPTION_APBEAST = 0x1E1,
  NS_MSG_DESC_BUFF_OPTION_RSPER = 0x1E2,
  NS_MSG_DESC_BUFF_OPTION_MOVESPEED = 0x1E3,
  NS_MSG_DESC_BUFF_OPTION_ATTACKSPEED = 0x1E4,
  NS_MSG_DESC_BUFF_OPTION_DEFENSEDAMAGE = 0x1E5,
  NS_MSG_DESC_BUFF_OPTION_POISON = 0x1E6,
  NS_MSG_DESC_BUFF_OPTION_LOWCOUNTER = 0x1E7,
  NS_MSG_DESC_BUFF_OPTION_THORN = 0x1E8,
  NS_MSG_DESC_BUFF_OPTION_HPDRAIN = 0x1E9,
  NS_MSG_DESC_BUFF_OPTION_RANGEBLOCK = 0x1EA,
  NS_MSG_DESC_BUFF_OPTION_FULLSWINE = 0x1EB,
  NS_MSG_DESC_BUFF_OPTION_SAVEEXP = 0x1EC,
  NS_MSG_DESC_BUFF_OPTION_TRANQUIL = 0x1ED,
  NS_MSG_DESC_BUFF_OPTION_WEAPONSTICK1 = 0x1EE,
  NS_MSG_DESC_BUFF_OPTION_WEAPONSTICK2 = 0x1EF,
  NS_MSG_DESC_BUFF_OPTION_IMMUNDEBUFF = 0x1F0,
  NS_MSG_DESC_BUFF_OPTION_INSERTCOAL = 0x1F1,
  NS_MSG_DESC_BUFF_OPTION_BRAINSHOCK = 0x1F2,
  NS_MSG_DESC_BUFF_OPTION_SIGNTARGET = 0x1F3,
  NS_MSG_DESC_BUFF_OPTION_FULLBARREL = 0x1F4,
  NS_MSG_DESC_BUFF_OPTION_INSPIRATION = 0x1F5,
  NS_MSG_DESC_BUFF_OPTION_BONEBREAK = 0x1F6,
  NS_MSG_DESC_BUFF_OPTION_DELAYATTACK = 0x1F7,
  NS_MSG_DESC_BUFF_OPTION_NEEDLECOUNTER = 0x1F8,
  NS_MSG_DESC_BUFF_OPTION_REDPOWDER = 0x1F9,
  NS_MSG_DESC_BUFF_OPTION_IMMUNSLEEP = 0x1FA,
  NS_MSG_DESC_BUFF_OPTION_IMMUNSLOW = 0x1FB,
  NS_MSG_DESC_BUFF_OPTION_IMMUNROOT = 0x1FC,
  NS_MSG_DESC_BUFF_OPTION_IMMUNRAGE = 0x1FD,
  NS_MSG_DESC_BUFF_OPTION_IMMUNPOISON = 0x1FE,
  NS_MSG_DESC_BUFF_OPTION_IMMUNSTUN = 0x1FF,
  NS_MSG_DESC_BUFF_OPTION_WEAVEILLUSION = 0x200,
  NS_MSG_DESC_BUFF_OPTION_POWERSTAFF = 0x201,
  NS_MSG_DESC_BUFF_OPTION_KILGICIAN = 0x202,
  NS_MSG_DESC_BUFF_OPTION_MACHINESHIELD = 0x203,
  NS_MSG_DESC_BUFF_OPTION_MACHINEPROTECTER = 0x204,
  NS_MSG_DESC_BUFF_OPTION_EXPUP = 0x205,
  NS_MSG_DESC_BUFF_OPTION_GOLDUP = 0x206,
  NS_MSG_DESC_BUFF_OPTION_MININGUP = 0x207,
  NS_MSG_DESC_BUFF_OPTION_DURTIME_UNLIMIT = 0x208,
  NS_MSG_DESC_BUFF_OPTION_DURTIME_HOUR = 0x209,
  NS_MSG_DESC_BUFF_OPTION_DURTIME_MIN = 0x20A,
  NS_MSG_DESC_BUFF_OPTION_DURTIME_SEC = 0x20B,
  NS_MSG_DESC_BUFF_OPTION_CURSEPROPERTY = 0x20C,
  NS_MSG_DESC_BUFF_OPTION_AMULETPROPERTY = 0x20D,
  NS_MSG_DESC_BUFF_OPTION_HIDDEN = 0x20E,
  NS_MSG_DESC_BUFF_OPTION_NSTANK = 0x20F,
  NS_MSG_DESC_BUFF_OPTION_TPUP = 0x210,
  NS_MSG_DESC_BUFF_OPTION_DEATHHEALING = 0x211,
  NS_MSG_DESC_BUFF_OPTION_CRUSHDIVISION = 0x212,
  NS_MSG_DESC_RACE_NAME1 = 0x213,
  NS_MSG_DESC_RACE_NAME2 = 0x214,
  NS_MSG_DESC_RACE_NAME3 = 0x215,
  NS_MSG_DESC_PET_NAME1 = 0x216,
  NS_MSG_DESC_PET_NAME2 = 0x217,
  NS_MSG_DESC_PET_NAME3 = 0x218,
  NS_MSG_DESC_PARTY_NAME = 0x219,
  NS_MSG_DESC_NOTIFY = 0x21A,
  NS_MSG_DESC_LOCAL_NOTIFY = 0x21B,
  NS_MSG_DESC_NEWS = 0x21C,
  NS_MSG_DESC_JOB_M_FIGHTER = 0x21D,
  NS_MSG_DESC_JOB_M_WARRIOR = 0x21E,
  NS_MSG_DESC_JOB_M_PALADIN = 0x21F,
  NS_MSG_DESC_JOB_M_MAGICIAN = 0x220,
  NS_MSG_DESC_JOB_M_WIZARD = 0x221,
  NS_MSG_DESC_JOB_M_SUMMONER = 0x222,
  NS_MSG_DESC_JOB_M_TECHNICIAN = 0x223,
  NS_MSG_DESC_JOB_M_ENGINEER = 0x224,
  NS_MSG_DESC_JOB_M_BLACKSMITH = 0x225,
  NS_MSG_DESC_JOB_M_ROGUE = 0x226,
  NS_MSG_DESC_JOB_M_HUNTER = 0x227,
  NS_MSG_DESC_JOB_M_THIEF = 0x228,
  NS_MSG_DESC_JOB_T_FIGHTER = 0x229,
  NS_MSG_DESC_JOB_T_WARRIOR = 0x22A,
  NS_MSG_DESC_JOB_T_PALADIN = 0x22B,
  NS_MSG_DESC_JOB_T_MAGICIAN = 0x22C,
  NS_MSG_DESC_JOB_T_WIZARD = 0x22D,
  NS_MSG_DESC_JOB_T_SUMMONER = 0x22E,
  NS_MSG_DESC_JOB_T_TECHNICIAN = 0x22F,
  NS_MSG_DESC_JOB_T_ENGINEER = 0x230,
  NS_MSG_DESC_JOB_T_BLACKSMITH = 0x231,
  NS_MSG_DESC_JOB_T_ROGUE = 0x232,
  NS_MSG_DESC_JOB_T_HUNTER = 0x233,
  NS_MSG_DESC_JOB_T_THIEF = 0x234,
  NS_MSG_DESC_JOB_N_FIGHTER = 0x235,
  NS_MSG_DESC_JOB_N_WARRIOR = 0x236,
  NS_MSG_DESC_JOB_N_PALADIN = 0x237,
  NS_MSG_DESC_JOB_N_MAGICIAN = 0x238,
  NS_MSG_DESC_JOB_N_WIZARD = 0x239,
  NS_MSG_DESC_JOB_N_SUMMONER = 0x23A,
  NS_MSG_DESC_JOB_N_TECHNICIAN = 0x23B,
  NS_MSG_DESC_JOB_N_ENGINEER = 0x23C,
  NS_MSG_DESC_JOB_N_BLACKSMITH = 0x23D,
  NS_MSG_DESC_JOB_N_ROGUE = 0x23E,
  NS_MSG_DESC_JOB_N_HUNTER = 0x23F,
  NS_MSG_DESC_JOB_N_THIEF = 0x240,
  NS_MSG_DESC_ITEM_EQUIP = 0x241,
  NS_MSG_DESC_ITEM_SWORD = 0x242,
  NS_MSG_DESC_ITEM_BLUNT = 0x243,
  NS_MSG_DESC_ITEM_GUN = 0x244,
  NS_MSG_DESC_ITEM_TWOHANDED_SWORD = 0x245,
  NS_MSG_DESC_ITEM_TWOHANDED_SPEAR = 0x246,
  NS_MSG_DESC_ITEM_TWOHANDED_BLUNT = 0x247,
  NS_MSG_DESC_ITEM_TWOHANDED_STAFF = 0x248,
  NS_MSG_DESC_ITEM_TWOHANDED_BOW = 0x249,
  NS_MSG_DESC_ITEM_TWOHANDED_GUN = 0x24A,
  NS_MSG_DESC_ITEM_HEAD = 0x24B,
  NS_MSG_DESC_ITEM_UPPER = 0x24C,
  NS_MSG_DESC_ITEM_GLOVE = 0x24D,
  NS_MSG_DESC_ITEM_SHIELD = 0x24E,
  NS_MSG_DESC_ITEM_LOWER = 0x24F,
  NS_MSG_DESC_ITEM_FOOT = 0x250,
  NS_MSG_DESC_ITEM_ROBE = 0x251,
  NS_MSG_DESC_ITEM_CLOAK = 0x252,
  NS_MSG_DESC_ITEM_NSTANK = 0x253,
  NS_MSG_DESC_ITEM_NECKLACE = 0x254,
  NS_MSG_DESC_ITEM_EARRING = 0x255,
  NS_MSG_DESC_ITEM_RING = 0x256,
  NS_MSG_DESC_ITEM_ARMLET = 0x257,
  NS_MSG_DESC_ITEM_BELT = 0x258,
  NS_MSG_DESC_ITEM_OPTION_STR = 0x259,
  NS_MSG_DESC_ITEM_OPTION_CON = 0x25A,
  NS_MSG_DESC_ITEM_OPTION_DEX = 0x25B,
  NS_MSG_DESC_ITEM_OPTION_INT = 0x25C,
  NS_MSG_DESC_ITEM_OPTION_HP = 0x25D,
  NS_MSG_DESC_ITEM_OPTION_MP = 0x25E,
  NS_MSG_DESC_ITEM_OPTION_STA = 0x25F,
  NS_MSG_DESC_ITEM_OPTION_MA = 0x260,
  NS_MSG_DESC_ITEM_OPTION_RS = 0x261,
  NS_MSG_DESC_ITEM_OPTION_HPREGEN = 0x262,
  NS_MSG_DESC_ITEM_OPTION_MPREGEN = 0x263,
  NS_MSG_DESC_ITEM_OPTION_STAREGEN = 0x264,
  NS_MSG_DESC_ITEM_OPTION_HPRECOVERY = 0x265,
  NS_MSG_DESC_ITEM_OPTION_MPRECOVERY = 0x266,
  NS_MSG_DESC_ITEM_OPTION_STARECOVERY = 0x267,
  NS_MSG_DESC_ITEM_OPTION_LEVELDOWN = 0x268,
  NS_MSG_DESC_ITEM_OPTION_AP = 0x269,
  NS_MSG_DESC_ITEM_OPTION_DP = 0x26A,
  NS_MSG_DESC_ITEM_OPTION_ATTACKSPEED = 0x26B,
  NS_MSG_DESC_ITEM_OPTION_NSSKILL = 0x26C,
  NS_MSG_DESC_ITEM_OPTION_NSGRADE = 0x26D,
  NS_MSG_DESC_ITEM_OPTION_GRADE = 0x26E,
  NS_MSG_DESC_ITEM_OPTION_SPECIALGRADE = 0x26F,
  NS_MSG_DESC_ITEM_OPTION_NSTANK = 0x270,
  NS_MSG_DESC_ITEM_OPTION_MOBFOOD = 0x271,
  NS_MSG_DESC_ITEM_OPTION_PETFOOD = 0x272,
  NS_MSG_DESC_ITEM_OPTION_MOVESPEED = 0x273,
  NS_MSG_DESC_ITEM_OPTION_EXPUP = 0x274,
  NS_MSG_DESC_ITEM_OPTION_MININGUP = 0x275,
  NS_MSG_DESC_ITEM_OPTION_DURTIME_MIN = 0x276,
  NS_MSG_DESC_ITEM_OPTION_DURTIME_SEC = 0x277,
  NS_MSG_DESC_ITEM_OPTION_REMAIN_DAYS = 0x278,
  NS_MSG_DESC_ITEM_OPTION_REMAIN_UNLIMITED = 0x279,
  NS_MSG_DESC_ITEM_OPTION_BUNDLE_GOLD = 0x27A,
  NS_MSG_DESC_ITEM_OPTION_SET = 0x27B,
  NS_MSG_DESC_ITEM_OPTION_RANK = 0x27C,
  NS_MSG_DESC_ITEM_OPTION_DPPER = 0x27D,
  NS_MSG_DESC_ITEM_OPTION_TPUP = 0x27E,
  NS_MSG_DESC_ITEM_OPTION_REMAIN_MINS = 0x27F,
  NS_MSG_DESC_ITEM_OPTION_TPPOTION = 0x280,
  NS_MSG_DESC_ITEM_OPTION_MAXHPEXPAND = 0x281,
  NS_MSG_DESC_ITEM_OPTION_DASHPOTION = 0x282,
  NS_MSG_DESC_ITEM_OPTION_BIND_DAYS = 0x283,
  NS_MSG_DESC_ITEM_OPTION_IMMUNPOISIONPOTION = 0x284,
  NS_MSG_DESC_ITEM_OPTION_FULLSWINE = 0x285,
  NS_MSG_DESC_ITEM_OPTION_CURE = 0x286,
  NS_MSG_DESC_ITEM_OPTION_MAXSTAMP = 0x287,
  NS_MSG_DESC_ITEM_OPTION_GOLDUP = 0x288,
  NS_MSG_DESC_ITEM_OPTION_TRACEDARKSTONE = 0x289,
  NS_MSG_DESC_ITEM_KIND_SEMIRARE = 0x28A,
  NS_MSG_DESC_ITEM_KIND_RARE = 0x28B,
  NS_MSG_DESC_ITEM_KIND_QUEST = 0x28C,
  NS_MSG_DESC_ITEM_KIND_REVERT = 0x28D,
  NS_MSG_DESC_ITEM_KIND_SOCKET = 0x28E,
  NS_MSG_DESC_ITEM_KIND_STEAM = 0x28F,
  NS_MSG_DESC_ITEM_KIND_RARESTEAM = 0x290,
  NS_MSG_DESC_ITEM_KIND_ANCIENTSTEAM = 0x291,
  NS_MSG_DESC_ITEM_KIND_CORE = 0x292,
  NS_MSG_DESC_ITEM_KIND_ANCIENTCORE = 0x293,
  NS_MSG_DESC_ITEM_KIND_NORMAL = 0x294,
  NS_MSG_DESC_ITEM_KIND_COSTUME = 0x295,
  NS_MSG_DESC_ITEM_ATTACKDISTANCE = 0x296,
  NS_MSG_DESC_ITEM_ATTACKDAMAGE = 0x297,
  NS_MSG_DESC_ITEM_MAGICDAMAGE = 0x298,
  NS_MSG_DESC_ITEM_ATTACKSPEED = 0x299,
  NS_MSG_DESC_ITEM_DEFENSEDAMAGE = 0x29A,
  NS_MSG_DESC_ITEM_USE_CLASS = 0x29B,
  NS_MSG_DESC_ITEM_USE_RACE = 0x29C,
  NS_MSG_DESC_ITEM_PRODUCT_SKILL = 0x29D,
  NS_MSG_DESC_ITEM_PRODUCT_MATERIAL = 0x29E,
  NS_MSG_DESC_ITEM_PRODUCT_NS = 0x29F,
  NS_MSG_DESC_ITEM_PRODUCT_RATE = 0x2A0,
  NS_MSG_DESC_ITEM_PREMIUM_INFO_TITLE = 0x2A1,
  NS_MSG_DESC_ITEM_PREMIUM_INFO_ITEM = 0x2A2,
  NS_MSG_DESC_ITEM_PREMIUM_INFO_ITEM_UNLIMITED = 0x2A3,
  NS_MSG_DESC_ITEM_PREMIUM_TIMEOUT = 0x2A4,
  NS_MSG_DESC_ITEM_PREMIUM_USE_ITEM = 0x2A5,
  NS_MSG_DESC_ITEM_PREMIUM_USE_ITEM_UNLIMITED = 0x2A6,
  NS_MSG_DESC_ITEM_PREMIUM_USE_ITEM_MIN = 0x2A7,
  NS_MSG_DESC_QUEST_STEP_SUMMARY = 0x2A8,
  NS_MSG_DESC_QUEST_TIME_OVER = 0x2A9,
  NS_MSG_DESC_QUEST_TIME_SEC = 0x2AA,
  NS_MSG_DESC_QUEST_TIME_MIN = 0x2AB,
  NS_MSG_DESC_QUEST_TIME_HOUR = 0x2AC,
  NS_MSG_DESC_QUEST_SUMMARY = 0x2AD,
  NS_MSG_DESC_QUEST_REWARD = 0x2AE,
  NS_MSG_DESC_QUEST_REWARD_ITEM = 0x2AF,
  NS_MSG_DESC_QUEST_REWARD_GOLD = 0x2B0,
  NS_MSG_DESC_QUEST_REWARD_EXP = 0x2B1,
  NS_MSG_DESC_QUEST_REWARD_UNKNOWN = 0x2B2,
  NS_MSG_DESC_QUEST_REWARD_REALMPOINT = 0x2B3,
  NS_MSG_DESC_QUEST_REWARD_RANDOM_EXP = 0x2B4,
  NS_MSG_DESC_QUEST_REWARD_TITLE = 0x2B5,
  NS_MSG_CHAT_CMD_HI = 0x2B6,
  NS_MSG_CHAT_CMD_LAUGH = 0x2B7,
  NS_MSG_CHAT_CMD_ANGER = 0x2B8,
  NS_MSG_CHAT_CMD_CHARGE = 0x2B9,
  NS_MSG_CHAT_CMD_FLEE = 0x2BA,
  NS_MSG_CHAT_CMD_CELEBRATE = 0x2BB,
  NS_MSG_CHAT_CMD_CHEER = 0x2BC,
  NS_MSG_CHAT_CMD_RESPECT = 0x2BD,
  NS_MSG_CHAT_CMD_PROVOKE = 0x2BE,
  NS_MSG_CHAT_CMD_SALUTE = 0x2BF,
  NS_MSG_CHAT_CMD_OTL = 0x2C0,
  NS_MSG_CHAT_CMD_HELP = 0x2C1,
  NS_MSG_CHAT_CMD_BYE = 0x2C2,
  NS_MSG_CHAT_CMD_THERE = 0x2C3,
  NS_MSG_CHAT_CMD_DANCE = 0x2C4,
  NS_MSG_CHAT_CMD_INVITE = 0x2C5,
  NS_MSG_CHAT_CMD_QUIT = 0x2C6,
  NS_MSG_CHAT_CMD_KICK = 0x2C7,
  NS_MSG_CHAT_CMD_FRIENDADD = 0x2C8,
  MS_MSG_CHAT_CMD_MEMO = 0x2C9,
  MS_MSG_CHAT_CMD_GMEMO = 0x2CA,
  NS_MSG_CHAT_CMD_CHANNEL_JOIN = 0x2CB,
  NS_MSG_CHAT_CMD_CHANNEL_QUIT = 0x2CC,
  NS_MSG_CHAT_CMD_CHANNEL_LIST = 0x2CD,
  NS_MSG_CHAT_CMD_PK_ON = 0x2CE,
  NS_MSG_CHAT_CMD_PK_OFF = 0x2CF,
  NS_MSG_CHAT_CMD_MEMO_SEND = 0x2D0,
  NS_MSG_CHAT_CMD_MEMO_NEED_ITEM = 0x2D1,
  NS_MSG_CHAT_CMD_GMEMO_NEED_ITEM = 0x2D2,
  NS_MSG_CHAT_CMD_CHANNEL_NOT_FOUND = 0x2D3,
  NS_MSG_CHAT_CMD_CHANNEL_ERROR_CREATE = 0x2D4,
  NS_MSG_CHAT_CMD_CHANNEL_ERROR_JOIN = 0x2D5,
  NS_MSG_CHAT_CMD_CHANNEL_JOIN_OK = 0x2D6,
  NS_MSG_CHAT_CMD_CHANNEL_QUIT_OK = 0x2D7,
  NS_MSG_CHAT_CMD_HELPLIST = 0x2D8,
  NS_MSG_CHAT_CMD_HELP_MSG01 = 0x2D9,
  NS_MSG_CHAT_CMD_HELP_MSG02 = 0x2DA,
  NS_MSG_CHAT_CMD_HELP_MSG03 = 0x2DB,
  NS_MSG_CHAT_CMD_HELP_MSG04 = 0x2DC,
  NS_MSG_CHAT_CMD_HELP_MSG05 = 0x2DD,
  NS_MSG_CHAT_CMD_HELP_MSG06 = 0x2DE,
  NS_MSG_CHAT_CMD_HELP_MSG07 = 0x2DF,
  NS_MSG_CHAT_CMD_HELP_MSG08 = 0x2E0,
  NS_MSG_CHAT_CMD_HELP_MSG09 = 0x2E1,
  NS_MSG_CHAT_CMD_HELP_MSG10 = 0x2E2,
  NS_MSG_CHAT_CMD_HELP_MSG11 = 0x2E3,
  NS_MSG_CHAT_CMD_HELP_MSG12 = 0x2E4,
  NS_MSG_CHAT_CMD_HELP_MSG13 = 0x2E5,
  NS_MSG_CHAT_CMD_HELP_MSG14 = 0x2E6,
  NS_MSG_CHAT_CMD_PARTY_LIST_NONE = 0x2E7,
  NS_MSG_CHAT_CMD_UNKNOWN = 0x2E8,
  NS_MSG_SERVER_FULL = 0x2E9,
  NS_MSG_RENAME_SUCCESS = 0x2EA,
  NS_MSG_RENAME_ERROR_ITEM = 0x2EB,
  NS_MSG_RENAME_ERROR_SAME_NAME = 0x2EC,
  NS_MSG_RENAME_ERROR_NAME = 0x2ED,
  NS_MSG_RENAME_ERROR_DUPLICATE = 0x2EE,
  NS_MSG_CHAT_HEAD_SYSTEM = 0x2EF,
  NS_MSG_CHAT_HEAD_NOTIFY = 0x2F0,
  NS_MSG_CHAT_HEAD_WHISPER = 0x2F1,
  NS_MSG_CHAT_HEAD_PARTY = 0x2F2,
  NS_MSG_CHAT_HEAD_GUILD = 0x2F3,
  NS_MSG_CHAT_HEAD_SPEAKER = 0x2F4,
  NS_MSG_SKILL_NEED_LEVEL = 0x2F5,
  NS_MSG_SKILL_KILGICIAN = 0x2F6,
  NS_MSG_ITEM_USE_DICE = 0x2F7,
  NS_MSG_RIDER_LIMIT_TOWN = 0x2F8,
  NS_MSG_CHAT_SYS_MSG_HI = 0x2F9,
  NS_MSG_CHAT_SYS_MSG_LAUGH = 0x2FA,
  NS_MSG_CHAT_SYS_MSG_ANGER = 0x2FB,
  NS_MSG_CHAT_SYS_MSG_CHARGE = 0x2FC,
  NS_MSG_CHAT_SYS_MSG_FLEE = 0x2FD,
  NS_MSG_CHAT_SYS_MSG_CELEBRATE = 0x2FE,
  NS_MSG_CHAT_SYS_MSG_CHEER = 0x2FF,
  NS_MSG_CHAT_SYS_MSG_RESPECT = 0x300,
  NS_MSG_CHAT_SYS_MSG_PROVOKE = 0x301,
  NS_MSG_CHAT_SYS_MSG_SALUTE = 0x302,
  NS_MSG_CHAT_SYS_MSG_OTL = 0x303,
  NS_MSG_CHAT_SYS_MSG_HELP = 0x304,
  NS_MSG_CHAT_SYS_MSG_BYE = 0x305,
  NS_MSG_CHAT_SYS_MSG_THERE = 0x306,
  NS_MSG_CHAT_SYS_MSG_DANCE = 0x307,
  NS_MSG_ITEM_ERROR_RECOMBINE = 0x308,
  NS_MSG_PET_GET_EXP = 0x309,
  NS_MSG_SKILL_DETECTION_SUCCESS = 0x30A,
  NS_MSG_SKILL_DETECTION_FAILED = 0x30B,
  NS_MSG_GET_EXP1 = 0x30C,
  NS_MSG_GET_EXP2 = 0x30D,
  NS_MSG_GET_EXP3 = 0x30E,
  NS_MSG_GET_EXP4 = 0x30F,
  NS_MSG_SKILL_NEED_TAMEMOB_LEVEL = 0x310,
  NS_MSG_REALM_STEAMCORE_M_DESTROY = 0x311,
  NS_MSG_REALM_STEAMCORE_T_DESTROY = 0x312,
  NS_MSG_CHANNEL_RVR_NAME = 0x313,
  NS_MSG_REALM_INFO_TITLE = 0x314,
  NS_MSG_REALM_INFO_EXP = 0x315,
  NS_MSG_REALM_INFO_GOLD = 0x316,
  NS_MSG_REALM_INFO_NS = 0x317,
  NS_MSG_REALM_INFO_REFORM = 0x318,
  NS_MSG_AUCTION_ADD = 0x319,
  NS_MSG_AUCTION_DELETE = 0x31A,
  NS_MSG_AUCTION_BUY = 0x31B,
  NS_MSG_AUCTION_BUY_MEMO = 0x31C,
  NS_MSG_AUCTION_BUY_GEAR_MEMO = 0x31D,
  NS_MSG_AUCTION_EXPIRE_MEMO = 0x31E,
  NS_MSG_CN_PLAYLIMIT_1HOUR = 0x31F,
  NS_MSG_CN_PLAYLIMIT_2HOUR = 0x320,
  NS_MSG_CN_PLAYLIMIT_50PER = 0x321,
  NS_MSG_CN_PLAYLIMIT_100PER = 0x322,
  NS_MSG_CN_PLAYLIMIT_PICKITEM = 0x323,
  NS_MSG_CN_PLAYLIMIT_ADULT = 0x324,
  NS_MSG_CN_PLAYLIMIT_CHILD = 0x325,
  NS_MSG_TIP_LEVEL_01_01 = 0x326,
  NS_MSG_TIP_LEVEL_01_02 = 0x327,
  NS_MSG_TIP_LEVEL_01_03 = 0x328,
  NS_MSG_TIP_LEVEL_01_04 = 0x329,
  NS_MSG_TIP_LEVEL_01_05 = 0x32A,
  NS_MSG_TIP_LEVEL_01_06 = 0x32B,
  NS_MSG_TIP_LEVEL_01_07 = 0x32C,
  NS_MSG_TIP_LEVEL_01_08 = 0x32D,
  NS_MSG_TIP_LEVEL_01_09 = 0x32E,
  NS_MSG_TIP_LEVEL_01_10 = 0x32F,
  NS_MSG_TIP_LEVEL_11_01 = 0x330,
  NS_MSG_TIP_LEVEL_11_02 = 0x331,
  NS_MSG_TIP_LEVEL_11_03 = 0x332,
  NS_MSG_TIP_LEVEL_11_04 = 0x333,
  NS_MSG_TIP_LEVEL_11_05 = 0x334,
  NS_MSG_TIP_LEVEL_11_06 = 0x335,
  NS_MSG_TIP_LEVEL_11_07 = 0x336,
  NS_MSG_TIP_LEVEL_11_08 = 0x337,
  NS_MSG_TIP_LEVEL_21_01 = 0x338,
  NS_MSG_TIP_LEVEL_21_02 = 0x339,
  NS_MSG_TIP_LEVEL_21_03 = 0x33A,
  NS_MSG_TIP_LEVEL_21_04 = 0x33B,
  NS_MSG_TIP_LEVEL_21_05 = 0x33C,
  NS_MSG_TIP_LEVEL_21_06 = 0x33D,
  NS_MSG_TIP_LEVELUP_03 = 0x33E,
  NS_MSG_TIP_LEVELUP_12 = 0x33F,
  NS_MSG_TIP_LEVELUP_50 = 0x340,
  NS_MSG_TIP_LEVELUP_70 = 0x341,
  NS_MSG_TIP_CONDITION_01 = 0x342,
  NS_MSG_TIP_CONDITION_02 = 0x343,
  NS_MSG_TIP_CONDITION_03 = 0x344,
  NS_MSG_NOTICE_LEVEL_01_01 = 0x345,
  NS_MSG_NOTICE_LEVEL_01_02 = 0x346,
  NS_MSG_NOTICE_LEVEL_10_01 = 0x347,
  NS_MSG_NOTICE_LEVEL_10_02 = 0x348,
  NS_MSG_NOTICE_LEVEL_10_03 = 0x349,
  NS_MSG_NOTICE_LEVEL_10_04 = 0x34A,
  NS_MSG_EVENT_REARLAND_LEVELUP = 0x34B,
  NS_MSG_OVERLAPEXPUP_OVER = 0x34C,
  NS_MSG_OVERLAPGOLDUP_OVER = 0x34D,
  NS_MSG_PKMODE_ON = 0x34E,
  NS_MSG_PKMODE_OFF = 0x34F,
  NS_MSG_TITLE_ADD = 0x350,
  NS_MSG_EVENT_MSG_FORMAT = 0x351,
  NS_MSG_EVENT_PUPUSUMMON = 0x352,
  NS_MSG_EVENT_MATERIALUP = 0x353,
  NS_MSG_EVENT_NEOSTEAMUP = 0x354,
  NS_MSG_EVENT_EXPUP = 0x355,
  NS_MSG_EVENT_TPUP = 0x356,
  NS_MSG_EVENT_RESOLUTIONUP = 0x357,
  NS_MSG_EVENT_NODEATHPANALTY = 0x358,
  NS_MSG_END = 0x359,
};

/* 6 */
enum $9ADEBD8A921918A39AFE0B81FE4AC4B2
{
  _Multi = 0x0,
};

/* 7 */
typedef $9ADEBD8A921918A39AFE0B81FE4AC4B2 $58DE2DA9E8DDE5DA2E2F36082422D5FD;

/* 8 */
enum $5DEB8E1FFA885809882F86DD8A64EFC2
{
  _EEN_DS = 0x4,
};

/* 9 */
enum std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl
{
  _Red = 0x0,
  _Black = 0x1,
};

/* 10 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Redbl;

/* 11 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Redbl;

/* 12 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Redbl;

/* 13 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Redbl;

/* 14 */
enum $9E02737228DF5060E759F32703142FF5
{
  _BUF_SIZE = 0x8,
};

/* 15 */
enum $B2FB91FA9CC7CF3BD50434AFDECAC47F
{
  _ALLOC_MASK = 0x7,
};

/* 16 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Redbl;

/* 17 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Redbl;

/* 18 */
enum $41147C147A022F2DF98DBD592C49293C
{
  _EEN_HID = 0x0,
};

/* 19 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Redbl;

/* 20 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Redbl;

/* 21 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Redbl;

/* 22 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Redbl;

/* 23 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Redbl;

/* 24 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Redbl;

/* 25 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Redbl;

/* 26 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Redbl;

/* 27 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Redbl;

/* 28 */
typedef $5DEB8E1FFA885809882F86DD8A64EFC2 $99CFD99EBD7400C20E845020E03D0C8E;

/* 29 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Redbl;

/* 30 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Redbl;

/* 31 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Redbl;

/* 32 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Redbl;

/* 33 */
typedef $9E02737228DF5060E759F32703142FF5 $F0551E099AE6F36F41F19B6664DCAFD9;

/* 34 */
typedef $B2FB91FA9CC7CF3BD50434AFDECAC47F $8B51C3C74DF083A54E50CA72E34056B8;

/* 35 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Redbl;

/* 36 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Redbl;

/* 37 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Redbl;

/* 38 */
enum CNSSkill::SKILLTYPE
{
  SkillType_NULL = 0x0,
  SkillType_Dummy = 0x1,
  SkillType_Passive = 0x2,
  SkillType_NormalAttack = 0x3,
  SkillType_SpecialAttack = 0x4,
  SkillType_MagicAttack = 0x5,
  SkillType_MagicAttack2 = 0x6,
  SkillType_MagicAttack3 = 0x7,
  SkillType_Heal = 0x8,
  SkillType_HealEx = 0x9,
  SkillType_Cure = 0xA,
  SkillType_Rebirth = 0xB,
  SkillType_Buff = 0xC,
  SkillType_Debuff = 0xD,
  SkillType_NSNormalAttack = 0xE,
  SkillType_NSSpecialAttack = 0xF,
  SkillType_Taming = 0x10,
  SkillType_Summoning = 0x11,
  SkillType_Teleport = 0x12,
  SkillType_Gel = 0x13,
  SkillType_BowAttack = 0x14,
  SkillType_Spawn = 0x15,
  SkillType_Resolution = 0x16,
  SkillType_Production = 0x17,
  SkillType_MobControl = 0x18,
  SkillType_PetControl = 0x19,
  SkillType_Steal = 0x1A,
  SkillType_Suicide = 0x1B,
  SkillType_Detection = 0x1C,
  SkillType_Amulet = 0x1D,
  SkillType_Bomb = 0x1E,
  SkillType_MinorNormalAttack = 0x1F,
  SkillType_NpcSpecialAttack = 0x20,
  SkillType_NormalAttackEx = 0x21,
  SkillType_DebuffAttack = 0x22,
  SkillType_SpeedyHand = 0x23,
  SkillType_KnockBack = 0x24,
  SkillType_DirectAttack = 0x25,
  SkillType_PSWControl = 0x26,
  SkillType_HitHeal = 0x27,
  SkillType_End = 0x28,
};

/* 39 */
enum CNSSkill::RANGETYPE
{
  RangeType_Weapon = 0x0,
  RangeType_Skill = 0x1,
  RangeType_Self = 0x2,
  RangeType_Party = 0x3,
  RangeType_Group = 0x4,
  RangeType_Range = 0x5,
  RangeType_Random = 0x6,
};

/* 40 */
enum CNSSkill::TARGETTYPE
{
  TargetType_Passive = 0x0,
  TargetType_Self = 0x1,
  TargetType_Buff = 0x2,
  TargetType_Attack = 0x3,
  TargetType_Party = 0x4,
};

/* 41 */
enum CNSObject::HITTYPE
{
  HitType_Normal = 0x0,
  HitType_Critical = 0x1,
  HitType_Skill = 0x2,
  HitType_MachieAblity = 0x3,
  HitType_Direct = 0x4,
};

/* 42 */
enum CNSEquipment::EQUIPMENTTYPE
{
  EquipType_NULL = 0x0,
  EquipType_Head = 0x1,
  EquipType_Upper = 0x2,
  EquipType_LeftHand = 0x3,
  EquipType_RightHand = 0x4,
  EquipType_Glove = 0x5,
  EquipType_Lower = 0x6,
  EquipType_Foot = 0x7,
  EquipType_Cloak = 0x8,
  EquipType_Necklace = 0x9,
  EquipType_Earring = 0xA,
  EquipType_Armlet = 0xB,
  EquipType_LeftRing = 0xC,
  EquipType_RightRing = 0xD,
  EquipType_Belt = 0xE,
  EquipType_NsTank = 0xF,
  EquipType_Backpack = 0x10,
  EquipType_Mask = 0x11,
  EquipType_Cap = 0x12,
  EquipType_Upper2 = 0x13,
  EquipType_Lower2 = 0x14,
  EquipType_Glove2 = 0x15,
  EquipType_Foot2 = 0x16,
  EquipType_PSW_Slot1 = 0x40,
  EquipType_PSW_Slot2 = 0x41,
  EquipType_PSW_Slot3 = 0x42,
  EquipType_End = 0x43,
};

/* 43 */
enum CNSItem::OPTIONTYPE
{
  OptionType_NULL = 0x0,
  OptionType_Str = 0x1,
  OptionType_Dex = 0x2,
  OptionType_Con = 0x3,
  OptionType_Int = 0x4,
  OptionType_Hp = 0x10,
  OptionType_Mp = 0x11,
  OptionType_Sta = 0x12,
  OptionType_Ap = 0x13,
  OptionType_Dp = 0x14,
  OptionType_Ma = 0x15,
  OptionType_Rs = 0x16,
  OptionType_Ar = 0x17,
  OptionType_Dr = 0x18,
  OptionType_HpRegen = 0x20,
  OptionType_MpRegen = 0x21,
  OptionType_StaRegen = 0x22,
  OptionType_HpSteal = 0x23,
  OptionType_MpSteal = 0x24,
  OptionType_StaSteal = 0x25,
  OptionType_HpRecovery = 0x26,
  OptionType_MpRecovery = 0x27,
  OptionType_StaRecovery = 0x28,
  OptionType_HpRecoveryPer = 0x29,
  OptionType_MpRecoveryPer = 0x2A,
  OptionType_StaRecoveryPer = 0x2B,
  OptionType_HpRecovery2 = 0x2C,
  OptionType_Rs1 = 0x30,
  OptionType_Rs2 = 0x31,
  OptionType_Rs3 = 0x32,
  OptionType_Rs4 = 0x33,
  OptionType_MoveSpeed = 0x40,
  OptionType_LevelDown = 0x41,
  OptionType_AttackSpeed = 0x42,
  OptionType_DpPer = 0x43,
  OptionType_MaxHpExpand = 0x44,
  OptionType_Grade = 0x50,
  OptionType_Rank = 0x51,
  OptionType_Set = 0x52,
  OptionType_Skill = 0x61,
  OptionType_SkillLevel = 0x62,
  OptionType_FullSwine = 0x63,
  OptionType_Cure = 0x64,
  OptionType_Bundle_ItemId = 0x70,
  OptionType_Bundle_ItemCount = 0x71,
  OptionType_Date_Available = 0x72,
  OptionType_Date_StartUsed1 = 0x73,
  OptionType_Date_StartUsed2 = 0x74,
  OptionType_Date_Available2 = 0x75,
  OptionType_Bundle_Gold = 0x76,
  OptionType_Date_EndBind1 = 0x77,
  OptionType_Date_EndBind2 = 0x78,
  OptionType_Duration_Time = 0x80,
  OptionType_Minute_Available = 0x81,
  OptionType_Minute_StartUsed1 = 0x82,
  OptionType_Minute_StartUsed2 = 0x83,
  OptionType_NsTank = 0xA0,
  OptionType_NsSkill = 0xA1,
  OptionType_NsGrade = 0xA2,
  OptionType_MobFood = 0xB0,
  OptionType_PetFood = 0xB1,
  OptionType_TpPotion = 0xB2,
  OptionType_DashPotion = 0xB3,
  OptionType_ImmunPoisonPotion = 0xB4,
  OptionType_Warp = 0xC0,
  OptionType_Call = 0xC1,
  OptionType_Dice = 0xC2,
  OptionType_ExpUp = 0xC3,
  OptionType_ExpUpParty = 0xC4,
  OptionType_MiningUp = 0xC5,
  OptionType_BlockCall = 0xC6,
  OptionType_RealmBuff = 0xC7,
  OptionType_TpUp = 0xC8,
  OptionType_Quest = 0xC9,
  OptionType_Random = 0xCA,
  OptionType_ExpUpShort = 0xCB,
  OptionType_OverlapExpUp = 0xCC,
  OptionType_OverlapGoldUp = 0xCD,
  OptionType_MaxStaMp = 0xCE,
  OptionType_TraceDarkStone = 0xCF,
};

/* 44 */
typedef CNSEquipment::EQUIPMENTTYPE CNSItem::EQUIPMENTTYPE;

/* 45 */
enum CNSItem::ITEMSEQTYPE
{
  PosType_NULL = 0x0,
  PosType_Equip = 0x1,
  PosType_Inven = 0x100,
  PosType_WareHouse = 0x1000,
  PosType_Auction = 0x2000,
  PosType_Auction2 = 0x3000,
};

/* 46 */
enum CNSItem::ITEMTYPE
{
  ItemType_Sword = 0x10,
  ItemType_Blunt = 0x11,
  ItemType_Gun = 0x12,
  ItemType_TwoHanded_Sword = 0x20,
  ItemType_TwoHanded_Spear = 0x21,
  ItemType_TwoHanded_Blunt = 0x22,
  ItemType_TwoHanded_Staff = 0x23,
  ItemType_TwoHanded_Gun = 0x24,
  ItemType_TwoHanded_Bow = 0x25,
  ItemType_Head = 0x30,
  ItemType_Upper = 0x31,
  ItemType_Glove = 0x32,
  ItemType_Shield = 0x33,
  ItemType_Lower = 0x34,
  ItemType_Foot = 0x35,
  ItemType_Robe = 0x36,
  ItemType_Cloak = 0x37,
  ItemType_NSTank = 0x38,
  ItemType_RobeLower = 0x39,
  ItemType_Necklace = 0x40,
  ItemType_Earring = 0x41,
  ItemType_Ring = 0x42,
  ItemType_Armlet = 0x43,
  ItemType_Belt = 0x44,
  ItemType_Backpack = 0x45,
  ItemType_Mask = 0x46,
  ItemType_Core = 0x51,
  ItemType_Upgrade = 0x52,
};

/* 47 */
enum CNSItem::ITEMKIND
{
  KindType_Equipment = 0x0,
  KindType_UseItem = 0x1,
  KindType_Material = 0x2,
  KindType_Upgrade = 0x3,
  KindType_UpgradePlus = 0x4,
  KindType_Core = 0xA,
  KindType_AncientCore = 0xB,
};

/* 48 */
enum CNSItem::ITEMRARE
{
  RareType_Normal = 0x0,
  RareType_SemiRare = 0x1,
  RareType_Socket = 0x2,
  RareType_Steam = 0x3,
  RareType_AncientSteam = 0x4,
  RareType_Rare = 0x5,
  RareType_RareSteam = 0x6,
  RareType_Quest = 0xA,
  RareType_Revert = 0xB,
  RareType_Costume = 0xC,
  RareType_Premium = 0x14,
  RareType_Premium_Confirm = 0x15,
};

/* 49 */
enum CNSObject::REGIONTYPE
{
  RegionType_NULL = 0x0,
  RegionType_Mystery = 0x1,
  RegionType_Technic = 0x2,
  RegionType_Nature = 0x3,
  RegionType_RopeIsle = 0x4,
  RegionType_End = 0x5,
  RegionType_Instance = 0x50,
};

/* 50 */
enum CNSBuff::BUFFTYPE
{
  BuffType_NULL = 0x0,
  BuffType_Dp = 0x1,
  BuffType_Ap = 0x2,
  BuffType_Speed = 0x3,
  BuffType_MaxHp = 0x4,
  BuffType_Rs = 0x5,
  BuffType_Ma = 0x6,
  BuffType_Ar = 0x7,
  BuffType_Glory = 0x8,
  BuffType_Berserker = 0x9,
  BuffType_Dump = 0xA,
  BuffType_Thorn = 0xB,
  BuffType_LowCounter = 0xC,
  BuffType_SaveExp = 0xD,
  BuffType_Clarity = 0xE,
  BuffType_ClarityEx = 0xF,
  BuffType_Pet = 0x10,
  BuffType_Tame = 0x11,
  BuffType_Summon = 0x12,
  BuffType_RangeBlock = 0x13,
  BuffType_FullSwine = 0x14,
  BuffType_TendMelee = 0x15,
  BuffType_TendRange = 0x16,
  BuffType_MythicBone = 0x17,
  BuffType_MythicOcean = 0x18,
  BuffType_MythicForce = 0x19,
  BuffType_HpDrain = 0x1A,
  BuffType_Ac = 0x1B,
  BuffType_WeaponStick = 0x1C,
  BuffType_Transfer = 0x1D,
  BuffType_Rider = 0x1E,
  BuffType_DwellDeity = 0x1F,
  BuffType_DwellGoat = 0x20,
  BuffType_BloodOcean = 0x21,
  BuffType_HolyDefense = 0x22,
  BuffType_ImmunDebuff = 0x23,
  BuffType_FullBarrel = 0x24,
  BuffType_Inspiration = 0x25,
  BuffType_NeedleCounter = 0x26,
  BuffType_NobleShield = 0x27,
  BuffType_DwellHero = 0x28,
  BuffType_ImmunSleep = 0x29,
  BuffType_ImmunSlow = 0x2A,
  BuffType_ImmunRoot = 0x2B,
  BuffType_ImmunRage = 0x2C,
  BuffType_ImmunPoison = 0x2D,
  BuffType_ImmunStun = 0x2E,
  BuffType_AspecVolition = 0x2F,
  BuffType_PowerStaff = 0x30,
  BuffType_MachineShield = 0x31,
  BuffType_MachineProtecter = 0x32,
  BuffType_AutoSkill = 0x33,
  BuffType_ExpUp = 0x34,
  BuffType_ExpUpParty = 0x35,
  BuffType_MiningUp = 0x36,
  BuffType_AmuletProperty = 0x37,
  BuffType_InvenExpand = 0x38,
  BuffType_WareHouseExpand = 0x39,
  BuffType_ExpUpExpand = 0x3A,
  BuffType_SiegeWeapon = 0x3B,
  BuffType_WpMa = 0x3C,
  BuffType_DpPerSkill = 0x3D,
  BuffType_DpPerPremium = 0x3E,
  BuffType_Dr = 0x3F,
  BuffType_DpBeast = 0x40,
  BuffType_ApBeast = 0x41,
  BuffType_Hidden = 0x42,
  BuffType_RsPer = 0x43,
  BuffType_NSTank = 0x44,
  BuffType_SpeedBeast = 0x45,
  BuffType_AutoMining = 0x46,
  BuffType_TpUp = 0x47,
  BuffType_Dash = 0x48,
  BuffType_CrushDivision = 0x49,
  BuffType_SummonMaster = 0x4A,
  BuffType_ProtectField = 0x4B,
  BuffType_AbsolutPower = 0x4C,
  BuffType_MaxHpExpand = 0x4D,
  BuffType_Reflection = 0x4E,
  BuffType_ExpUpShort = 0x4F,
  BuffType_ExpPenalty = 0x50,
  BuffType_RearlandKill = 0x51,
  BuffType_NoviceSheild = 0x52,
  BuffType_OverlapExpUp1 = 0x53,
  BuffType_OverlapExpUp2 = 0x54,
  BuffType_OverlapExpUp3 = 0x55,
  BuffType_OverlapExpUp4 = 0x56,
  BuffType_OverlapExpUp5 = 0x57,
  BuffType_OverlapExpUp6 = 0x58,
  BuffType_OverlapExpUp7 = 0x59,
  BuffType_OverlapExpUp8 = 0x5A,
  BuffType_OverlapExpUp9 = 0x5B,
  BuffType_OverlapExpUp10 = 0x5C,
  BuffType_PersonalSiegeWeapon = 0x5D,
  BuffType_SiegeMode = 0x5E,
  BuffType_OverlapGoldUp1 = 0x5F,
  BuffType_OverlapGoldUp2 = 0x60,
  BuffType_OverlapGoldUp3 = 0x61,
  BuffType_OverlapGoldUp4 = 0x62,
  BuffType_OverlapGoldUp5 = 0x63,
  BuffType_OverlapGoldUp6 = 0x64,
  BuffType_OverlapGoldUp7 = 0x65,
  BuffType_OverlapGoldUp8 = 0x66,
  BuffType_OverlapGoldUp9 = 0x67,
  BuffType_OverlapGoldUp10 = 0x68,
  BuffType_ImmunPoisonEx = 0x69,
  BuffType_DutyFront = 0x6A,
  BuffType_MaxStaMp = 0x6B,
  BuffType_NeoSteamShield = 0x6C,
  BuffType_NeoSteamDecrease = 0x6D,
  BuffType_DevineShield = 0x6E,
  BuffType_ImmunIncrease = 0x6F,
  BuffType_RecoveryStun = 0x70,
  BuffType_Poison = 0xC8,
  BuffType_Slow = 0xC9,
  BuffType_Rage = 0xCA,
  BuffType_Root = 0xCB,
  BuffType_Stun = 0xCC,
  BuffType_Sleep = 0xCD,
  BuffType_Chaos = 0xCE,
  BuffType_Curse = 0xCF,
  BuffType_WeaponBreak = 0xD0,
  BuffType_ArmorBreak = 0xD1,
  BuffType_Kilgician = 0xD2,
  BuffType_BoneBreak = 0xD3,
  BuffType_Tranquil = 0xD4,
  BuffType_BrainShock = 0xD5,
  BuffType_Tired = 0xD6,
  BuffType_InsertCoal = 0xD7,
  BuffType_SignTarget = 0xD8,
  BuffType_DelayAttack = 0xD9,
  BuffType_RedPowder = 0xDA,
  BuffType_WeaveIllusion = 0xDB,
  BuffType_DpBreak = 0xDC,
  BuffType_Taunt = 0xDD,
  BuffType_Battle = 0xDE,
  BuffType_LimitHpRecovery = 0xDF,
  BuffType_CurseProperty = 0xE0,
  BuffType_Fire = 0xE1,
  BuffType_DeathHealing = 0xE2,
  BuffType_Vertigo = 0xE3,
  BuffType_VitalAttack = 0xE4,
  BuffType_PSWLimit = 0xE5,
  BuffType_End = 0xE6,
};

/* 51 */
enum CNSBuff::BUFFOPTIONTYPE
{
  BuffOption_NULL = 0x0,
  BuffOption_Str = 0x1,
  BuffOption_Dex = 0x2,
  BuffOption_Con = 0x3,
  BuffOption_Int = 0x4,
  BuffOption_Hp = 0x10,
  BuffOption_Mp = 0x11,
  BuffOption_Sta = 0x12,
  BuffOption_Ap = 0x13,
  BuffOption_Dp = 0x14,
  BuffOption_Ma = 0x15,
  BuffOption_Rs = 0x16,
  BuffOption_Ar = 0x17,
  BuffOption_Dr = 0x18,
  BuffOption_MoveSpeed = 0x40,
  BuffOption_AttackSpeed = 0x41,
  BuffOption_MaxHp = 0x50,
  BuffOption_DefenseDamage = 0x51,
  BuffOption_WpMa = 0x52,
  BuffOption_DpPer = 0x53,
  BuffOption_DpBeast = 0x54,
  BuffOption_ApBeast = 0x55,
  BuffOption_RsPer = 0x56,
  BuffOption_NSTank = 0x57,
  BuffOption_MaxHpExpand = 0x58,
  BuffOption_Poison = 0xA0,
  BuffOption_LowCounter = 0xA1,
  BuffOption_Thorn = 0xA2,
  BuffOption_HpDrain = 0xA3,
  BuffOption_RangeBlock = 0xA4,
  BuffOption_FullSwine = 0xA5,
  BuffOption_SaveExp = 0xA6,
  BuffOption_Tranquil = 0xA7,
  BuffOption_WeaponStick = 0xA8,
  BuffOption_ImmunDebuff = 0xA9,
  BuffOption_InsertCoal = 0xAA,
  BuffOption_BrainShock = 0xAB,
  BuffOption_SignTarget = 0xAC,
  BuffOption_FullBarrel = 0xAD,
  BuffOption_Inspiration = 0xAE,
  BuffOption_BoneBreak = 0xAF,
  BuffOption_DelayAttack = 0xB0,
  BuffOption_NeedleCounter = 0xB1,
  BuffOption_RedPowder = 0xB2,
  BuffOption_ImmunSleep = 0xB3,
  BuffOption_ImmunSlow = 0xB4,
  BuffOption_ImmunRoot = 0xB5,
  BuffOption_ImmunRage = 0xB6,
  BuffOption_ImmunPoison = 0xB7,
  BuffOption_ImmunStun = 0xB8,
  BuffOption_AspecVolition = 0xB9,
  BuffOption_WeaveIllusion = 0xBA,
  BuffOption_Taunt = 0xBB,
  BuffOption_PowerStaff = 0xBC,
  BuffOption_Kilgician = 0xBD,
  BuffOption_MachineShield = 0xBE,
  BuffOption_MachineProtecter = 0xBF,
  BuffOption_ExpUp = 0xC0,
  BuffOption_ExpUpParty = 0xC1,
  BuffOption_MiningUp = 0xC2,
  BuffOption_CurseProperty = 0xC3,
  BuffOption_AmuletProperty = 0xC4,
  BuffOption_Hidden = 0xC5,
  BuffOption_TpUp = 0xC6,
  BuffOption_DeathHealing = 0xC7,
  BuffOption_CrushDivision = 0xC8,
  BuffOption_GoldUp = 0xC9,
};

/* 52 */
enum CNSNpcSkill::NPCSKILLTYPE
{
  NpcSkillType_Null = 0x0,
  NpcSkillType_HardAttack = 0x1,
  NpcSkillType_HardAttackEx = 0x2,
  NpcSkillType_MucusPoison = 0x3,
  NpcSkillType_Shock = 0x4,
  NpcSkillType_Shout = 0x5,
  NpcSkillType_CrippleAttack = 0x6,
  NpcSkillType_WalkDamage = 0x7,
  NpcSkillType_Claw = 0x8,
  NpcSkillType_JumpAttack = 0x9,
  NpcSkillType_Missile = 0xA,
  NpcSkillType_SelfBomb = 0xB,
  NpcSkillType_StunAttack = 0xC,
  NpcSkillType_RootAttack = 0xD,
  NpcSkillType_MassSleep = 0xE,
  NpcSkillType_MassStun = 0xF,
  NpcSkillType_MassSlow = 0x10,
  NpcSkillType_PowerBlade = 0x11,
  NpcSkillType_DeadlyPoison = 0x12,
  NpcSkillType_MassDeadlyPoison = 0x13,
  NpcSkillType_MassBrokenHammer = 0x14,
  NpcSkillType_CrazyBerserker = 0x15,
  NpcSkillType_Interruption = 0x16,
  NpcSkillType_MassInterruption = 0x17,
  NpcSkillType_AbilityReduction = 0x18,
  NpcSkillType_MassAbilityReduction = 0x19,
  NpcSkillType_RootSelfBome = 0x1A,
  NpcSkillType_ReflectionField = 0x1B,
  NpcSkillType_DarkShadow = 0x1C,
  NpcSkillType_MinorHardAttack = 0x1D,
  NpcSkillType_SelfHeal = 0x1E,
  NpcSkillType_SelfHealEx = 0x1F,
  NpcSkillType_SelfHealEx2 = 0x20,
  NpcSkillType_SelfHealEx3 = 0x21,
  NpcSkillType_GroupHeal = 0x22,
  NpcSkillType_GroupHealEx = 0x23,
  NpcSkillType_FireBall = 0x24,
  NpcSkillType_FireBallEx = 0x25,
  NpcSkillType_BluntBack = 0x26,
  NpcSkillType_WindBlade = 0x27,
  NpcSkillType_Dump = 0x28,
  NpcSkillType_LowCounter = 0x29,
  NpcSkillType_MuscleBreaker = 0x2A,
  NpcSkillType_FireWall = 0x2B,
  NpcSkillType_ImpaleDoom = 0x2C,
  NpcSkillType_DoubleRush = 0x2D,
  NpcSkillType_Berserker = 0x2E,
  NpcSkillType_GroupDivineWeapon = 0x2F,
  NpcSkillType_StoneSkin = 0x30,
  NpcSkillType_Rage = 0x31,
  NpcSkillType_Chaos = 0x32,
  NpcSkillType_Bomb = 0x33,
  NpcSkillType_BigThorn = 0x34,
  NpcSkillType_IceBolt = 0x35,
  NpcSkillType_RedSwipe = 0x36,
  NpcSkillType_InterruptionAttack = 0x37,
  NpcSkillType_ImpactAttack = 0x38,
  NpcSkillType_ReflectionWave = 0x39,
  NpcSkillType_HazardStorm = 0x3A,
  NpcSkillType_AttackPower = 0x3B,
  NpcSkillType_AssaultDisease = 0x3C,
  NpcSkillType_FatalPosion = 0x3D,
  NpcSkillType_FatalStorm = 0x3E,
  NpcSkillType_RecoveryField = 0x3F,
  NpcSkillType_DeathSign = 0x40,
  NpcSkillType_MentalBreaker = 0x41,
  NpcSkillType_ProtectCure = 0x42,
  NpcSkillType_HeavyQuake = 0x43,
  NpcSkillType_Fury = 0x44,
  NpcSkillType_MortalAttack = 0x45,
  NpcSkillType_MortalBlast = 0x46,
  NpcSkillType_RootBreath = 0x47,
  NpcSkillType_GroupDivineWeaponEx = 0x48,
  NpcSkillType_BlockCurse = 0x49,
  NpcSkillType_BlockSlow = 0x4A,
  NpcSkillType_BlockRage = 0x4B,
  NpcSkillType_BlockStun = 0x4C,
  NpcSkillType_BlockSleep = 0x4D,
  NpcSkillType_BlockBomb1 = 0x4E,
  NpcSkillType_BlockBomb2 = 0x4F,
  NpcSkillType_MassDeathSign = 0x50,
  NpcSkillType_GroupHealEx2 = 0x51,
  NpcSkillType_GroupHealEx3 = 0x52,
  NpcSkillType_HardAttackEx2 = 0x53,
  NpcSkillType_DeathHealing = 0x54,
  NpcSkillType_AbsolutePower = 0x55,
  NpcSkillType_ProtectField = 0x56,
  NpcSkillType_WalkDamageEx = 0x57,
  NpcSkillType_WarCry = 0x58,
  NpcSkillType_HolyStorm = 0x59,
  NpcSkillType_GroupDivineDefenseEx = 0x5A,
  NpcSkillType_MassDeadlyPoisonEx = 0x5B,
  NpcSkillType_Taunt = 0x5C,
  NpcSkillType_SlowAttack = 0x5D,
  NpcSkillType_Pet_Heal = 0x5E,
  NpcSkillType_Pet_BluntBack = 0x5F,
  NpcSkillType_Pet_Steal = 0x60,
  NpcSkillType_Pet_TownPortal = 0x61,
  NpcSkillType_End = 0x62,
};

/* 53 */
enum CNSNpcSkill::NPCSKILLSTATETYPE
{
  NpcSkillStateType_Null = 0x0,
  NpcSkillStateType_Idle = 0x1,
  NpcSkillStateType_AttackStart = 0x2,
  NpcSkillStateType_Attack = 0x3,
  NpcSkillStateType_RangeAttack = 0x4,
  NpcSkillStateType_HealthDryUp = 0x5,
  NpcSkillStateType_Dead = 0x6,
  NpcSkillStateType_Move = 0x7,
  NpcSkillStateType_TownPortal = 0x8,
  NpcSkillStateType_End = 0x9,
};

/* 54 */
typedef CNSItem::OPTIONTYPE CNSPcTitle::OPTIONTYPE;

/* 55 */
enum CNSDbManager::SAVEPCMODE
{
  SavePcMode_Auto = 0x0,
  SavePcMode_Logout = 0x1,
  SavePcMode_SessionLogout = 0x2,
  SavePcMode_ServerMove = 0x3,
  SavePcMode_Destroy = 0x4,
  SavePcMode_LimitLogout = 0x5,
};

/* 56 */
enum CNSSkillList::SKILLSTEP
{
  SkillStep_None = 0x0,
  SkillStep_Cast = 0x1,
  SkillStep_Use = 0x2,
  SkillStep_Cancel = 0x3,
};

/* 57 */
enum CNSCharacter::STATETYPE
{
  StateType_Stand = 0x0,
  StateType_Walk = 0x1,
  StateType_Run = 0x2,
  StateType_Sitdown = 0x3,
  StateType_Dead = 0x4,
};

/* 58 */
enum CNSMovePath::MOVETYPE
{
  MoveType_Normal = 0x0,
  MoveType_Manual = 0x1,
};

/* 59 */
enum CNSPcParty::LOOTMODE
{
  LootMode_Free = 0x0,
  LootMode_Order = 0x1,
  LootMode_Random = 0x2,
};

/* 60 */
enum CNSPc::RACETYPE
{
  RaceType_NULL = 0x0,
  RaceType_MysteryHumanMan = 0x1,
  RaceType_MysteryHumanWoman = 0x2,
  RaceType_MysteryBeastMan = 0x3,
  RaceType_MysteryBeastWoman = 0x4,
  RaceType_MysteryElfMan = 0x5,
  RaceType_MysteryElfWoman = 0x6,
  RaceType_MysteryPomMan = 0x7,
  RaceType_MysteryPomWoman = 0x8,
  RaceType_MysteryNHumanMan = 0x9,
  RaceType_MysteryNHumanWoman = 0xA,
  RaceType_MysteryNBeastMan = 0xB,
  RaceType_MysteryNBeastWoman = 0xC,
  RaceType_TechnicHumanMan = 0x21,
  RaceType_TechnicHumanWoman = 0x22,
  RaceType_TechnicBeastMan = 0x23,
  RaceType_TechnicBeastWoman = 0x24,
  RaceType_TechnicElfMan = 0x25,
  RaceType_TechnicElfWoman = 0x26,
  RaceType_TechnicPomMan = 0x27,
  RaceType_TechnicPomWoman = 0x28,
  RaceType_TechnicNHumanMan = 0x29,
  RaceType_TechnicNHumanWoman = 0x2A,
  RaceType_TechnicNBeastMan = 0x2B,
  RaceType_TechnicNBeastWoman = 0x2C,
  RaceType_NatureHumanMan = 0x41,
  RaceType_NatureHumanWoman = 0x42,
  RaceType_NatureBeastMan = 0x43,
  RaceType_NatureBeastWoman = 0x44,
  RaceType_NatureElfMan = 0x45,
  RaceType_NatureElfWoman = 0x46,
  RaceType_NaturePomMan = 0x47,
  RaceType_NaturePomWoman = 0x48,
  RaceType_Mystery = 0xA1,
  RaceType_MysteryHuman = 0xA2,
  RaceType_MysteryBeast = 0xA3,
  RaceType_MysteryElf = 0xA4,
  RaceType_MysteryPom = 0xA5,
  RaceType_Technic = 0xB1,
  RaceType_TechnicHuman = 0xB2,
  RaceType_TechnicBeast = 0xB3,
  RaceType_TechnicElf = 0xB4,
  RaceType_TechnicPom = 0xB5,
  RaceType_Nature = 0xC1,
  RaceType_NatureHuman = 0xC2,
  RaceType_NatureBeast = 0xC3,
  RaceType_NatureElf = 0xC4,
  RaceType_NaturePom = 0xC5,
};

/* 61 */
enum CNSPc::JOBTYPE
{
  JobType_NULL = 0x0,
  JobType_Fighter = 0x1,
  JobType_Warrior = 0x2,
  JobType_Paladin = 0x3,
  JobType_Magician = 0x21,
  JobType_Wizard = 0x22,
  JobType_Summoner = 0x23,
  JobType_Technician = 0x41,
  JobType_Engineer = 0x42,
  JobType_Blacksmith = 0x43,
  JobType_Rogue = 0x61,
  JobType_Hunter = 0x62,
  JobType_Thief = 0x63,
};

/* 62 */
enum CNSPc::PETTYPE
{
  PetType_Pet = 0x0,
  PetType_Tame = 0x1,
  PetType_Summon = 0x2,
  PetType_Block = 0x3,
  PetType_End = 0x4,
};

/* 63 */
enum CNSPc::PSWTYPE
{
  PswType_NULL = 0x0,
  PswType_Proto = 0x1,
  PswType_Melee = 0x2,
  PswType_Range = 0x3,
  PswType_LongRange = 0x4,
};

/* 64 */
enum CNSPc::REALMPOS
{
  RealmPos_MCastleX = 0x6A2C,
  RealmPos_MCastleY = 0x75DA,
  RealmPos_TCastleX = 0x7530,
  RealmPos_TCastleY = 0x17C0,
};

/* 65 */
typedef CNSCharacter::STATETYPE CNSNpc::STATETYPE;

/* 66 */
enum CNSNpc::EVENTTYPE
{
  EventType_FindTarget = 0x0,
  EventType_LostTarget = 0x1,
  EventType_BeAttacked = 0x2,
  EventType_Tired = 0x3,
  EventType_StopWalk = 0x4,
  EventType_Patrol = 0x5,
  EventType_HealthDryUp = 0x6,
  EventType_TooFar = 0x7,
  EventType_Disappear = 0x8,
  EventType_Reborn = 0x9,
};

/* 67 */
enum CNSNpc::ATTACKTYPE
{
  AttackType_Normal = 0x0,
  AttackType_Aggressive = 0x1,
  AttackType_Link = 0x2,
  AttackType_AggressiveLink = 0x3,
  AttackType_Dummy = 0x4,
  AttackType_Leader = 0x5,
  AttackType_AggressiveSplash = 0x6,
  AttackType_MobAttack = 0xA,
};

/* 68 */
typedef CNSMovePath::MOVETYPE CNSNpc::MOVETYPE;

/* 69 */
enum CNSNpc::NPCTYPE
{
  NpcType_Mob = 0x1,
  NpcType_Npc = 0x2,
  NpcType_Merchant = 0x4,
};

/* 70 */
enum CNSNpc::PETSTATETYPE
{
  PetStateType_Aggressive = 0x0,
  PetStateType_Defensive = 0x1,
  PetStateType_Stick = 0x2,
};

/* 71 */
enum CNSPcShop::OPENTYPE
{
  OpenType_Close = 0x0,
  OpenType_Sell = 0x1,
  OpenType_Buy = 0x2,
};

/* 72 */
enum CNSQuest::QUESTKIND
{
  QuestKind_Tutorial = 0x0,
  QuestKind_Normal = 0x1,
  QuestKind_Main = 0x2,
  QuestKind_Job = 0x3,
  QuestKind_Guild = 0x4,
  QuestKind_Title = 0x5,
};

/* 73 */
enum CNSQuest::QUESTCHECK
{
  QuestCheck_NULL = 0x0,
  QuestCheck_Mob = 0x1,
  QuestCheck_Item = 0x2,
};

/* 74 */
enum CNSQuest::QUESTREWARD
{
  QuestReward_NULL = 0x0,
  QuestReward_Item = 0x1,
  QuestReward_Gold = 0x2,
  QuestReward_Exp = 0x3,
  QuestReward_Unknown = 0x4,
  QuestReward_RealmPoint = 0x5,
  QuestReward_ExpRandom = 0x6,
  QuestReward_Title = 0x7,
};

/* 75 */
enum CNSGuild::GUILDRANK
{
  GuildRank_Normal = 0x0,
  GuildRank_Full = 0x1,
  GuildRank_SubMaster = 0xFE,
  GuildRank_Master = 0xFF,
};

/* 76 */
enum CNSGuild::GUILDLOG
{
  GuildLog_All = 0x0,
  GuildLog_Point = 0x1,
  GuildLog_Warehouse = 0x2,
};

/* 77 */
typedef $8C57D1DDA788D6050A7C554DBD1EB1AC ADDRESS_MODE;

/* 78 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Redbl;

/* 79 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Redbl;

/* 80 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Redbl;

/* 81 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Redbl;

/* 82 */
enum CNSSessionPc::SESSIONLEVEL
{
  SessionLevel_None = 0x0,
  SessionLevel_Login = 0x1,
  SessionLevel_Load = 0x2,
  SessionLevel_Game = 0x3,
  SessionLevel_Session = 0x4,
};

/* 83 */
enum CNSEventManager::EVENTTYPE
{
  EventType_RealmBuff = 0x0,
  EventType_PupuSummon = 0x1,
  EventType_MaterialUp = 0x2,
  EventType_NeoSteamUp = 0x3,
  EventType_ExpUp = 0x4,
  EventType_TpUp = 0x5,
  EventType_ResolutionUp = 0x6,
  EventType_NoDeathPanalty = 0x7,
  EventType_End = 0x8,
};

/* 84 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Redbl;

/* 85 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Redbl;

/* 86 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Redbl;

/* 87 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Redbl;

/* 88 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Redbl;

/* 89 */
enum CNSAuction::SEARCHTYPE
{
  SearchType_All = 0x0,
  SearchType_Owner = 0x1,
  SearchType_Sword = 0x10,
  SearchType_Blunt = 0x11,
  SearchType_TwoHanded_Sword = 0x20,
  SearchType_TwoHanded_Spear = 0x21,
  SearchType_TwoHanded_Blunt = 0x22,
  SearchType_TwoHanded_Staff = 0x23,
  SearchType_TwoHanded_Gun = 0x24,
  SearchType_TwoHanded_Bow = 0x25,
  SearchType_Head = 0x30,
  SearchType_Upper = 0x31,
  SearchType_Glove = 0x32,
  SearchType_Shield = 0x33,
  SearchType_Lower = 0x34,
  SearchType_Foot = 0x35,
  SearchType_Robe = 0x36,
  SearchType_Cloak = 0x37,
  SearchType_Necklace = 0x40,
  SearchType_Earring = 0x41,
  SearchType_Ring = 0x42,
  SearchType_Armlet = 0x43,
  SearchType_Belt = 0x44,
  SearchType_Core = 0x51,
  SearchType_Etc = 0x90,
};

/* 90 */
enum $4310466D88F52BB20716221EF489D0A7
{
  GHOST_CHECK_TIME_MS = 0x36EE80,
  GHOST_CONNECT_CHECK_TIME_MS = 0xEA60,
};

/* 91 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Redbl;

/* 92 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Redbl;

/* 93 */
typedef std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Redbl std::_Tree<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Redbl;

/* 94 */
enum ATL::COleDateTime::DateTimeStatus
{
  error = 0xFFFFFFFF,
  valid = 0x0,
  invalid = 0x1,
  null = 0x2,
};

/* 95 */
typedef ATL::COleDateTime::DateTimeStatus ATL::COleDateTimeSpan::DateTimeSpanStatus;

/* 96 */
enum ATL::_CTIMESPANFORMATSTEP
{
  _CTFS_NONE = 0x0,
  _CTFS_FORMAT = 0x1,
  _CTFS_NZ = 0x2,
};

/* 97 */
typedef $41147C147A022F2DF98DBD592C49293C $A5F9FB6DC7D485C756E21DF281E67D77;

/* 98 */
enum SteamEngine::Win32::Net::WindowMessage
{
  WM_CLIENTSOCKET_BASE = 0x858,
  WM_CLIENTSOCKET_CONNECT = 0x859,
  WM_CLIENTSOCKET_CLOSE = 0x85A,
};

/* 99 */
enum $CFF5D30A2C4F63774F8144A576E5DBCD
{
  MaxLoop = 0x2710,
};

/* 100 */
typedef $CFF5D30A2C4F63774F8144A576E5DBCD $7F7C22A8855C67398ED770AEBEC26101;

/* 101 */
enum std::float_denorm_style
{
  denorm_indeterminate = 0xFFFFFFFF,
  denorm_absent = 0x0,
  denorm_present = 0x1,
};

/* 102 */
enum std::float_round_style
{
  round_indeterminate = 0xFFFFFFFF,
  round_toward_zero = 0x0,
  round_to_nearest = 0x1,
  round_toward_infinity = 0x2,
  round_toward_neg_infinity = 0x3,
};

/* 103 */
enum SA_AttrTarget
{
  SA_All = 0xFFFF,
  SA_Assembly = 0x1,
  SA_Class = 0x4,
  SA_Constructor = 0x20,
  SA_Delegate = 0x1000,
  SA_Enum = 0x10,
  SA_Event = 0x200,
  SA_Field = 0x100,
  SA_GenericParameter = 0x4000,
  SA_Interface = 0x400,
  SA_Method = 0x40,
  SA_Module = 0x2,
  SA_Parameter = 0x800,
  SA_Property = 0x80,
  SA_ReturnValue = 0x2000,
  SA_Struct = 0x8,
  SA_This = 0x8000,
};

/* 104 */
enum SA_YesNoMaybe
{
  SA_No = 0xFFF0001,
  SA_Maybe = 0xFFF0010,
  SA_Yes = 0xFFF0100,
};

/* 105 */
enum SA_AccessType
{
  SA_NoAccess = 0x0,
  SA_Read = 0x1,
  SA_Write = 0x2,
  SA_ReadWrite = 0x3,
};

/* 106 */
enum __enative_startup_state
{
  __uninitialized = 0x0,
  __initializing = 0x1,
  __initialized = 0x2,
};

/* 107 */
enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 0x1,
  NtProductLanManNt = 0x2,
  NtProductServer = 0x3,
};

/* 108 */
enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0x0,
  NEC98x86 = 0x1,
  EndAlternatives = 0x2,
};

/* 109 */
enum _RTC_ErrorNumber
{
  _RTC_CHKSTK = 0x0,
  _RTC_CVRT_LOSS_INFO = 0x1,
  _RTC_CORRUPT_STACK = 0x2,
  _RTC_UNINIT_LOCAL_USE = 0x3,
  _RTC_CORRUPTED_ALLOCA = 0x4,
  _RTC_ILLEGAL = 0x5,
};

/* 110 */
struct __cppobj CSingleton<CNSWorldManager>
{
};

/* 111 */
struct __cppobj CNSWorldManager : CSingleton<CNSWorldManager>
{
  CNSWorldManagerVtbl *vfptr;
  CNSCriticalSection m_cs;
  CNSCriticalSection m_csInMap;
  char m_btRegion;
  CNSVrBlockManager *m_pVrMap[5];
  CNSMapManager *m_pMap[5];
  CNSWorldManager::_Server m_mainServer[3];
  CNSWorldManager::_Server m_subServer;
  unsigned int m_dwPcProcessTime;
  unsigned int m_dwPcProcessCount;
  unsigned int m_dwNpcProcessTime;
  unsigned int m_dwNpcProcessCount;
  unsigned int m_dwDbProcessTime;
  unsigned int m_dwDbProcessCount;
  int m_bMapInstancedUsed[1000];
  std::map<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> > > m_mapInstant;
  SteamEngine::Win32::System::CCriticalSection m_csSock[5];
  CChSocket m_Socket[5];
  int m_bRVRStart;
  unsigned __int16 m_wRVREndDate;
  char m_btFortressArray[20];
  char m_btOldFortressArray[20];
  unsigned int m_dwFortressCount;
  int m_bOneTownMode[5];
  int m_bTotalPVPMode;
  int m_bRVRServerMode;
  int m_bPVPTournamentMode;
  int m_bPVEServerMode;
  int m_bPVPTournamentStart;
  int m_bPSWStopMode;
};

/* 112 */
struct CNSWorldManagerVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSWorldManager *this, unsigned int);
  int (__thiscall *Init)(CNSWorldManager *this);
};

/* 113 */
struct SteamEngine::Win32::System::CCriticalSection
{
  SteamEngine::Win32::System::CCriticalSectionVtbl *vfptr;
  _RTL_CRITICAL_SECTION m_crit;
};

/* 114 */
struct SteamEngine::Win32::System::CCriticalSectionVtbl
{
  void (__thiscall *Enter)(SteamEngine::Win32::System::CCriticalSection *this);
  void (__thiscall *Leave)(SteamEngine::Win32::System::CCriticalSection *this);
};

/* 115 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/* 116 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 117 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Flags;
  unsigned __int16 CreatorBackTraceIndexHigh;
  unsigned __int16 SpareWORD;
};

/* 118 */
struct __cppobj CNSCriticalSection : SteamEngine::Win32::System::CCriticalSection
{
  char m_szMsg[1024];
};

/* 119 */
struct CNSVrBlockManager
{
  CNSVrBlockManagerVtbl *vfptr;
  NSVrBlockPc **m_ppNSVrBlockPc;
  NSVrBlockObject **m_ppNSVrBlockObject;
  CNSCriticalSection m_cs;
  unsigned int m_nWidth;
  unsigned int m_nHeight;
  unsigned __int16 m_nBlockSize;
  unsigned __int16 m_nBlockWidth;
  unsigned __int16 m_nBlockHeight;
  unsigned __int16 m_nBlockMaxSight;
};

/* 120 */
struct CNSVrBlockManagerVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSVrBlockManager *this, unsigned int);
};

/* 121 */
struct std::_Container_base_aux
{
  std::_Aux_cont *_Myownedaux;
};

/* 122 */
struct std::_Aux_cont
{
  std::_Container_base_aux *_Mycontainer;
};

/* 123 */
struct __cppobj std::_Allocator_base<std::_Aux_cont>
{
};

/* 124 */
struct __cppobj std::allocator<std::_Aux_cont> : std::_Allocator_base<std::_Aux_cont>
{
};

/* 125 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSPc *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 126 */
struct __cppobj std::binary_function<unsigned long,unsigned long,bool>
{
};

/* 127 */
struct __cppobj std::less<unsigned long> : std::binary_function<unsigned long,unsigned long,bool>
{
};

/* 128 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSPc *> > >
{
  std::less<unsigned long> comp;
};

/* 129 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node>
{
};

/* 130 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node>
{
};

/* 131 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> > : std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node> _Alnod;
};

/* 132 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *>
{
};

/* 133 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *>
{
};

/* 134 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *> _Alptr;
};

/* 135 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSPc *> >
{
};

/* 136 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPc *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSPc *> >
{
};

/* 137 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSPc *> > _Alval;
};

/* 138 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSPc *> _Myval;
  char _Color;
  char _Isnil;
};

/* 139 */
struct __declspec(align(4)) CNSObject
{
  CNSObjectVtbl *vfptr;
  unsigned int m_dwObjectId;
  int m_nRefCount;
  NSPOINT2 m_cell;
  NSPOINT2 m_cellDest;
  NSPOINT2 m_block;
  char m_btRegion;
  char m_btSize;
};

/* 140 */
struct CNSObjectVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSObject *this, unsigned int);
};

/* 141 */
struct NSPOINT2
{
  unsigned __int16 x;
  unsigned __int16 y;
};

/* 142 */
struct CNSCharacter::_BasicParam
{
  unsigned __int16 btStr;
  unsigned __int16 btCon;
  unsigned __int16 btDex;
  unsigned __int16 btInt;
  char btRs4[4];
};

/* 143 */
struct CNSSkillList
{
  CNSSkillListVtbl *vfptr;
  CNSCharacter *m_pChar;
  CNSSkill *m_pActiveSkill;
  unsigned int m_dwOldTargetObjectId;
  unsigned int m_dwTargetObjectId;
  unsigned int m_dwLastUseTime;
  unsigned int m_dwCheckCastTime;
  unsigned int m_dwCount;
  CNSSkill m_skillList[100];
  CNSSkillList::SKILLSTEP m_skillStep;
  unsigned int m_dwOverHeatTime[67];
};

/* 144 */
struct CNSSkill
{
  CNSSkillVtbl *vfptr;
  int m_bUsed;
  int m_nSkillSeq;
  int m_nDbSeq;
  unsigned __int16 m_wSkillId;
  char *m_szSkillName;
  char m_btSkillLevel;
  unsigned __int16 m_wSkillExp;
  unsigned __int16 m_wSkillNextExp;
  char m_btSkillLevelDb;
  unsigned __int16 m_wSkillExpDb;
  char m_btUseSkillPoint;
  char m_btUseSkillPoint2;
  char m_btUseKind;
  unsigned __int16 m_wUsePoint;
  char m_btLimitJob;
  char m_btLimitLevel;
  char m_btSkillType[2];
  char m_btSkillOption[2];
  unsigned __int16 m_wSkillValue[2];
  char m_btRangeType;
  unsigned __int16 m_wRangeValue;
  char m_btMaxTarget;
  char m_btCastTime;
  unsigned __int16 m_wCoolTime;
  char m_btAttackSpeed;
  unsigned __int16 m_wDurationTimeSeed;
  unsigned __int16 m_wDurationTime;
  unsigned int m_dwTempValue[4];
  unsigned int m_dwTotalHitDamage;
  char m_btTargetType;
  CNSEquipment::EQUIPMENTTYPE m_EquipmentType;
  unsigned int m_dwLastUseTime;
  char *m_szComment;
};

/* 145 */
struct CNSSkillVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSSkill *this, unsigned int);
};

/* 146 */
struct CNSSkillListVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSSkillList *this, unsigned int);
  unsigned int (__thiscall *GetMaxList)(CNSSkillList *this);
  CNSSkill *(__thiscall *GetSkill)(CNSSkillList *this, int);
  void (__thiscall *Clear)(CNSSkillList *this);
};

/* 147 */
struct __cppobj CNSCharacter : CNSObject
{
  char m_btLevel;
  CNSCharacter::_BasicParam m_BasicParam;
  char m_btRealm;
  unsigned __int16 m_btStr;
  unsigned __int16 m_btCon;
  unsigned __int16 m_btDex;
  unsigned __int16 m_btInt;
  char m_btRs4[4];
  unsigned __int16 m_wAttackMinDamage;
  unsigned __int16 m_wAttackMaxDamage;
  char m_btAttackSpeed;
  unsigned __int16 m_wAttackDistance;
  unsigned __int16 m_wDefenseDamage;
  unsigned __int16 m_wSight;
  char m_btMoveSpeed;
  unsigned int m_dwExp;
  unsigned __int16 m_wNs;
  char m_btSp;
  unsigned __int16 m_wAp;
  unsigned __int16 m_wDp;
  unsigned __int16 m_wMa;
  unsigned __int16 m_wAr;
  unsigned __int16 m_wRs;
  unsigned __int16 m_wDr;
  unsigned int m_dwMaxHp;
  unsigned __int16 m_wMaxSta;
  unsigned __int16 m_wMaxMp;
  float m_fHp;
  float m_fSta;
  float m_fMp;
  unsigned __int16 m_wWpMa;
  char m_btDpPer;
  float m_fHpRegen;
  float m_fStaRegen;
  float m_fMpRegen;
  float m_fMoveSpeed;
  unsigned int m_dwGold;
  unsigned int m_dwTargetObjectId;
  NSPOINT2 m_cellMoveStart;
  NSPOINT2 m_cellMoveEnd;
  float m_fMoveLength;
  CNSSkillList m_SkillList;
  CNSInventory m_Inven;
  CNSBuffList m_BuffList;
  CNSDamageCounter m_DamageCounter;
  CNSMovePath m_MovePath;
  unsigned int m_dwInstantKey;
  CNSCharacter::STATETYPE m_state;
  unsigned __int16 m_wAngle;
  unsigned int m_dwFinishTime;
  unsigned int m_dwItemDropTime;
  unsigned int m_dwLastActionTime;
  unsigned int m_dwStartTime;
  int m_bStopped;
  NSPOINT2 m_cellStop;
  int m_bCheckEnter;
  int m_bCheckRecovery;
  int m_bCheckMove;
  SteamEngine::Win32::Common::CRand32 m_Rand;
};

/* 148 */
struct CNSItem::Option
{
  char btParam;
  unsigned __int16 wValue;
};

/* 149 */
struct __cppobj CNSItem : CNSObject
{
  char m_szItemName[25];
  int m_nSeq;
  unsigned __int16 m_wPosDb;
  unsigned __int16 m_wPos;
  unsigned __int16 m_wItemId;
  unsigned __int16 m_wQuestId;
  char m_btKind;
  unsigned __int16 m_wType;
  char m_btRare;
  unsigned int m_dwGold;
  char m_btCount;
  char m_btCountDb;
  char m_btLimitLevel;
  char m_btLimitRace;
  char m_btLimitJob[4];
  char m_btEquipmentPart;
  char m_btSteamMachine;
  unsigned __int16 m_wAttackMinDamage;
  unsigned __int16 m_wAttackMaxDamage;
  char m_btAttackSpeed;
  char m_btAttackDistance;
  char m_btDefenseDamage;
  CNSItem::Option m_Option[10];
  char *m_szDbDescription;
  char m_szOwnerUserAlias[25];
  int m_nUserSeq;
  int m_nAliasSeq;
  int m_nUniqueSeq;
};

/* 150 */
struct CNSInventory
{
  int m_bExpand;
  unsigned int m_dwCount;
  CNSItem *m_ItemArray[100];
};

/* 151 */
struct CNSBuffList
{
  CNSBuffListVtbl *vfptr;
  unsigned int m_dwCount;
  CNSBuff m_buffList[30];
  CNSBuff::BUFFTYPE m_resistBuff;
};

/* 152 */
struct CNSBuffListVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSBuffList *this, unsigned int);
};

/* 153 */
struct CNSBuff
{
  CNSBuffVtbl *vfptr;
  CNSBuff::BUFFTYPE m_buffType;
  unsigned __int16 m_wSkillId;
  char m_btLevel;
  unsigned __int16 m_wValue;
  unsigned __int16 m_wDurationTime;
  unsigned int m_dwStartTime;
  unsigned int m_dwLastActiveTime;
  unsigned int m_dwCasterObjectId;
  CNSBuff::BuffOption m_BuffOptionArray[5];
  unsigned int m_dwBuffOptionCount;
};

/* 154 */
struct CNSBuffVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSBuff *this, unsigned int);
};

/* 155 */
struct CNSBuff::BuffOption
{
  CNSBuff::BUFFOPTIONTYPE buffOption;
  char btSign;
  unsigned int dwValue;
};

/* 156 */
struct CNSDamageCounter
{
  CNSDamageCounterVtbl *vfptr;
  std::map<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> > > m_mapAttacker;
  std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > m_mapDamage;
  CNSCriticalSection m_cs;
  CNSCharacter *m_pParent;
  int m_bDead;
  unsigned int m_dwTotalDamage;
  unsigned int m_dwTotalBestDamage;
  unsigned int m_dwTotalLowDamage;
  std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::iterator m_BestUser_IterArray[5];
};

/* 157 */
struct CNSDamageCounterVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSDamageCounter *this, unsigned int);
};

/* 158 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 159 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> > >
{
  std::less<unsigned long> comp;
};

/* 160 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node>
{
};

/* 161 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node>
{
};

/* 162 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> > : std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node> _Alnod;
};

/* 163 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *>
{
};

/* 164 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *>
{
};

/* 165 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *> _Alptr;
};

/* 166 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >
{
};

/* 167 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >
{
};

/* 168 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> > _Alval;
};

/* 169 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> _Myval;
  char _Color;
  char _Isnil;
};

/* 170 */
struct CNSDamageCounter::_Attacker
{
  unsigned int dwObjectId;
  char szUserAlias[25];
  unsigned int dwTotalDamage;
};

/* 171 */
struct std::pair<unsigned long const ,CNSDamageCounter::_Attacker *>
{
  const unsigned int first;
  CNSDamageCounter::_Attacker *second;
};

/* 172 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 173 */
struct __cppobj std::map<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >
{
};

/* 174 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,unsigned long> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 175 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,unsigned long> > >
{
  std::less<unsigned long> comp;
};

/* 176 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
{
};

/* 177 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
{
};

/* 178 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> > : std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node> _Alnod;
};

/* 179 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
{
};

/* 180 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
{
};

/* 181 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *> _Alptr;
};

/* 182 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,unsigned long> >
{
};

/* 183 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> > : std::_Allocator_base<std::pair<unsigned long const ,unsigned long> >
{
};

/* 184 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
{
  std::allocator<std::pair<unsigned long const ,unsigned long> > _Alval;
};

/* 185 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 186 */
struct std::pair<unsigned long const ,unsigned long>
{
  const unsigned int first;
  unsigned int second;
};

/* 187 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 188 */
struct __cppobj std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > : std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
{
};

/* 189 */
struct __cppobj std::_Iterator_base_universal
{
};

/* 190 */
struct __cppobj std::_Iterator_base_aux : std::_Iterator_base_universal
{
  std::_Aux_cont *_Myaux;
};

/* 191 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *>,int,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> const *,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 192 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *>,int,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> const *,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *>,int,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> const *,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> const &,std::_Iterator_base_aux>
{
};

/* 193 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *>,int,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> const *,std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *_Ptr;
};

/* 194 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::const_iterator
{
};

/* 195 */
struct CNSMovePath
{
  CNSMovePath::MOVETYPE m_moveType;
  unsigned int m_dwPos;
  unsigned int m_dwCount;
  NSPOINT2 m_cellArray[20];
};

/* 196 */
struct SteamEngine::Win32::Common::CRand32
{
  unsigned int m_mt[624];
  int m_mti;
};

/* 197 */
struct __declspec(align(2)) CNSPc::CNCPetInfo
{
  unsigned int dwSeq;
  char btPetKind;
  char btLevel;
  char btGrade;
  unsigned int dwExp;
  unsigned __int16 wSta;
  char szPetName[25];
};

/* 198 */
struct CNSPc::CNSTameInfo
{
  unsigned __int16 wNpcId;
  char szNpcName[25];
  unsigned __int16 wHp;
  unsigned __int16 wSta;
};

/* 199 */
struct __cppobj CNSPc : CNSCharacter
{
  CNSPc::CNCPetInfo m_PetInfo;
  CNSPc::CNSTameInfo m_TameInfo;
  int m_nUserSeq;
  int m_nAliasSeq;
  char m_szUserId[51];
  char m_szUserAlias[25];
  unsigned int m_dwShotCount;
  int m_bAutoRunMode;
  unsigned __int16 m_wAutoRunAngle;
  unsigned int m_dwNextExp;
  char m_btRace;
  char m_btJob;
  char m_btBody;
  unsigned __int16 m_wNsTank;
  unsigned __int16 m_wNsCharge;
  char m_btRank;
  unsigned int m_dwRealmPoint;
  unsigned __int16 m_wTitleId;
  char m_btRaceRegion;
  char m_btBindRegion;
  NSPOINT2 m_cellBind;
  char m_btTransRegion;
  NSPOINT2 m_cellTrans;
  unsigned int m_dwRecoveryTime;
  CNSEquipment m_Equip;
  CNSPcExchange m_Exchange;
  CNSQuestList m_QuestList;
  CNSProductList m_ProductList;
  CNSPcTeleportList m_TeleportList;
  CNSPcFriendList m_FriendList;
  CNSPcShop m_Shop;
  CNSWareHouse m_WareHouse;
  CNSPcPremiumUseList m_PremiumUseList;
  CNSPcSetItemList m_SetItemList;
  CNSPcTitleList m_TitleList;
  unsigned int m_dwQuickBarArray[50];
  unsigned int m_dwQuickBarArrayDb[50];
  int m_bPartyEnableMember;
  int m_bShiftMode;
  int m_bSessionLogoutMode;
  unsigned __int16 m_wLogSp;
  CNSSessionPc *m_pSession;
  unsigned int m_dwSkillExp;
  CNSPcStateGlobal m_ActionGlobal;
  CNSPcStateAttack m_ActionAttack;
  unsigned int m_dwGuildId;
  unsigned int m_dwPartyId;
  unsigned int m_dwStickObjectId;
  unsigned int m_dwPetObjectId;
  unsigned int m_dwTalkNpcObjectId;
  unsigned int m_dwPetObjectIdArray[4];
  int m_bLogin;
  int m_bCheckDoubleConnect;
  int m_nLoginSeq;
  unsigned int m_dwLoginTime;
  unsigned int m_dwLastSaveTime;
  unsigned int m_dwCloseSessionTime;
  unsigned int m_dwDeadTime;
  unsigned int m_dwLastHourTime;
  unsigned int m_dwLoginCheckTime;
  int m_nLoginCheckCount;
  unsigned int m_dwLeaveTime;
  unsigned int m_dwLeaveCheckTime;
  unsigned int m_dwDisconnectTime;
  unsigned int m_dwTickCount;
  unsigned int m_dwInstantKey;
  unsigned int m_btPrevMapAttr;
  unsigned int m_dwLastAttacker;
  int m_bGhostMode;
  int m_bSuperMode;
  unsigned int m_dwLogExp;
  unsigned int m_dwLogGold;
  unsigned int m_dwLogNs;
  unsigned int m_dwLastDeadExp;
  unsigned int m_dwLastSkillStudy;
  int m_bPcBangCheck;
  tagTIMESTAMP_STRUCT m_tsRegDate;
  NSPOINT2 m_cellSave;
  NSPOINT2 m_cellNotStuck;
  unsigned __int16 m_wChatChannelArray[10];
  int m_bCheckStatusData;
};

/* 200 */
struct CNSEquipment
{
  unsigned int m_dwCount;
  CNSPc *m_pParent;
  CNSItem *m_ItemArray[67];
};

/* 201 */
struct __declspec(align(4)) CNSPcExchange::ITEMARRAY
{
  unsigned int dwItemObjectId;
  char btCount;
};

/* 202 */
struct CNSPcExchange
{
  CNSPcExchange::ITEMARRAY m_ItemArray[20];
  CNSPc *m_pParent;
  unsigned int m_dwTargetObjectId;
  unsigned int m_dwGold;
  int m_bConfirm;
  int m_bExchange;
};

/* 203 */
struct CNSQuestList
{
  CNSQuestListVtbl *vfptr;
  CNSPc *m_pParent;
  unsigned int m_dwCount;
  CNSQuest m_questList[200];
};

/* 204 */
struct CNSQuestListVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSQuestList *this, unsigned int);
};

/* 205 */
struct __declspec(align(4)) CNSQuest::_step
{
  char btStep;
  char *szSummary;
  char btAutoComplete;
  char btCheckType;
  unsigned __int16 wCheckId;
  unsigned int btCheckCount;
  char btRegion;
  NSPOINT2 cell;
};

/* 206 */
struct __declspec(align(4)) CNSQuest::_reward
{
  char btType;
  unsigned int dwId;
  char btCount;
};

/* 207 */
struct CNSQuest
{
  unsigned __int16 m_wQuestId;
  char m_btQuestKind;
  char m_btQuestLevel;
  char m_btCompleted;
  char m_btStep;
  unsigned int m_btCheckCount;
  char m_btPoint;
  char m_btCompletedDb;
  char m_btStepDb;
  unsigned int m_btCheckCountDb;
  char m_btPointDb;
  unsigned int m_dwTimeOut;
  char *m_szQuestTitle;
  char *m_szSummary;
  char m_btStepCount;
  CNSQuest::_step m_stepArray[15];
  char m_btRewardCount;
  CNSQuest::_reward m_rewardArray[8];
};

/* 208 */
struct __declspec(align(4)) CNSProductList
{
  CNSProductListVtbl *vfptr;
  CNSPc *m_pPc;
  unsigned __int16 m_wActiveItemId;
  unsigned int m_dwActiveObjectId;
  unsigned int m_dwCount;
  char m_btActiveOption;
  CNSProduct m_productList[128];
};

/* 209 */
struct CNSProductListVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSProductList *this, unsigned int);
};

/* 210 */
struct __declspec(align(2)) CNSProduct
{
  unsigned __int16 m_wItemId;
  unsigned __int16 m_wSkillId;
  char m_btSkillLevel;
  unsigned __int16 m_wMaterialIdArray[6];
  char m_btCountArray[6];
  unsigned __int16 m_wNs;
  char m_btSuccessRate;
  char m_btLimitLevel;
  char m_btRare;
  char m_btKind;
  char m_szItemName[25];
};

/* 211 */
struct __declspec(align(4)) CNSPcTeleportList::Teleport
{
  int nDbSeq;
  char szName[25];
  char btRegion;
  unsigned __int16 wPosX;
  unsigned __int16 wPosY;
};

/* 212 */
struct CNSPcTeleportList
{
  CNSPcTeleportList::Teleport m_TeleportArray[10];
  CNSPc *m_pParent;
  unsigned int m_dwCount;
  int m_nPos;
};

/* 213 */
struct __declspec(align(4)) CNSPcFriendList::Friend
{
  int nDbSeq;
  int bStatus;
  char szUserAlias[25];
};

/* 214 */
struct CNSPcFriendList
{
  CNSPcFriendList::Friend m_FriendArray[30];
  CNSPc *m_pParent;
  unsigned int m_dwCount;
};

/* 215 */
struct CNSPcShop::_good
{
  unsigned int dwItemObjectId;
  unsigned __int16 wItemId;
  char btKind;
  char btEquipmentPart;
  char btRare;
  char btCount;
  unsigned int dwGold;
};

/* 216 */
struct __declspec(align(4)) CNSPcShop
{
  CNSPc *m_pParent;
  CNSPcShop::OPENTYPE m_openType;
  unsigned int m_dwCount;
  CNSPcShop::_good m_goodArray[10];
  char m_szTitle[25];
};

/* 217 */
struct CNSWareHouse
{
  int m_bLoad;
  int m_bGuildWareHouse;
  int m_nGuildSeq;
  unsigned int m_dwGuildRank;
  int m_nUserSeq;
  CNSPc *m_pParent;
  unsigned int m_dwGold;
  unsigned int m_dwGoldTray;
  unsigned int m_dwCount;
  CNSItem *m_ItemArray[100];
  unsigned int m_dwTrayCount;
  CNSItem *m_ItemTrayArray[100];
  int m_bExpand;
};

/* 218 */
struct _SYSTEMTIME
{
  unsigned __int16 wYear;
  unsigned __int16 wMonth;
  unsigned __int16 wDayOfWeek;
  unsigned __int16 wDay;
  unsigned __int16 wHour;
  unsigned __int16 wMinute;
  unsigned __int16 wSecond;
  unsigned __int16 wMilliseconds;
};

/* 219 */
struct CNSPcPremiumUseList::PremiumUse
{
  unsigned __int16 wItemId;
  unsigned __int16 wDays;
  _SYSTEMTIME stStart;
};

/* 220 */
struct CNSPcPremiumUseList
{
  CNSPcPremiumUseList::PremiumUse m_PremiumUseArray[20];
  CNSPc *m_pParent;
};

/* 221 */
struct CNSPcSetItemList::SetItem
{
  unsigned __int16 wSetId;
  unsigned int dwCount;
  CNSItem *pItem;
};

/* 222 */
struct __declspec(align(4)) CNSPcSetItemList
{
  CNSPcSetItemList::SetItem m_SetItemArray[5];
  CNSPc *m_pParent;
  unsigned __int16 m_wItemIdArray[67];
};

/* 223 */
struct CNSPcTitle::_Option
{
  char btParam;
  __int16 nValue;
};

/* 224 */
struct CNSPcTitle
{
  unsigned __int16 m_wTitleId;
  char m_szTitleName[25];
  char m_szDescription[256];
  CNSPcTitle::_Option m_Option[10];
};

/* 225 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSPcTitle *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 226 */
struct __cppobj std::binary_function<unsigned short,unsigned short,bool>
{
};

/* 227 */
struct __cppobj std::less<unsigned short> : std::binary_function<unsigned short,unsigned short,bool>
{
};

/* 228 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSPcTitle *> > >
{
  std::less<unsigned short> comp;
};

/* 229 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node>
{
};

/* 230 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node>
{
};

/* 231 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> > : std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node> _Alnod;
};

/* 232 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *>
{
};

/* 233 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *>
{
};

/* 234 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *> _Alptr;
};

/* 235 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSPcTitle *> >
{
};

/* 236 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcTitle *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSPcTitle *> >
{
};

/* 237 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSPcTitle *> > _Alval;
};

/* 238 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSPcTitle *> _Myval;
  char _Color;
  char _Isnil;
};

/* 239 */
struct std::pair<unsigned short const ,CNSPcTitle *>
{
  const unsigned __int16 first;
  CNSPcTitle *second;
};

/* 240 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 241 */
struct __cppobj std::map<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >
{
};

/* 242 */
struct CNSPcTitleList
{
  CNSPc *m_pParent;
  CNSPcTitle *m_pActiveTitle;
  std::map<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> > > m_mapTitle;
};

/* 243 */
struct SteamEngine::Win32::Net::CSession
{
  SteamEngine::Win32::Net::CSessionVtbl *vfptr;
  unsigned int m_socket;
  void *m_hRecvEvent;
  SteamEngine::Win32::Net::CSession::OVERLAPPED2 m_overlappedSend;
  SteamEngine::Win32::Net::CSession::OVERLAPPED2 m_overlappedRecv;
  char m_cRecvBuffer[8192];
  int m_nRecvPacketSize;
  unsigned int m_dwCheckTime;
  unsigned int m_dwRecvCount;
};

/* 244 */
union $A5A483E05FC9B52B872A8DCFA58CFF52
{
  unsigned int Offset;
  void *Pointer;
};

/* 245 */
struct _OVERLAPPED
{
  unsigned int Internal;
  unsigned int InternalHigh;
  $A5A483E05FC9B52B872A8DCFA58CFF52 ___u2;
  unsigned int OffsetHigh;
  void *hEvent;
};

/* 246 */
struct SteamEngine::Win32::Net::CPacket::HEADER
{
  unsigned __int16 *nDataSize;
  unsigned __int16 *nProtocolId;
};

/* 247 */
struct SteamEngine::Win32::Net::CPacket
{
  SteamEngine::Win32::Net::CPacket::HEADER m_packetHeader;
  char m_cPacketBuffer[8192];
  char *m_cDataBuffer;
  int m_nReadPos;
  int m_nWritePos;
  int m_nEndPos;
  int m_nReceivedSize;
};

/* 248 */
union $EB9414B63B7CE7891FF464ECE5C803EC
{
  void (__thiscall *~CSession)(SteamEngine::Win32::Net::CSession *this);
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::Net::CSession *this, unsigned int);
};

/* 249 */
struct SteamEngine::Win32::Net::CSessionVtbl
{
  void (__thiscall *Init)(SteamEngine::Win32::Net::CSession *this, unsigned int);
  _BYTE gap4[4];
  void (__thiscall *OnDestroy)(SteamEngine::Win32::Net::CSession *this);
  void (__thiscall *Dispatch)(SteamEngine::Win32::Net::CSession *this, unsigned int, _OVERLAPPED *);
  int (__thiscall *SendMessageA)(SteamEngine::Win32::Net::CSession *this, void *, unsigned int);
  int (__thiscall *SendMessageA)(SteamEngine::Win32::Net::CSession *this, SteamEngine::Win32::Net::CPacket *);
  void (__thiscall *CloseConnection)(SteamEngine::Win32::Net::CSession *this);
  $EB9414B63B7CE7891FF464ECE5C803EC ___u6;
  void (__thiscall *PacketParsing)(SteamEngine::Win32::Net::CSession *this, SteamEngine::Win32::Net::CPacket *);
};

/* 250 */
struct __cppobj SteamEngine::Win32::Net::CSession::OVERLAPPED2 : _OVERLAPPED
{
  unsigned int flags;
};

/* 251 */
struct SteamEngine::Win32::Net::CPacketBinder
{
  SteamEngine::Win32::Net::CPacketBinderVtbl *vfptr;
  char m_cPacketBuffer[8192];
  unsigned int m_dwLen;
};

/* 252 */
struct SteamEngine::Win32::Net::CPacketBinderVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::Net::CPacketBinder *this, unsigned int);
};

/* 253 */
struct __cppobj CNSSessionPc : SteamEngine::Win32::Net::CSession
{
  char m_szPeerIpAddress[16];
  char m_szLastChatMessage[8192];
  unsigned int m_dwLastChatTime;
  CNSPc *m_pPc;
  CNSCriticalSection m_csQueuePacket;
  SteamEngine::Win32::Net::CPacketBinder m_packetBinder;
  char m_btPeerIpArray[4];
  NSPOINT2 m_pt2Sync;
  unsigned int m_dwLastTimeSync;
  unsigned int m_dwLoginCount;
  CNSSessionPc::SESSIONLEVEL m_sessionLevel;
  int m_bDestroy;
  int m_bCloseConnection;
};

/* 254 */
struct CNSPcState
{
  CNSPcStateVtbl *vfptr;
  CNSPc *m_pParent;
};

/* 255 */
struct CNSPcStateVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSPcState *this, unsigned int);
  void (__thiscall *Action)(CNSPcState *this, unsigned int);
};

/* 256 */
struct __cppobj CNSPcStateGlobal : CNSPcState
{
  unsigned int m_dwRecoveryTime;
  unsigned int m_dwMoveTime;
  unsigned int m_dwPartySyncTime;
  unsigned int m_dwSteamRiderTime;
  unsigned int m_statPrev;
};

/* 257 */
struct __cppobj CNSPcStateAttack : CNSPcState
{
  int m_bFirstAttack;
  int m_bFirst;
  unsigned int m_dwAttackTime;
  unsigned int m_dwTraceTime;
  unsigned int m_dwPrevTargetObject;
};

/* 258 */
struct tagTIMESTAMP_STRUCT
{
  __int16 year;
  unsigned __int16 month;
  unsigned __int16 day;
  unsigned __int16 hour;
  unsigned __int16 minute;
  unsigned __int16 second;
  unsigned int fraction;
};

/* 259 */
struct std::pair<unsigned long const ,CNSPc *>
{
  const unsigned int first;
  CNSPc *second;
};

/* 260 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 261 */
struct __cppobj std::map<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >
{
};

/* 262 */
struct NSVrBlock<unsigned long,CNSPc *>
{
  CNSCriticalSection m_cs;
  std::map<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> > > m_mapObject;
};

/* 263 */
struct __cppobj NSVrBlockPc : NSVrBlock<unsigned long,CNSPc *>
{
};

/* 264 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSObject *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 265 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSObject *> > >
{
  std::less<unsigned long> comp;
};

/* 266 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node>
{
};

/* 267 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node>
{
};

/* 268 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> > : std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node> _Alnod;
};

/* 269 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *>
{
};

/* 270 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *>
{
};

/* 271 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *> _Alptr;
};

/* 272 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSObject *> >
{
};

/* 273 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSObject *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSObject *> >
{
};

/* 274 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSObject *> > _Alval;
};

/* 275 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSObject *> _Myval;
  char _Color;
  char _Isnil;
};

/* 276 */
struct std::pair<unsigned long const ,CNSObject *>
{
  const unsigned int first;
  CNSObject *second;
};

/* 277 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 278 */
struct __cppobj std::map<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >
{
};

/* 279 */
struct NSVrBlock<unsigned long,CNSObject *>
{
  CNSCriticalSection m_cs;
  std::map<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> > > m_mapObject;
};

/* 280 */
struct __cppobj NSVrBlockObject : NSVrBlock<unsigned long,CNSObject *>
{
};

/* 281 */
struct CNSMapManager
{
  CNSMapManagerVtbl *vfptr;
  char m_btRegion;
  unsigned int m_dwWidth;
  unsigned int m_dwHeight;
  unsigned __int16 m_wCellSize;
  char **m_ppMapData;
  char **m_ppCharMapData;
  char m_szFileName[260];
  CNSCriticalSection m_cs;
};

/* 282 */
struct CNSMapManagerVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSMapManager *this, unsigned int);
};

/* 283 */
struct __declspec(align(4)) CNSWorldManager::_Server
{
  char btServerIpArray[4];
  int nServerPort;
  unsigned __int16 wUserCountArray[3];
};

/* 284 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 285 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> > >
{
  std::less<unsigned long> comp;
};

/* 286 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node>
{
};

/* 287 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node>
{
};

/* 288 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> > : std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node> _Alnod;
};

/* 289 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *>
{
};

/* 290 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *>
{
};

/* 291 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *> _Alptr;
};

/* 292 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >
{
};

/* 293 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >
{
};

/* 294 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> > _Alval;
};

/* 295 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> _Myval;
  char _Color;
  char _Isnil;
};

/* 296 */
struct CNSWorldManager::CNSMapInstant
{
  CNSWorldManager::CNSMapInstantVtbl *vfptr;
  char m_btRegion;
  int m_nRefCount;
  unsigned int m_dwInstantKey;
  CNSVrBlockManager *m_pVrMap;
  CNSMapManager *m_pMap;
};

/* 297 */
struct CNSWorldManager::CNSMapInstantVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSWorldManager::CNSMapInstant *this, unsigned int);
};

/* 298 */
struct std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *>
{
  const unsigned int first;
  CNSWorldManager::CNSMapInstant *second;
};

/* 299 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 300 */
struct __cppobj std::map<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >
{
};

/* 301 */
struct CChSocket
{
  CChSocketVtbl *vfptr;
  unsigned int m_sock;
  int m_nType;
  int m_nConnectTimeOut;
  sockaddr_in m_sa;
};

/* 302 */
struct CChSocketVtbl
{
  void *(__thiscall *__vecDelDtor)(CChSocket *this, unsigned int);
};

/* 303 */
struct $BD85036DCC0442AA317E9171D0F2179B
{
  char s_b1;
  char s_b2;
  char s_b3;
  char s_b4;
};

/* 304 */
struct $CC608A129C88F312E26B04B0A6BA5EDC
{
  unsigned __int16 s_w1;
  unsigned __int16 s_w2;
};

/* 305 */
union $72EA158CA2D4BFF63D4EB42867D0920E
{
  $BD85036DCC0442AA317E9171D0F2179B S_un_b;
  $CC608A129C88F312E26B04B0A6BA5EDC S_un_w;
  unsigned int S_addr;
};

/* 306 */
struct in_addr
{
  $72EA158CA2D4BFF63D4EB42867D0920E S_un;
};

/* 307 */
struct sockaddr_in
{
  __int16 sin_family;
  unsigned __int16 sin_port;
  in_addr sin_addr;
  char sin_zero[8];
};

/* 308 */
struct SteamEngine::Win32::System::CCriticalSection::Owner
{
  SteamEngine::Win32::System::CCriticalSection *m_crit;
};

/* 309 */
struct SteamEngine::Win32::DB::COdbcBindColumn
{
  SteamEngine::Win32::DB::COdbcBindColumnVtbl *vfptr;
  SteamEngine::Win32::DB::COdbc *m_pOdbc;
  void *m_hStmt;
  int m_nBindCount;
  unsigned int m_dwTime;
  unsigned int m_dwCount;
  char m_szSqlStatement[1024];
};

/* 310 */
struct SteamEngine::Win32::DB::COdbcBindColumnVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::DB::COdbcBindColumn *this, unsigned int);
};

/* 311 */
struct SteamEngine::Win32::DB::COdbc
{
  SteamEngine::Win32::DB::COdbcVtbl *vfptr;
  SteamEngine::Win32::System::CCriticalSection m_cs;
  int m_bConnected;
  void *m_hEnv;
  void *m_hDbc;
};

/* 312 */
struct SteamEngine::Win32::DB::COdbcVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::DB::COdbc *this, unsigned int);
};

/* 313 */
struct SteamEngine::Win32::System::CException
{
  SteamEngine::Win32::System::CExceptionVtbl *vfptr;
  char m_szWhere[512];
  char m_szMessage[512];
};

/* 314 */
struct SteamEngine::Win32::System::CExceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::System::CException *this, unsigned int);
  char *(__thiscall *GetWhere)(SteamEngine::Win32::System::CException *this);
  char *(__thiscall *GetMessageA)(SteamEngine::Win32::System::CException *this);
};

/* 315 */
struct __cppobj __declspec(align(4)) SteamEngine::Win32::DB::COdbcException : SteamEngine::Win32::System::CException
{
  int m_NativeError;
  char m_Sqlstate[6];
  char m_MessageText[512];
};

/* 316 */
struct CNSCriticalSection::Owner
{
  CNSCriticalSection *m_crit;
};

/* 317 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *>,int,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> const *,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 318 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *>,int,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> const *,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *>,int,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> const *,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> const &,std::_Iterator_base_aux>
{
};

/* 319 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *>,int,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> const *,std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *_Ptr;
};

/* 320 */
struct __cppobj std::input_iterator_tag
{
};

/* 321 */
struct __cppobj std::forward_iterator_tag : std::input_iterator_tag
{
};

/* 322 */
struct __cppobj std::bidirectional_iterator_tag : std::forward_iterator_tag
{
};

/* 323 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::const_iterator
{
};

/* 324 */
struct CNSConsole
{
  CNSConsoleVtbl *vfptr;
  void *m_hStd;
  _COORD m_dwSize;
  unsigned __int16 m_wAttributes;
  int m_bConsoleOutput;
  char m_szPath[260];
  char m_szFilename[260];
  _SYSTEMTIME m_stOld;
  char m_szOutputFilename[1024];
  SteamEngine::Win32::Utility::COutputFile m_OutputFile;
};

/* 325 */
struct CNSConsoleVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSConsole *this, unsigned int);
};

/* 326 */
struct _COORD
{
  __int16 X;
  __int16 Y;
};

/* 327 */
struct SteamEngine::Win32::Utility::COutputFile
{
  SteamEngine::Win32::Utility::COutputFileVtbl *vfptr;
  _iobuf *m_fp;
  char m_szFilename[256];
  SteamEngine::Win32::System::CCriticalSection m_cs;
};

/* 328 */
struct SteamEngine::Win32::Utility::COutputFileVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::Utility::COutputFile *this, unsigned int);
};

/* 329 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/* 330 */
struct SteamEngine::Win32::Net::CPacketEncipher
{
  SteamEngine::Win32::Net::CPacketEncipherVtbl *vfptr;
};

/* 331 */
struct SteamEngine::Win32::Net::CPacketEncipherVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::Net::CPacketEncipher *this, unsigned int);
};

/* 332 */
struct _MachineSkillTable
{
  char btEquipPart;
  unsigned __int16 wSkillId[20];
};

/* 333 */
struct _NSRANGE
{
  unsigned __int16 x1;
  unsigned __int16 y1;
  unsigned __int16 x2;
  unsigned __int16 y2;
};

/* 334 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<CNSObject *> > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 335 */
struct __cppobj std::_Allocator_base<CNSObject *>
{
};

/* 336 */
struct __cppobj std::allocator<CNSObject *> : std::_Allocator_base<CNSObject *>
{
};

/* 337 */
struct __cppobj __declspec(align(4)) std::_Vector_val<CNSObject *,std::allocator<CNSObject *> > : std::_Container_base_aux_alloc_real<std::allocator<CNSObject *> >
{
  std::allocator<CNSObject *> _Alval;
};

/* 338 */
struct __cppobj std::vector<CNSObject *,std::allocator<CNSObject *> > : std::_Vector_val<CNSObject *,std::allocator<CNSObject *> >
{
  CNSObject **_Myfirst;
  CNSObject **_Mylast;
  CNSObject **_Myend;
};

/* 339 */
struct _MapSizeTable
{
  char btRegion;
  unsigned __int16 x;
  unsigned __int16 y;
};

/* 340 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSPc *>,int,std::pair<unsigned long const ,CNSPc *> const *,std::pair<unsigned long const ,CNSPc *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 341 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSPc *>,int,std::pair<unsigned long const ,CNSPc *> const *,std::pair<unsigned long const ,CNSPc *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSPc *>,int,std::pair<unsigned long const ,CNSPc *> const *,std::pair<unsigned long const ,CNSPc *> const &,std::_Iterator_base_aux>
{
};

/* 342 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSPc *>,int,std::pair<unsigned long const ,CNSPc *> const *,std::pair<unsigned long const ,CNSPc *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *_Ptr;
};

/* 343 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::const_iterator
{
};

/* 344 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSObject *>,int,std::pair<unsigned long const ,CNSObject *> const *,std::pair<unsigned long const ,CNSObject *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 345 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSObject *>,int,std::pair<unsigned long const ,CNSObject *> const *,std::pair<unsigned long const ,CNSObject *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSObject *>,int,std::pair<unsigned long const ,CNSObject *> const *,std::pair<unsigned long const ,CNSObject *> const &,std::_Iterator_base_aux>
{
};

/* 346 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSObject *>,int,std::pair<unsigned long const ,CNSObject *> const *,std::pair<unsigned long const ,CNSObject *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *_Ptr;
};

/* 347 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::const_iterator
{
};

/* 348 */
struct _TypeDescriptor
{
  const void *pVFTable;
  void *spare;
  char name[];
};

/* 349 */
struct _PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 350 */
struct _s__RTTIBaseClassDescriptor2
{
  _TypeDescriptor *pTypeDescriptor;
  unsigned int numContainedBases;
  _PMD where;
  unsigned int attributes;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 351 */
const struct __unaligned __declspec(align(1)) _s__RTTIBaseClassArray
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[];
};

/* 352 */
const struct _s__RTTIClassHierarchyDescriptor
{
  unsigned int signature;
  unsigned int attributes;
  unsigned int numBaseClasses;
  _s__RTTIBaseClassArray *pBaseClassArray;
};

/* 353 */
struct _s__CatchableType
{
  unsigned int properties;
  _TypeDescriptor *pType;
  _PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 354 */
struct _s__CatchableTypeArray
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[];
};

/* 355 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSPcTitle *>,int,std::pair<unsigned short const ,CNSPcTitle *> const *,std::pair<unsigned short const ,CNSPcTitle *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 356 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSPcTitle *>,int,std::pair<unsigned short const ,CNSPcTitle *> const *,std::pair<unsigned short const ,CNSPcTitle *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSPcTitle *>,int,std::pair<unsigned short const ,CNSPcTitle *> const *,std::pair<unsigned short const ,CNSPcTitle *> const &,std::_Iterator_base_aux>
{
};

/* 357 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSPcTitle *>,int,std::pair<unsigned short const ,CNSPcTitle *> const *,std::pair<unsigned short const ,CNSPcTitle *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *_Ptr;
};

/* 358 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::const_iterator
{
};

/* 359 */
struct _s__RTTICompleteObjectLocator
{
  unsigned int signature;
  unsigned int offset;
  unsigned int cdOffset;
  _TypeDescriptor *pTypeDescriptor;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 360 */
struct SteamEngine::Win32::System::CThread
{
  SteamEngine::Win32::System::CThreadVtbl *vfptr;
  void *m_hThread;
  int m_bStarted;
  unsigned int m_dwThread;
};

/* 361 */
struct SteamEngine::Win32::System::CThreadVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::System::CThread *this, unsigned int);
  void (__thiscall *Action)(SteamEngine::Win32::System::CThread *this);
};

/* 362 */
struct __cppobj CSingleton<CNSNpcManager>
{
};

/* 363 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSNpc *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 364 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSNpc *> > >
{
  std::less<unsigned long> comp;
};

/* 365 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node>
{
};

/* 366 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node>
{
};

/* 367 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> > : std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node> _Alnod;
};

/* 368 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *>
{
};

/* 369 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *>
{
};

/* 370 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *> _Alptr;
};

/* 371 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSNpc *> >
{
};

/* 372 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpc *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSNpc *> >
{
};

/* 373 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSNpc *> > _Alval;
};

/* 374 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSNpc *> _Myval;
  char _Color;
  char _Isnil;
};

/* 375 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 376 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> > >
{
  std::less<unsigned long> comp;
};

/* 377 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node>
{
};

/* 378 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node>
{
};

/* 379 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> > : std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node> _Alnod;
};

/* 380 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *>
{
};

/* 381 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *>
{
};

/* 382 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *> _Alptr;
};

/* 383 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >
{
};

/* 384 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >
{
};

/* 385 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> > _Alval;
};

/* 386 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSShopInventory::_Goods *> _Myval;
  char _Color;
  char _Isnil;
};

/* 387 */
struct CNSShopInventory::_Goods
{
  CNSItem *pItem;
  unsigned int dwSellGold;
};

/* 388 */
struct std::pair<unsigned long const ,CNSShopInventory::_Goods *>
{
  const unsigned int first;
  CNSShopInventory::_Goods *second;
};

/* 389 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 390 */
struct __cppobj std::map<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >
{
};

/* 391 */
struct CNSShopInventory
{
  unsigned __int16 m_wSellPer;
  unsigned __int16 m_wBuyPer;
  std::map<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> > > m_mapGoods;
};

/* 392 */
struct __cppobj CNSNpc : CNSCharacter
{
  unsigned __int16 m_wStartAngle;
  unsigned __int16 m_wNpcId;
  char m_szNpcName[25];
  char m_btNpcGroup;
  char m_btAttackType;
  char m_btMoveType;
  char m_btSkillGroup;
  unsigned int m_dwMaxHpBasic;
  unsigned __int16 m_wDefenseDamageBasic;
  unsigned __int16 m_wAttackMaxDamageBasic;
  unsigned __int16 m_wAttackMinDamageBasic;
  NSPOINT2 m_cellRespawn;
  unsigned __int16 m_wRespawnScope;
  unsigned __int16 m_wRespawnSecond;
  unsigned int m_dwDisappearTime;
  unsigned __int16 m_wLimitMoveScope;
  unsigned int m_dwSkillTargetObjectId;
  unsigned int m_dwOldTargetObjectId;
  unsigned int m_dwLeaderObjectId;
  unsigned int m_dwOwnerObjectId;
  CNSShopInventory m_ShopInven;
  CNSNpcSkill m_NpcSkill;
  char m_btPetGrade;
  int m_bPetInfoAfterHide;
  unsigned int m_dwPetInfoTime;
  unsigned int m_dwScriptLastTime;
  char m_szScriptLastString[256];
  unsigned __int16 m_wTargetNpcId;
  char m_btAttribute;
  char m_btAttributeLevel;
  NSPOINT2 m_cellStart;
  int m_bDelete;
  CFiniteStateMachine *m_fsm;
  CNSNpcState *m_ActionCurrent;
  CNSNpcState *m_ActionArray[8];
  CNSNpcState *m_ActionGlobal;
  unsigned int m_dwNpcIdleTime;
  unsigned int m_dwQuestCheckTime;
  unsigned int m_dwLastSetTargetTime;
  unsigned int m_dwHitLastPcObjectId;
  char m_btHitLastPcRealm;
  unsigned int m_dwStateOld;
  char m_btPetState;
  CNSCriticalSection m_cs;
  struct lua_State *m_L;
};

/* 393 */
struct __declspec(align(4)) CNSNpcSkill
{
  CNSNpc *m_pParent;
  char m_btCount[9];
  char m_btSkillArray[9][5];
};

/* 394 */
struct CFiniteStateMachine
{
  CFiniteStateMachineVtbl *vfptr;
  std::map<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> > > m_mapState;
  CFiniteState *m_currentState;
};

/* 395 */
struct CFiniteStateMachineVtbl
{
  void *(__thiscall *__vecDelDtor)(CFiniteStateMachine *this, unsigned int);
};

/* 396 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CFiniteState *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 397 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CFiniteState *> > >
{
  std::less<unsigned long> comp;
};

/* 398 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node>
{
};

/* 399 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node>
{
};

/* 400 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> > : std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node> _Alnod;
};

/* 401 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *>
{
};

/* 402 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *>
{
};

/* 403 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *> _Alptr;
};

/* 404 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CFiniteState *> >
{
};

/* 405 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CFiniteState *> > : std::_Allocator_base<std::pair<unsigned long const ,CFiniteState *> >
{
};

/* 406 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CFiniteState *> > _Alval;
};

/* 407 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CFiniteState *> _Myval;
  char _Color;
  char _Isnil;
};

/* 408 */
struct CFiniteState
{
  CFiniteStateVtbl *vfptr;
  unsigned int m_dwStateId;
  std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > m_mapTransition;
};

/* 409 */
struct CFiniteStateVtbl
{
  void *(__thiscall *__vecDelDtor)(CFiniteState *this, unsigned int);
};

/* 410 */
struct std::pair<unsigned long const ,CFiniteState *>
{
  const unsigned int first;
  CFiniteState *second;
};

/* 411 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 412 */
struct __cppobj std::map<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >
{
};

/* 413 */
struct CNSNpcState
{
  CNSNpcStateVtbl *vfptr;
  CNSNpc *m_pParent;
  int m_bFirst;
  unsigned int m_dwTraceTime;
};

/* 414 */
struct CNSNpcStateVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSNpcState *this, unsigned int);
  void (__thiscall *Action)(CNSNpcState *this, unsigned int);
  int (__thiscall *IsFirst)(CNSNpcState *this);
  void (__thiscall *Clear)(CNSNpcState *this);
};

/* 415 */
struct std::pair<unsigned long const ,CNSNpc *>
{
  const unsigned int first;
  CNSNpc *second;
};

/* 416 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 417 */
struct __cppobj std::map<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >
{
};

/* 418 */
struct CNSNpcManager::_BlockObject
{
  unsigned __int16 wNpcId;
  NSPOINT2 cell;
  unsigned __int16 wAngle;
};

/* 419 */
struct __cppobj CNSNpcManager : SteamEngine::Win32::System::CThread, CSingleton<CNSNpcManager>
{
  std::map<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> > > m_mapNpc;
  unsigned int m_dwBlockObjectCount;
  CNSNpcManager::_BlockObject m_blockObjectArray[1024];
  unsigned int m_dwSteamCoreCount;
  CNSNpcManager::_BlockObject m_steamCoreArray[100];
  unsigned int m_dwRealmCastleCountArray[5];
  CNSCriticalSection m_cs;
  unsigned __int16 m_dwId;
  unsigned int m_dwTickCounter;
};

/* 420 */
struct __declspec(align(4)) CNSNpcParams::_NpcArrange
{
  int nSeq;
  char btRegion;
  unsigned int dwInstantKey;
  NSPOINT2 cellPos;
  unsigned __int16 wAngle;
  unsigned __int16 wScope;
  unsigned __int16 wNpcId;
  char btNpcCount;
  unsigned __int16 wRespawnSecond;
  unsigned __int16 wLimitMoveScope;
  unsigned __int16 wPathId;
};

/* 421 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSNpc *>,int,std::pair<unsigned long const ,CNSNpc *> const *,std::pair<unsigned long const ,CNSNpc *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 422 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSNpc *>,int,std::pair<unsigned long const ,CNSNpc *> const *,std::pair<unsigned long const ,CNSNpc *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSNpc *>,int,std::pair<unsigned long const ,CNSNpc *> const *,std::pair<unsigned long const ,CNSNpc *> const &,std::_Iterator_base_aux>
{
};

/* 423 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSNpc *>,int,std::pair<unsigned long const ,CNSNpc *> const *,std::pair<unsigned long const ,CNSNpc *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *_Ptr;
};

/* 424 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::const_iterator
{
};

/* 425 */
struct sockaddr
{
  unsigned __int16 sa_family;
  char sa_data[14];
};

/* 426 */
struct tagLC_ID
{
  unsigned __int16 wLanguage;
  unsigned __int16 wCountry;
  unsigned __int16 wCodePage;
};

/* 427 */
struct $BC236CFBD570C18489EB46681F52D83D
{
  char *locale;
  unsigned __int16 *wlocale;
  int *refcount;
  int *wrefcount;
};

/* 428 */
struct threadlocaleinfostruct
{
  int refcount;
  unsigned int lc_codepage;
  unsigned int lc_collate_cp;
  unsigned int lc_handle[6];
  tagLC_ID lc_id[6];
  $BC236CFBD570C18489EB46681F52D83D lc_category[6];
  int lc_clike;
  int mb_cur_max;
  int *lconv_intl_refcount;
  int *lconv_num_refcount;
  int *lconv_mon_refcount;
  struct lconv *lconv;
  int *ctype1_refcount;
  unsigned __int16 *ctype1;
  const unsigned __int16 *pctype;
  const char *pclmap;
  const char *pcumap;
  struct __lc_time_data *lc_time_curr;
};

/* 429 */
struct localeinfo_struct
{
  threadlocaleinfostruct *locinfo;
  threadmbcinfostruct *mbcinfo;
};

/* 430 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSShopInventory::_Goods *>,int,std::pair<unsigned long const ,CNSShopInventory::_Goods *> const *,std::pair<unsigned long const ,CNSShopInventory::_Goods *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 431 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSShopInventory::_Goods *>,int,std::pair<unsigned long const ,CNSShopInventory::_Goods *> const *,std::pair<unsigned long const ,CNSShopInventory::_Goods *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSShopInventory::_Goods *>,int,std::pair<unsigned long const ,CNSShopInventory::_Goods *> const *,std::pair<unsigned long const ,CNSShopInventory::_Goods *> const &,std::_Iterator_base_aux>
{
};

/* 432 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSShopInventory::_Goods *>,int,std::pair<unsigned long const ,CNSShopInventory::_Goods *> const *,std::pair<unsigned long const ,CNSShopInventory::_Goods *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *_Ptr;
};

/* 433 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::const_iterator
{
};

/* 434 */
struct CNSDbManager::_SavePc
{
  CNSDbManager::SAVEPCMODE mode;
  CNSPc *pPc;
};

/* 435 */
struct __cppobj std::_Allocator_base<CNSDbManager::_SavePc *>
{
};

/* 436 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<CNSDbManager::_SavePc *> > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 437 */
struct __cppobj std::allocator<CNSDbManager::_SavePc *> : std::_Allocator_base<CNSDbManager::_SavePc *>
{
};

/* 438 */
struct CNSPcDamageCounter::_Attacker
{
  int nUserSeq;
  unsigned int dwHitCount;
  unsigned int dwTime;
};

/* 439 */
struct std::pair<int const ,CNSPcDamageCounter::_Attacker *>
{
  const int first;
  CNSPcDamageCounter::_Attacker *second;
};

/* 440 */
struct __cppobj std::_Allocator_base<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >
{
};

/* 441 */
struct __cppobj std::_Allocator_base<CNSDbManager::_SavePc * *>
{
};

/* 442 */
struct CNSItemParams::_ItemExt::_Option
{
  char btParam;
  unsigned __int16 wValue;
};

/* 443 */
struct CNSItemParams::_ItemExt
{
  unsigned __int16 wItemId;
  char btSeq;
  unsigned __int16 wAttackMinDamage;
  unsigned __int16 wAttackMaxDamage;
  CNSItemParams::_ItemExt::_Option Option[10];
};

/* 444 */
struct std::pair<unsigned long const ,CNSItemParams::_ItemExt *>
{
  const unsigned int first;
  CNSItemParams::_ItemExt *second;
};

/* 445 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >
{
};

/* 446 */
struct __cppobj std::allocator<CNSDbManager::_SavePc * *> : std::_Allocator_base<CNSDbManager::_SavePc * *>
{
};

/* 447 */
struct __cppobj __declspec(align(4)) std::_Deque_map<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *> > : std::_Container_base_aux_alloc_real<std::allocator<CNSDbManager::_SavePc *> >
{
  std::allocator<CNSDbManager::_SavePc * *> _Almap;
};

/* 448 */
struct __cppobj __declspec(align(4)) std::_Deque_val<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *> > : std::_Deque_map<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *> >
{
  std::allocator<CNSDbManager::_SavePc *> _Alval;
};

/* 449 */
struct std::pair<unsigned short const ,CNSItem *>
{
  const unsigned __int16 first;
  CNSItem *second;
};

/* 450 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSItem *> >
{
};

/* 451 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> _Myval;
  char _Color;
  char _Isnil;
};

/* 452 */
struct CNSNpcParams::_PetMsg
{
  char btRegion;
  char btLevel;
  char szMsg[512];
};

/* 453 */
struct std::pair<unsigned short const ,CNSNpcParams::_PetMsg *>
{
  const unsigned __int16 first;
  CNSNpcParams::_PetMsg *second;
};

/* 454 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *>
{
};

/* 455 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> _Myval;
  char _Color;
  char _Isnil;
};

/* 456 */
struct CNSNpcParams::_NpcScript
{
  unsigned __int16 wNpcId;
  char *szScript;
};

/* 457 */
struct std::pair<unsigned long const ,CNSNpcParams::_NpcScript *>
{
  const unsigned int first;
  CNSNpcParams::_NpcScript *second;
};

/* 458 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *>
{
};

/* 459 */
struct __cppobj std::allocator<CNSDbManager::_SavePc *>::rebind<std::_Aux_cont>
{
};

/* 460 */
struct __cppobj std::allocator<CNSDbManager::_SavePc *>::rebind<CNSDbManager::_SavePc *>
{
};

/* 461 */
struct __cppobj std::allocator<CNSDbManager::_SavePc *>::rebind<CNSDbManager::_SavePc * *>
{
};

/* 462 */
struct CNSItemParams::_PremiumItem
{
  char btCategory;
  char btSeq;
  char szGoodName[41];
  unsigned __int16 wItemId;
  char btItemCount;
  int nGoodLimitCount;
  unsigned int dwGoodSellCount;
  unsigned int dwCash;
};

/* 463 */
struct std::pair<unsigned short const ,CNSItemParams::_PremiumItem *>
{
  const unsigned __int16 first;
  CNSItemParams::_PremiumItem *second;
};

/* 464 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >
{
};

/* 465 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *_Right;
  std::pair<int const ,CNSPcDamageCounter::_Attacker *> _Myval;
  char _Color;
  char _Isnil;
};

/* 466 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *>
{
};

/* 467 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node>
{
};

/* 468 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *_Right;
  std::pair<int const ,CNSMsgParams::_NSMsg *> _Myval;
  char _Color;
  char _Isnil;
};

/* 469 */
struct CNSMsgParams::_NSMsg
{
  int nMsgId;
  char szMsg[256];
};

/* 470 */
struct std::pair<int const ,CNSMsgParams::_NSMsg *>
{
  const int first;
  CNSMsgParams::_NSMsg *second;
};

/* 471 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node>
{
};

/* 472 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSItemParams::_ItemExt *> _Myval;
  char _Color;
  char _Isnil;
};

/* 473 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *>
{
};

/* 474 */
struct __cppobj std::_Allocator_base<int>
{
};

/* 475 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 476 */
struct __cppobj std::binary_function<int,int,bool>
{
};

/* 477 */
struct __cppobj std::less<int> : std::binary_function<int,int,bool>
{
};

/* 478 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> > >
{
  std::less<int> comp;
};

/* 479 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node>
{
};

/* 480 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node>
{
};

/* 481 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> > : std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node> _Alnod;
};

/* 482 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *>
{
};

/* 483 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *> _Alptr;
};

/* 484 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> > : std::_Allocator_base<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >
{
};

/* 485 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >
{
  std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> > _Alval;
};

/* 486 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node>
{
};

/* 487 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *>
{
};

/* 488 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CFiniteState *> >::rebind<std::_Aux_cont>
{
};

/* 489 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CFiniteState *> >::rebind<std::pair<unsigned long const ,CFiniteState *> >
{
};

/* 490 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CFiniteState *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node>
{
};

/* 491 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CFiniteState *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *>
{
};

/* 492 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CFiniteState *> >::rebind<unsigned long>
{
};

/* 493 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CFiniteState *> >::rebind<char>
{
};

/* 494 */
struct __cppobj std::_Allocator_base<char>
{
};

/* 495 */
struct __cppobj std::allocator<char> : std::_Allocator_base<char>
{
};

/* 496 */
struct __cppobj std::_Allocator_base<unsigned long>
{
};

/* 497 */
struct __cppobj std::allocator<unsigned long> : std::_Allocator_base<unsigned long>
{
};

/* 498 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >::rebind<std::_Aux_cont>
{
};

/* 499 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >::rebind<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >
{
};

/* 500 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node>
{
};

/* 501 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *>
{
};

/* 502 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >::rebind<int>
{
};

/* 503 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >::rebind<char>
{
};

/* 504 */
struct __cppobj std::allocator<int> : std::_Allocator_base<int>
{
};

/* 505 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSItemParams::_RandomItem *> _Myval;
  char _Color;
  char _Isnil;
};

/* 506 */
struct __declspec(align(2)) CNSItemParams::_RandomItem::_Item
{
  int nPro;
  unsigned __int16 wItemId;
  char btItemCount;
};

/* 507 */
struct CNSItemParams::_RandomItem
{
  CNSItemParams::_RandomItem::_Item Item[10];
};

/* 508 */
struct std::pair<unsigned short const ,CNSItemParams::_RandomItem *>
{
  const unsigned __int16 first;
  CNSItemParams::_RandomItem *second;
};

/* 509 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *>
{
};

/* 510 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node>
{
};

/* 511 */
struct __cppobj std::_Allocator_base<CNSSessionPc *>
{
};

/* 512 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> _Myval;
  char _Color;
  char _Isnil;
};

/* 513 */
struct CNSNpcParams::_NpcDropItem
{
  unsigned __int16 wNpcId;
  unsigned int dwGold;
  unsigned int dwProArray[48];
  unsigned __int16 wItemArray[48];
};

/* 514 */
struct std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *>
{
  const unsigned __int16 first;
  CNSNpcParams::_NpcDropItem *second;
};

/* 515 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node>
{
};

/* 516 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 517 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> > >
{
  std::less<unsigned long> comp;
};

/* 518 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >
{
};

/* 519 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> > : std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node> _Alnod;
};

/* 520 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >::rebind<std::_Aux_cont>
{
};

/* 521 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >::rebind<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >
{
};

/* 522 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node>
{
};

/* 523 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::_Node *>
{
};

/* 524 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >::rebind<unsigned long>
{
};

/* 525 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >::rebind<char>
{
};

/* 526 */
const struct __cppobj std::_Container_base_secure
{
};

/* 527 */
struct __cppobj std::_Iterator_base_secure : std::_Iterator_base_universal
{
  std::_Container_base_secure *_Mycont;
};

/* 528 */
struct __cppobj std::random_access_iterator_tag : std::bidirectional_iterator_tag
{
};

/* 529 */
struct __cppobj std::_Ranit_base<char,int,char const *,char const &,std::_Iterator_base_secure> : std::_Iterator_base_secure
{
};

/* 530 */
struct __cppobj std::_Allocator_base<std::pair<int const ,CNSMsgParams::_NSMsg *> >
{
};

/* 531 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node>
{
};

/* 532 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >
{
};

/* 533 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 534 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> > >
{
  std::less<unsigned short> comp;
};

/* 535 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node>
{
};

/* 536 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> > : std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node> _Alnod;
};

/* 537 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *>
{
};

/* 538 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *> _Alptr;
};

/* 539 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >
{
};

/* 540 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >
{
};

/* 541 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> > _Alval;
};

/* 542 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >
{
};

/* 543 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItem *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSItem *> >
{
};

/* 544 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItem *> >::rebind<std::_Aux_cont>
{
};

/* 545 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItem *> >::rebind<std::pair<unsigned short const ,CNSItem *> >
{
};

/* 546 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node>
{
};

/* 547 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *>
{
};

/* 548 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItem *> >::rebind<unsigned short>
{
};

/* 549 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItem *> >::rebind<char>
{
};

/* 550 */
struct __cppobj std::_Allocator_base<unsigned short>
{
};

/* 551 */
struct __cppobj std::allocator<unsigned short> : std::_Allocator_base<unsigned short>
{
};

/* 552 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *>
{
};

/* 553 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *>
{
};

/* 554 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node>
{
};

/* 555 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node>
{
};

/* 556 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 557 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> > >
{
  std::less<unsigned short> comp;
};

/* 558 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node>
{
};

/* 559 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> > : std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node> _Alnod;
};

/* 560 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >
{
};

/* 561 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >
{
};

/* 562 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *>
{
};

/* 563 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *> _Alptr;
};

/* 564 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPc *> >::rebind<std::_Aux_cont>
{
};

/* 565 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPc *> >::rebind<std::pair<unsigned long const ,CNSPc *> >
{
};

/* 566 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node>
{
};

/* 567 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::_Node *>
{
};

/* 568 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPc *> >::rebind<unsigned long>
{
};

/* 569 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPc *> >::rebind<char>
{
};

/* 570 */
struct __cppobj std::deque<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *> > : std::_Deque_val<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *> >
{
  CNSDbManager::_SavePc ***_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 571 */
struct __cppobj std::_Iterator_with_base<std::random_access_iterator_tag,CNSDbManager::_SavePc *,int,CNSDbManager::_SavePc * const *,CNSDbManager::_SavePc * const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 572 */
struct __cppobj std::_Ranit<CNSDbManager::_SavePc *,int,CNSDbManager::_SavePc * const *,CNSDbManager::_SavePc * const &> : std::_Iterator_with_base<std::random_access_iterator_tag,CNSDbManager::_SavePc *,int,CNSDbManager::_SavePc * const *,CNSDbManager::_SavePc * const &,std::_Iterator_base_aux>
{
};

/* 573 */
struct __cppobj std::_Deque_const_iterator<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *>,1> : std::_Ranit<CNSDbManager::_SavePc *,int,CNSDbManager::_SavePc * const *,CNSDbManager::_SavePc * const &>
{
  unsigned int _Myoff;
};

/* 574 */
struct __cppobj std::_Deque_iterator<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *>,1> : std::_Deque_const_iterator<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *>,1>
{
};

/* 575 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >
{
};

/* 576 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >::rebind<std::_Aux_cont>
{
};

/* 577 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >::rebind<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >
{
};

/* 578 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node>
{
};

/* 579 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *>
{
};

/* 580 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >::rebind<unsigned long>
{
};

/* 581 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >::rebind<char>
{
};

/* 582 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *>
{
};

/* 583 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node>
{
};

/* 584 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node>
{
};

/* 585 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSObject *> >::rebind<std::_Aux_cont>
{
};

/* 586 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSObject *> >::rebind<std::pair<unsigned long const ,CNSObject *> >
{
};

/* 587 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSObject *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node>
{
};

/* 588 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSObject *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::_Node *>
{
};

/* 589 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSObject *> >::rebind<unsigned long>
{
};

/* 590 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSObject *> >::rebind<char>
{
};

/* 591 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 592 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> > >
{
  std::less<unsigned short> comp;
};

/* 593 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node>
{
};

/* 594 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node>
{
};

/* 595 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> > : std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node> _Alnod;
};

/* 596 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> _Myval;
  char _Color;
  char _Isnil;
};

/* 597 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >
{
};

/* 598 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *>
{
};

/* 599 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *>
{
};

/* 600 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *> _Alptr;
};

/* 601 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSNpc *> _Myval;
  char _Color;
  char _Isnil;
};

/* 602 */
struct std::pair<unsigned short const ,CNSNpc *>
{
  const unsigned __int16 first;
  CNSNpc *second;
};

/* 603 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node>
{
};

/* 604 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node>
{
};

/* 605 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> _Myval;
  char _Color;
  char _Isnil;
};

/* 606 */
struct std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *>
{
  const unsigned int first;
  CNSNpcParams::_NpcArrange *second;
};

/* 607 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node>
{
};

/* 608 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >::rebind<std::_Aux_cont>
{
};

/* 609 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >::rebind<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >
{
};

/* 610 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node>
{
};

/* 611 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *>
{
};

/* 612 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >::rebind<unsigned long>
{
};

/* 613 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >::rebind<char>
{
};

/* 614 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *>
{
};

/* 615 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 616 */
struct CNSNpcParams::_NpcPath
{
  unsigned __int16 wNpcId;
  unsigned int dwCount;
  NSPOINT2 cell[20];
};

/* 617 */
struct std::pair<unsigned short const ,CNSNpcParams::_NpcPath *>
{
  const unsigned __int16 first;
  CNSNpcParams::_NpcPath *second;
};

/* 618 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >
{
};

/* 619 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >
{
};

/* 620 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> > >
{
  std::less<unsigned short> comp;
};

/* 621 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *>
{
};

/* 622 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 623 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >
{
};

/* 624 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> > >
{
  std::less<unsigned short> comp;
};

/* 625 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> > : std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node> _Alnod;
};

/* 626 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *>
{
};

/* 627 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *>
{
};

/* 628 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *> _Alptr;
};

/* 629 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> > _Alval;
};

/* 630 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> > _Alval;
};

/* 631 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> _Myval;
  char _Color;
  char _Isnil;
};

/* 632 */
struct CNSNpcParams::_NpcArrangePath
{
  unsigned __int16 wPathId;
  unsigned int dwCount;
  NSPOINT2 cell[20];
};

/* 633 */
struct std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *>
{
  const unsigned __int16 first;
  CNSNpcParams::_NpcArrangePath *second;
};

/* 634 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node>
{
};

/* 635 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 636 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> > >
{
  std::less<unsigned long> comp;
};

/* 637 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node>
{
};

/* 638 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> > : std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node> _Alnod;
};

/* 639 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *>
{
};

/* 640 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *>
{
};

/* 641 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *> _Alptr;
};

/* 642 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >
{
};

/* 643 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >
{
};

/* 644 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> > _Alval;
};

/* 645 */
struct __cppobj std::_Allocator_base<wchar_t>
{
};

/* 646 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSItem *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 647 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSItem *> > >
{
  std::less<unsigned short> comp;
};

/* 648 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpc *> >::rebind<std::_Aux_cont>
{
};

/* 649 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpc *> >::rebind<std::pair<unsigned long const ,CNSNpc *> >
{
};

/* 650 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node>
{
};

/* 651 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::_Node *>
{
};

/* 652 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpc *> >::rebind<unsigned long>
{
};

/* 653 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpc *> >::rebind<char>
{
};

/* 654 */
struct __cppobj std::binary_function<CNSSessionPc *,CNSSessionPc *,bool>
{
};

/* 655 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 656 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >
{
};

/* 657 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >
{
};

/* 658 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *> _Alptr;
};

/* 659 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> > _Alval;
};

/* 660 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpc *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 661 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpc *> > >
{
  std::less<unsigned short> comp;
};

/* 662 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSNpc *> >
{
};

/* 663 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpc *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSNpc *> >
{
};

/* 664 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node>
{
};

/* 665 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> > : std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node> _Alnod;
};

/* 666 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CFiniteState *>,int,std::pair<unsigned long const ,CFiniteState *> const *,std::pair<unsigned long const ,CFiniteState *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 667 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CFiniteState *>,int,std::pair<unsigned long const ,CFiniteState *> const *,std::pair<unsigned long const ,CFiniteState *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CFiniteState *>,int,std::pair<unsigned long const ,CFiniteState *> const *,std::pair<unsigned long const ,CFiniteState *> const &,std::_Iterator_base_aux>
{
};

/* 668 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CFiniteState *>,int,std::pair<unsigned long const ,CFiniteState *> const *,std::pair<unsigned long const ,CFiniteState *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::_Node *_Ptr;
};

/* 669 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::const_iterator
{
};

/* 670 */
struct std::exception
{
  std::exceptionVtbl *vfptr;
  const char *_m_what;
  int _m_doFree;
};

/* 671 */
struct std::exceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(std::exception *this, unsigned int);
  const char *(__thiscall *what)(std::exception *this);
};

/* 672 */
struct __cppobj std::_String_base : std::_Container_base_secure
{
};

/* 673 */
struct __cppobj std::_String_val<char,std::allocator<char> > : std::_String_base
{
  std::allocator<char> _Alval;
};

/* 674 */
union std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty
{
  char _Buf[16];
  char *_Ptr;
};

/* 675 */
struct __cppobj std::basic_string<char,std::char_traits<char>,std::allocator<char> > : std::_String_val<char,std::allocator<char> >
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 676 */
struct __cppobj std::logic_error : std::exception
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/* 677 */
struct __cppobj std::length_error : std::logic_error
{
};

/* 678 */
struct __cppobj std::runtime_error : std::exception
{
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str;
};

/* 679 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> > : std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node> _Alnod;
};

/* 680 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSItem *> _Myval;
  char _Color;
  char _Isnil;
};

/* 681 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *> _Alptr;
};

/* 682 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 683 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &,std::_Iterator_base_aux>
{
};

/* 684 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 685 */
struct __cppobj std::map<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >
{
};

/* 686 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 687 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> const &,std::_Iterator_base_aux>
{
};

/* 688 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *_Ptr;
};

/* 689 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::const_iterator
{
};

/* 690 */
struct __cppobj std::allocator<void>
{
};

/* 691 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 692 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSItemParams::_RandomItem *>,int,std::pair<unsigned short const ,CNSItemParams::_RandomItem *> const *,std::pair<unsigned short const ,CNSItemParams::_RandomItem *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 693 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSItemParams::_RandomItem *>,int,std::pair<unsigned short const ,CNSItemParams::_RandomItem *> const *,std::pair<unsigned short const ,CNSItemParams::_RandomItem *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSItemParams::_RandomItem *>,int,std::pair<unsigned short const ,CNSItemParams::_RandomItem *> const *,std::pair<unsigned short const ,CNSItemParams::_RandomItem *> const &,std::_Iterator_base_aux>
{
};

/* 694 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSItemParams::_RandomItem *>,int,std::pair<unsigned short const ,CNSItemParams::_RandomItem *> const *,std::pair<unsigned short const ,CNSItemParams::_RandomItem *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *_Ptr;
};

/* 695 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::const_iterator
{
};

/* 696 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::iterator first;
  bool second;
};

/* 697 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 698 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> > >
{
  std::less<unsigned long> comp;
};

/* 699 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> > : std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node> _Alnod;
};

/* 700 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *> _Alptr;
};

/* 701 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> > _Alval;
};

/* 702 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 703 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *>,int,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> const *,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 704 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *>,int,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> const *,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *>,int,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> const *,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> const &,std::_Iterator_base_aux>
{
};

/* 705 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *>,int,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> const *,std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::_Node *_Ptr;
};

/* 706 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::const_iterator
{
};

/* 707 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >::iterator first;
  bool second;
};

/* 708 */
struct __cppobj std::_Unsecure_char_traits_tag
{
};

/* 709 */
struct __cppobj std::_Char_traits_base
{
};

/* 710 */
struct __cppobj std::char_traits<wchar_t> : std::_Char_traits_base
{
};

/* 711 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> _Myval;
  char _Color;
  char _Isnil;
};

/* 712 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node>
{
};

/* 713 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node>
{
};

/* 714 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> > : std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node> _Alnod;
};

/* 715 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 716 */
struct __cppobj std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> > : std::_Allocator_base<std::pair<int const ,CNSMsgParams::_NSMsg *> >
{
};

/* 717 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> > >
{
  std::less<int> comp;
};

/* 718 */
struct __cppobj std::allocator<wchar_t> : std::_Allocator_base<wchar_t>
{
};

/* 719 */
struct __cppobj std::_String_val<wchar_t,std::allocator<wchar_t> > : std::_String_base
{
  std::allocator<wchar_t> _Alval;
};

/* 720 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 721 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *>,int,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> const *,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 722 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *>,int,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> const *,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *>,int,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> const *,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> const &,std::_Iterator_base_aux>
{
};

/* 723 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *>,int,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> const *,std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *_Ptr;
};

/* 724 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::const_iterator
{
};

/* 725 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::iterator first;
  bool second;
};

/* 726 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> > _Alval;
};

/* 727 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 728 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *>,int,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> const *,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 729 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *>,int,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> const *,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *>,int,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> const *,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> const &,std::_Iterator_base_aux>
{
};

/* 730 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *>,int,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> const *,std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *_Ptr;
};

/* 731 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::const_iterator
{
};

/* 732 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::iterator first;
  bool second;
};

/* 733 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,unsigned long>,int,std::pair<unsigned long const ,unsigned long> const *,std::pair<unsigned long const ,unsigned long> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *_Ptr;
};

/* 734 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator
{
};

/* 735 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator first;
  bool second;
};

/* 736 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator>
{
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator second;
};

/* 737 */
struct __cppobj std::_Range_checked_iterator_tag
{
};

/* 738 */
struct __cppobj std::allocator<char>::rebind<char>
{
};

/* 739 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *>
{
};

/* 740 */
union std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Bxty
{
  wchar_t _Buf[8];
  wchar_t *_Ptr;
};

/* 741 */
struct __cppobj std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > : std::_String_val<wchar_t,std::allocator<wchar_t> >
{
  std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 742 */
struct __cppobj std::char_traits<char> : std::_Char_traits_base
{
};

/* 743 */
struct __cppobj std::unary_function<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,unsigned int>
{
};

/* 744 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *>
{
};

/* 745 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >::rebind<std::_Aux_cont>
{
};

/* 746 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >::rebind<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >
{
};

/* 747 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node>
{
};

/* 748 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >::_Node *>
{
};

/* 749 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >::rebind<unsigned short>
{
};

/* 750 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >::rebind<char>
{
};

/* 751 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >::rebind<std::_Aux_cont>
{
};

/* 752 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >::rebind<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >
{
};

/* 753 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node>
{
};

/* 754 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >::_Node *>
{
};

/* 755 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >::rebind<unsigned short>
{
};

/* 756 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >::rebind<char>
{
};

/* 757 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *_Right;
  std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> _Myval;
  char _Color;
  char _Isnil;
};

/* 758 */
struct std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *>
{
  CNSSessionPc *const first;
  SteamEngine::Win32::Net::CPacket *second;
};

/* 759 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node>
{
};

/* 760 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::iterator first;
  bool second;
};

/* 761 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::iterator>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> >,0> >::iterator second;
};

/* 762 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<void *> > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 763 */
struct __cppobj std::_Allocator_base<void * *>
{
};

/* 764 */
struct __cppobj std::allocator<void * *> : std::_Allocator_base<void * *>
{
};

/* 765 */
struct __cppobj __declspec(align(4)) std::_Deque_map<void *,std::allocator<void *> > : std::_Container_base_aux_alloc_real<std::allocator<void *> >
{
  std::allocator<void * *> _Almap;
};

/* 766 */
struct __cppobj std::_Allocator_base<void *>
{
};

/* 767 */
struct __cppobj std::allocator<void *> : std::_Allocator_base<void *>
{
};

/* 768 */
struct __cppobj __declspec(align(4)) std::_Deque_val<void *,std::allocator<void *> > : std::_Deque_map<void *,std::allocator<void *> >
{
  std::allocator<void *> _Alval;
};

/* 769 */
struct __cppobj std::_Unchanged_checked_iterator_base_type_tag
{
};

/* 770 */
struct std::queue<CNSDbManager::_SavePc *,std::deque<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *> > >
{
  std::deque<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *> > c;
};

/* 771 */
struct __cppobj std::invalid_argument : std::logic_error
{
};

/* 772 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *>
{
};

/* 773 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *> _Alptr;
};

/* 774 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSNpc *> > _Alval;
};

/* 775 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 776 */
struct __cppobj std::map<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >
{
};

/* 777 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpc *>,int,std::pair<unsigned short const ,CNSNpc *> const *,std::pair<unsigned short const ,CNSNpc *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 778 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSNpc *>,int,std::pair<unsigned short const ,CNSNpc *> const *,std::pair<unsigned short const ,CNSNpc *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpc *>,int,std::pair<unsigned short const ,CNSNpc *> const *,std::pair<unsigned short const ,CNSNpc *> const &,std::_Iterator_base_aux>
{
};

/* 779 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSNpc *>,int,std::pair<unsigned short const ,CNSNpc *> const *,std::pair<unsigned short const ,CNSNpc *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *_Ptr;
};

/* 780 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::const_iterator
{
};

/* 781 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *>
{
};

/* 782 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *> _Alptr;
};

/* 783 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> > _Alval;
};

/* 784 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >::rebind<std::_Aux_cont>
{
};

/* 785 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >::rebind<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >
{
};

/* 786 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node>
{
};

/* 787 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >::_Node *>
{
};

/* 788 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >::rebind<unsigned short>
{
};

/* 789 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >::rebind<char>
{
};

/* 790 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 791 */
struct __cppobj std::less<CNSSessionPc *> : std::binary_function<CNSSessionPc *,CNSSessionPc *,bool>
{
};

/* 792 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> > >
{
  std::less<CNSSessionPc *> comp;
};

/* 793 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node>
{
};

/* 794 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> > : std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node> _Alnod;
};

/* 795 */
struct __cppobj std::_Allocator_base<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >
{
};

/* 796 */
struct __cppobj std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> > : std::_Allocator_base<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >
{
};

/* 797 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *>
{
};

/* 798 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *>
{
};

/* 799 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> > : std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *> _Alptr;
};

/* 800 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node>
{
};

/* 801 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> > >
{
  std::less<unsigned short> comp;
};

/* 802 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 803 */
struct __cppobj std::map<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >
{
};

/* 804 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSItemParams::_ItemExt *>,int,std::pair<unsigned long const ,CNSItemParams::_ItemExt *> const *,std::pair<unsigned long const ,CNSItemParams::_ItemExt *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 805 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSItemParams::_ItemExt *>,int,std::pair<unsigned long const ,CNSItemParams::_ItemExt *> const *,std::pair<unsigned long const ,CNSItemParams::_ItemExt *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSItemParams::_ItemExt *>,int,std::pair<unsigned long const ,CNSItemParams::_ItemExt *> const *,std::pair<unsigned long const ,CNSItemParams::_ItemExt *> const &,std::_Iterator_base_aux>
{
};

/* 806 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSItemParams::_ItemExt *>,int,std::pair<unsigned long const ,CNSItemParams::_ItemExt *> const *,std::pair<unsigned long const ,CNSItemParams::_ItemExt *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::_Node *_Ptr;
};

/* 807 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::const_iterator
{
};

/* 808 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSItem *> > _Alval;
};

/* 809 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 810 */
struct __cppobj std::map<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >
{
};

/* 811 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSItem *>,int,std::pair<unsigned short const ,CNSItem *> const *,std::pair<unsigned short const ,CNSItem *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 812 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSItem *>,int,std::pair<unsigned short const ,CNSItem *> const *,std::pair<unsigned short const ,CNSItem *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSItem *>,int,std::pair<unsigned short const ,CNSItem *> const *,std::pair<unsigned short const ,CNSItem *> const &,std::_Iterator_base_aux>
{
};

/* 813 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSItem *>,int,std::pair<unsigned short const ,CNSItem *> const *,std::pair<unsigned short const ,CNSItem *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::_Node *_Ptr;
};

/* 814 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::const_iterator
{
};

/* 815 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> > : std::_Tree_val<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 816 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSPcDamageCounter::_Attacker *>,int,std::pair<int const ,CNSPcDamageCounter::_Attacker *> const *,std::pair<int const ,CNSPcDamageCounter::_Attacker *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 817 */
struct __cppobj std::_Bidit<std::pair<int const ,CNSPcDamageCounter::_Attacker *>,int,std::pair<int const ,CNSPcDamageCounter::_Attacker *> const *,std::pair<int const ,CNSPcDamageCounter::_Attacker *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSPcDamageCounter::_Attacker *>,int,std::pair<int const ,CNSPcDamageCounter::_Attacker *> const *,std::pair<int const ,CNSPcDamageCounter::_Attacker *> const &,std::_Iterator_base_aux>
{
};

/* 818 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,CNSPcDamageCounter::_Attacker *>,int,std::pair<int const ,CNSPcDamageCounter::_Attacker *> const *,std::pair<int const ,CNSPcDamageCounter::_Attacker *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::_Node *_Ptr;
};

/* 819 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::const_iterator
{
};

/* 820 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >::iterator first;
  bool second;
};

/* 821 */
struct __cppobj std::_Iterator_with_base<std::random_access_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 822 */
struct __cppobj std::_Ranit<void *,int,void * const *,void * const &> : std::_Iterator_with_base<std::random_access_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux>
{
};

/* 823 */
struct __cppobj std::_Deque_const_iterator<void *,std::allocator<void *>,1> : std::_Ranit<void *,int,void * const *,void * const &>
{
  unsigned int _Myoff;
};

/* 824 */
struct __cppobj std::deque<void *,std::allocator<void *> > : std::_Deque_val<void *,std::allocator<void *> >
{
  void ***_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 825 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node>
{
};

/* 826 */
struct __cppobj std::underflow_error : std::runtime_error
{
};

/* 827 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CFiniteState *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CFiniteState *> >,0> >::iterator first;
  bool second;
};

/* 828 */
struct __cppobj std::bad_exception : std::exception
{
};

/* 829 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> >,0> >::iterator first;
  bool second;
};

/* 830 */
struct __cppobj std::map<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> > > : std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> >,0> >
{
};

/* 831 */
struct __cppobj std::_Unchecked_iterator_tag
{
};

/* 832 */
struct __cppobj std::_Undefined_inner_type_tag
{
};

/* 833 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> > : std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node> _Alnod;
};

/* 834 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *> _Alptr;
};

/* 835 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >
{
  std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> > _Alval;
};

/* 836 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> > : std::_Tree_val<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 837 */
struct __cppobj std::map<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> > > : std::_Tree<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >
{
};

/* 838 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSMsgParams::_NSMsg *>,int,std::pair<int const ,CNSMsgParams::_NSMsg *> const *,std::pair<int const ,CNSMsgParams::_NSMsg *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 839 */
struct __cppobj std::_Bidit<std::pair<int const ,CNSMsgParams::_NSMsg *>,int,std::pair<int const ,CNSMsgParams::_NSMsg *> const *,std::pair<int const ,CNSMsgParams::_NSMsg *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSMsgParams::_NSMsg *>,int,std::pair<int const ,CNSMsgParams::_NSMsg *> const *,std::pair<int const ,CNSMsgParams::_NSMsg *> const &,std::_Iterator_base_aux>
{
};

/* 840 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,CNSMsgParams::_NSMsg *>,int,std::pair<int const ,CNSMsgParams::_NSMsg *> const *,std::pair<int const ,CNSMsgParams::_NSMsg *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *_Ptr;
};

/* 841 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::const_iterator
{
};

/* 842 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::iterator first;
  bool second;
};

/* 843 */
struct __cppobj std::allocator<wchar_t>::rebind<wchar_t>
{
};

/* 844 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *>
{
};

/* 845 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >::rebind<std::_Aux_cont>
{
};

/* 846 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >::rebind<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >
{
};

/* 847 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node>
{
};

/* 848 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::_Node *>
{
};

/* 849 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >::rebind<unsigned long>
{
};

/* 850 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >::rebind<char>
{
};

/* 851 */
struct __cppobj std::allocator<void *>::rebind<std::_Aux_cont>
{
};

/* 852 */
struct __cppobj std::allocator<void *>::rebind<void *>
{
};

/* 853 */
struct __cppobj std::allocator<void *>::rebind<void * *>
{
};

/* 854 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 855 */
struct __cppobj std::map<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >
{
};

/* 856 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *>,int,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> const *,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 857 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *>,int,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> const *,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *>,int,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> const *,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> const &,std::_Iterator_base_aux>
{
};

/* 858 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *>,int,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> const *,std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *_Ptr;
};

/* 859 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::const_iterator
{
};

/* 860 */
struct __cppobj std::allocator<CNSSessionPc *> : std::_Allocator_base<CNSSessionPc *>
{
};

/* 861 */
struct __cppobj std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >::rebind<std::_Aux_cont>
{
};

/* 862 */
struct __cppobj std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >::rebind<std::pair<int const ,CNSMsgParams::_NSMsg *> >
{
};

/* 863 */
struct __cppobj std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node>
{
};

/* 864 */
struct __cppobj std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::_Node *>
{
};

/* 865 */
struct __cppobj std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >::rebind<int>
{
};

/* 866 */
struct __cppobj std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >::rebind<char>
{
};

/* 867 */
struct __cppobj std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> > : std::_Ranit_base<char,int,char const *,char const &,std::_Iterator_base_secure>
{
  const char *_Myptr;
};

/* 868 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> > : std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node> _Alnod;
};

/* 869 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSShopInventory::_Goods *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSShopInventory::_Goods *> >,0> >::iterator first;
  bool second;
};

/* 870 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >::rebind<std::_Aux_cont>
{
};

/* 871 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >::rebind<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >
{
};

/* 872 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node>
{
};

/* 873 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *>
{
};

/* 874 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >::rebind<unsigned short>
{
};

/* 875 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >::rebind<char>
{
};

/* 876 */
struct __cppobj std::map<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> >,0> >
{
};

/* 877 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::iterator first;
  bool second;
};

/* 878 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::iterator>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> >,0> >::iterator second;
};

/* 879 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::iterator first;
  bool second;
};

/* 880 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::iterator>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CNSNpc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpc *> >,0> >::iterator second;
};

/* 881 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 882 */
struct __cppobj std::map<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >
{
};

/* 883 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 884 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> const &,std::_Iterator_base_aux>
{
};

/* 885 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::_Node *_Ptr;
};

/* 886 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::const_iterator
{
};

/* 887 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >::rebind<std::_Aux_cont>
{
};

/* 888 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >::rebind<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >
{
};

/* 889 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node>
{
};

/* 890 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::_Node *>
{
};

/* 891 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >::rebind<unsigned short>
{
};

/* 892 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >::rebind<char>
{
};

/* 893 */
struct __cppobj std::map<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> >,0> >
{
};

/* 894 */
struct __cppobj std::tr1::_Ph<9>
{
};

/* 895 */
struct __cppobj std::tr1::_Ph<7>
{
};

/* 896 */
struct __cppobj std::tr1::_Ph<8>
{
};

/* 897 */
struct __cppobj std::tr1::_Ph<10>
{
};

/* 898 */
struct __cppobj std::tr1::_Ph<1>
{
};

/* 899 */
struct __cppobj std::tr1::_Ph<6>
{
};

/* 900 */
struct __cppobj std::tr1::_Ph<5>
{
};

/* 901 */
struct __cppobj std::tr1::_Ph<4>
{
};

/* 902 */
struct __cppobj std::tr1::_Ph<2>
{
};

/* 903 */
struct __cppobj std::tr1::_Ph<3>
{
};

/* 904 */
struct __cppobj std::tr1::_Nil
{
};

/* 905 */
struct __cppobj std::tr1::bad_function_call : std::exception
{
};

/* 906 */
struct __cppobj std::tr1::bad_weak_ptr : std::exception
{
};

/* 907 */
struct __cppobj std::unary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
{
};

/* 908 */
struct __cppobj std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > : std::unary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int>
{
};

/* 909 */
struct __cppobj std::tr1::hash<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > : std::unary_function<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,unsigned int>
{
};

/* 910 */
struct std::tr1::_Ref_count_base
{
  std::tr1::_Ref_count_baseVtbl *vfptr;
  const volatile void *_Ptr;
  int _Uses;
  int _Weaks;
};

/* WARNING: no name found for type 911 */

/* 912 */
struct type_infoVtbl
{
  void *(__thiscall *__vecDelDtor)(#911 *this, unsigned int);
};

/* 913 */
union $35C4E0C3413C5A1709E7F8A3FD6F96E1
{
  void (__thiscall *~_Ref_count_base)(std::tr1::_Ref_count_base *this);
  void *(__thiscall *__vecDelDtor)(std::tr1::_Ref_count_base *this, unsigned int);
};

/* 914 */
struct std::tr1::_Ref_count_baseVtbl
{
  void (__thiscall *_Destroy)(std::tr1::_Ref_count_base *this);
  void (__thiscall *_Delete_this)(std::tr1::_Ref_count_base *this);
  $35C4E0C3413C5A1709E7F8A3FD6F96E1 ___u2;
  void *(__thiscall *_Get_deleter)(std::tr1::_Ref_count_base *this, #911 *);
};

/* 915 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >::rebind<std::_Aux_cont>
{
};

/* 916 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >::rebind<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >
{
};

/* 917 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node>
{
};

/* 918 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSDamageCounter::_Attacker *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >,0> >::_Node *>
{
};

/* 919 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >::rebind<unsigned long>
{
};

/* 920 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSDamageCounter::_Attacker *> >::rebind<char>
{
};

/* 921 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> >,0> >::iterator first;
  bool second;
};

/* 922 */
struct __cppobj std::domain_error : std::logic_error
{
};

/* 923 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::_Aux_cont>
{
};

/* 924 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::pair<unsigned long const ,unsigned long> >
{
};

/* 925 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node>
{
};

/* 926 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Node *>
{
};

/* 927 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<unsigned long>
{
};

/* 928 */
struct __cppobj std::allocator<std::pair<unsigned long const ,unsigned long> >::rebind<char>
{
};

/* 929 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> >,0> >::iterator first;
  bool second;
};

/* 930 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *>
{
};

/* 931 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *> _Alptr;
};

/* 932 */
struct __cppobj std::overflow_error : std::runtime_error
{
};

/* 933 */
struct __cppobj std::range_error : std::runtime_error
{
};

/* 934 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::iterator first;
  bool second;
};

/* 935 */
struct __cppobj std::map<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> >,0> >
{
};

/* 936 */
struct __cppobj std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >::rebind<std::_Aux_cont>
{
};

/* 937 */
struct __cppobj std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >::rebind<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >
{
};

/* 938 */
struct __cppobj std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >::rebind<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node>
{
};

/* 939 */
struct __cppobj std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >::rebind<std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *>
{
};

/* 940 */
struct __cppobj std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >::rebind<CNSSessionPc *>
{
};

/* 941 */
struct __cppobj std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >::rebind<char>
{
};

/* 942 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> > _Alval;
};

/* 943 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 944 */
struct __cppobj std::map<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >
{
};

/* 945 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 946 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> const &,std::_Iterator_base_aux>
{
};

/* 947 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *>,int,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> const *,std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *_Ptr;
};

/* 948 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::const_iterator
{
};

/* 949 */
struct __cppobj std::out_of_range : std::logic_error
{
};

/* 950 */
struct __cppobj std::map<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> >,0> >
{
};

/* 951 */
struct __cppobj std::_Deque_iterator<void *,std::allocator<void *>,1> : std::_Deque_const_iterator<void *,std::allocator<void *>,1>
{
};

/* 952 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::iterator first;
  bool second;
};

/* 953 */
struct __cppobj std::nothrow_t
{
};

/* 954 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::iterator>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned long,CNSWorldManager::CNSMapInstant *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSWorldManager::CNSMapInstant *> >,0> >::iterator second;
};

/* 955 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >::rebind<std::_Aux_cont>
{
};

/* 956 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >::rebind<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >
{
};

/* 957 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node>
{
};

/* 958 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::_Node *>
{
};

/* 959 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >::rebind<unsigned short>
{
};

/* 960 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >::rebind<char>
{
};

/* 961 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> >,0> >::iterator first;
  bool second;
};

/* 962 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpc *> >::rebind<std::_Aux_cont>
{
};

/* 963 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpc *> >::rebind<std::pair<unsigned short const ,CNSNpc *> >
{
};

/* 964 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node>
{
};

/* 965 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpc *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::_Node *>
{
};

/* 966 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpc *> >::rebind<unsigned short>
{
};

/* 967 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSNpc *> >::rebind<char>
{
};

/* 968 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> >,0> >::iterator first;
  bool second;
};

/* 969 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >::rebind<std::_Aux_cont>
{
};

/* 970 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >::rebind<std::pair<unsigned short const ,CNSPcTitle *> >
{
};

/* 971 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node>
{
};

/* 972 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >,0> >::_Node *>
{
};

/* 973 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >::rebind<unsigned short>
{
};

/* 974 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcTitle *> >::rebind<char>
{
};

/* 975 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> >,0> >::iterator first;
  bool second;
};

/* 976 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >::rebind<std::_Aux_cont>
{
};

/* 977 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >::rebind<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >
{
};

/* 978 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node>
{
};

/* 979 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::_Node *>
{
};

/* 980 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >::rebind<unsigned long>
{
};

/* 981 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >::rebind<char>
{
};

/* 982 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> > : std::_Tree_ptr<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >
{
  std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> > _Alval;
};

/* 983 */
struct __cppobj std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> > : std::_Tree_val<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >
{
  std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 984 */
struct __cppobj std::multimap<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> > > : std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >
{
};

/* 985 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *>,int,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> const *,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 986 */
struct __cppobj std::_Bidit<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *>,int,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> const *,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *>,int,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> const *,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> const &,std::_Iterator_base_aux>
{
};

/* 987 */
struct __cppobj std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::const_iterator : std::_Bidit<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *>,int,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> const *,std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::_Node *_Ptr;
};

/* 988 */
struct __cppobj std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::iterator : std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::const_iterator
{
};

/* 989 */
struct __cppobj std::bad_alloc : std::exception
{
};

/* 990 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> >,0> >::iterator first;
  bool second;
};

/* 991 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::iterator first;
  bool second;
};

/* 992 */
struct std::pair<std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::iterator,std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::iterator>
{
  std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::iterator first;
  std::_Tree<std::_Tmap_traits<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> >,1> >::iterator second;
};

/* 993 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> >,0> >::iterator first;
  bool second;
};

/* 994 */
struct __cppobj std::_Secure_char_traits_tag
{
};

/* 995 */
struct __cppobj std::_Scalar_ptr_iterator_tag
{
};

/* 996 */
struct __type_info_node
{
  void *memPtr;
  __type_info_node *next;
};

/* 997 */
struct $_TypeDescriptor$_extraBytes_36
{
  const void *pVFTable;
  void *spare;
  char name[36];
};

/* 998 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_42
{
  const void *pVFTable;
  void *spare;
  char name[42];
};

/* 999 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_27
{
  const void *pVFTable;
  void *spare;
  char name[27];
};

/* 1000 */
struct $AC279CAA9C5581B899E4397C90E7ADDB
{
  unsigned __int32 LongFunction : 1;
  unsigned __int32 Private : 31;
};

/* 1001 */
union $205D7FA8966CCE43F06AA2F144DF6937
{
  unsigned int Flags;
  $AC279CAA9C5581B899E4397C90E7ADDB s;
};

/* 1002 */
struct _TP_CALLBACK_ENVIRON
{
  unsigned int Version;
  _TP_POOL *Pool;
  _TP_CLEANUP_GROUP *CleanupGroup;
  void (__stdcall *CleanupGroupCancelCallback)(void *, void *);
  void *RaceDll;
  _ACTIVATION_CONTEXT *ActivationContext;
  void (__stdcall *FinalizationCallback)(_TP_CALLBACK_INSTANCE *, void *);
  $205D7FA8966CCE43F06AA2F144DF6937 u;
};

/* 1003 */
struct __cppobj CSingleton<CNSItemParams>
{
};

/* 1004 */
struct __cppobj CNSItemParams : CSingleton<CNSItemParams>
{
  CNSItemParamsVtbl *vfptr;
  std::map<unsigned short,CNSItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItem *> > > m_mapItem;
  std::map<unsigned long,CNSItemParams::_ItemExt *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSItemParams::_ItemExt *> > > m_mapItemExt;
  std::map<unsigned short,CNSItemParams::_PremiumItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_PremiumItem *> > > m_mapPremiumItem;
  std::map<unsigned short,CNSItemParams::_RandomItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSItemParams::_RandomItem *> > > m_mapRandomItem;
  CNSItemParams::_SetItem m_setItemArray[10];
  unsigned int m_dwLastPremiumItemLimitTime;
};

/* 1005 */
struct CNSItemParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSItemParams *this, unsigned int);
  int (__thiscall *Init)(CNSItemParams *this);
};

/* 1006 */
struct CNSItemParams::_SetItem
{
  unsigned int dwFullSet;
  CNSItem itemArray[10];
};

/* 1007 */
struct $_TypeDescriptor$_extraBytes_24
{
  const void *pVFTable;
  void *spare;
  char name[24];
};

/* 1008 */
struct NSPOINT2_S
{
  int x;
  int y;
};

/* 1009 */
struct SteamEngine::Win32::Utility::CCsvReader
{
  SteamEngine::Win32::Utility::CCsvReaderVtbl *vfptr;
  _iobuf *m_fp;
  char m_szFilename[256];
  char m_szLine[1024];
  char m_szItemArray[100][1024];
  unsigned int m_dwItem;
  unsigned int m_dwPos;
};

/* 1010 */
struct SteamEngine::Win32::Utility::CCsvReaderVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::Utility::CCsvReader *this, unsigned int);
};

/* 1011 */
struct HWND__
{
  int unused;
};

/* 1012 */
struct SteamEngine::Win32::DB::COdbcBindParameter
{
  SteamEngine::Win32::DB::COdbcBindParameterVtbl *vfptr;
  SteamEngine::Win32::DB::COdbc *m_pOdbc;
  void *m_hStmt;
  int m_nBindCount;
  unsigned int m_dwTime;
  char m_szSqlStatement[1024];
};

/* 1013 */
struct SteamEngine::Win32::DB::COdbcBindParameterVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::DB::COdbcBindParameter *this, unsigned int);
};

/* 1014 */
struct $_TypeDescriptor$_extraBytes_12
{
  const void *pVFTable;
  void *spare;
  char name[12];
};

/* 1015 */
struct __cppobj CSingleton<CNSMsgParams>
{
};

/* 1016 */
struct __cppobj CNSMsgParams : CSingleton<CNSMsgParams>
{
  CNSMsgParamsVtbl *vfptr;
  std::map<int,CNSMsgParams::_NSMsg *,std::less<int>,std::allocator<std::pair<int const ,CNSMsgParams::_NSMsg *> > > m_mapMsg;
};

/* 1017 */
struct CNSMsgParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSMsgParams *this, unsigned int);
  int (__thiscall *Init)(CNSMsgParams *this);
};

/* 1018 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_8
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[2];
  _BYTE gap8[1];
};

/* 1019 */
struct __cppobj CSingleton<CNSPcTitleParams>
{
};

/* 1020 */
struct __cppobj CNSPcTitleParams : CSingleton<CNSPcTitleParams>
{
  CNSPcTitleParamsVtbl *vfptr;
  std::map<unsigned short,CNSPcTitle *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcTitle *> > > m_mapTitle;
};

/* 1021 */
struct CNSPcTitleParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSPcTitleParams *this, unsigned int);
  int (__thiscall *Init)(CNSPcTitleParams *this);
};

/* 1022 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_26
{
  const void *pVFTable;
  void *spare;
  char name[26];
};

/* 1023 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_4
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[1];
  _BYTE gap4[1];
};

/* 1024 */
struct CNSObject::Owner
{
  CNSObject *m_pObject;
};

/* 1025 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_30
{
  const void *pVFTable;
  void *spare;
  char name[30];
};

/* 1026 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_19
{
  const void *pVFTable;
  void *spare;
  char name[19];
};

/* 1027 */
struct _s__ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (*pForwardCompat)(...);
  _s__CatchableTypeArray *pCatchableTypeArray;
};

/* 1028 */
struct boost::details::pool::win32_mutex
{
  _RTL_CRITICAL_SECTION mtx;
};

/* 1029 */
struct __cppobj boost::default_user_allocator_new_delete
{
};

/* 1030 */
struct boost::simple_segregated_storage<unsigned int>
{
  void *first;
};

/* 1031 */
struct boost::details::PODptr<unsigned int>
{
  char *ptr;
  unsigned int sz;
};

/* 1032 */
struct __cppobj boost::pool<boost::default_user_allocator_new_delete> : boost::simple_segregated_storage<unsigned int>
{
  boost::details::PODptr<unsigned int> list;
  const unsigned int requested_size;
  unsigned int next_size;
};

/* 1033 */
struct __cppobj boost::singleton_pool<CNSNpc,19044,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type : boost::details::pool::win32_mutex
{
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 1034 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<CNSNpc,19044,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
};

/* 1035 */
struct __cppobj boost::singleton_pool<CNSNpc,19044,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
};

/* 1036 */
struct __cppobj boost::default_user_allocator_malloc_free
{
};

/* 1037 */
struct __cppobj boost::singleton_pool<CNSPc,129136,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type : boost::details::pool::win32_mutex
{
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 1038 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<CNSPc,129136,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
};

/* 1039 */
struct __cppobj boost::singleton_pool<CNSPc,129136,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
};

/* 1040 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<CNSNpc,19044,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
};

/* 1041 */
struct boost::details::pool::guard<boost::details::pool::win32_mutex>
{
  boost::details::pool::win32_mutex *mtx;
};

/* 1042 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<CNSPc,129136,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
};

/* 1043 */
struct __cppobj boost::details::pool::null_mutex
{
};

/* 1044 */
struct $F0551D0CB09E7A078CAEF7CAC43D74C7
{
  char *locale;
  wchar_t *wlocale;
  int *refcount;
  int *wrefcount;
};

/* 1045 */
struct vc_attributes::PreAttribute
{
  unsigned int Deref;
  vc_attributes::YesNoMaybe Valid;
  vc_attributes::YesNoMaybe Null;
  vc_attributes::YesNoMaybe Tainted;
  vc_attributes::AccessType Access;
  unsigned int ValidElementsConst;
  unsigned int ValidBytesConst;
  const wchar_t *ValidElements;
  const wchar_t *ValidBytes;
  const wchar_t *ValidElementsLength;
  const wchar_t *ValidBytesLength;
  unsigned int WritableElementsConst;
  unsigned int WritableBytesConst;
  const wchar_t *WritableElements;
  const wchar_t *WritableBytes;
  const wchar_t *WritableElementsLength;
  const wchar_t *WritableBytesLength;
  unsigned int ElementSizeConst;
  const wchar_t *ElementSize;
  vc_attributes::YesNoMaybe NullTerminated;
  const wchar_t *Condition;
};

/* 1046 */
struct vc_attributes::PostAttribute
{
  unsigned int Deref;
  vc_attributes::YesNoMaybe Valid;
  vc_attributes::YesNoMaybe Null;
  vc_attributes::YesNoMaybe Tainted;
  vc_attributes::AccessType Access;
  unsigned int ValidElementsConst;
  unsigned int ValidBytesConst;
  const wchar_t *ValidElements;
  const wchar_t *ValidBytes;
  const wchar_t *ValidElementsLength;
  const wchar_t *ValidBytesLength;
  unsigned int WritableElementsConst;
  unsigned int WritableBytesConst;
  const wchar_t *WritableElements;
  const wchar_t *WritableBytes;
  const wchar_t *WritableElementsLength;
  const wchar_t *WritableBytesLength;
  unsigned int ElementSizeConst;
  const wchar_t *ElementSize;
  vc_attributes::YesNoMaybe NullTerminated;
  vc_attributes::YesNoMaybe MustCheck;
  const wchar_t *Condition;
};

/* 1047 */
struct vc_attributes::FormatStringAttribute
{
  const wchar_t *Style;
  const wchar_t *UnformattedAlternative;
};

/* 1048 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_22
{
  const void *pVFTable;
  void *spare;
  char name[22];
};

/* 1049 */
struct $_s__CatchableTypeArray$_extraBytes_12
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[3];
};

/* 1050 */
struct $_s__CatchableTypeArray$_extraBytes_4
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[1];
};

/* 1051 */
struct __cppobj CSingleton<CNSDbManager>
{
};

/* 1052 */
struct __declspec(align(4)) CNSDbManager::_EventParams
{
  int nEventId;
  char btFlag;
};

/* 1053 */
struct CNSDbManager::_DateEventParams
{
  tagTIMESTAMP_STRUCT tsEventDate;
  char szComment[256];
};

/* 1054 */
struct __cppobj CNSDbManager : SteamEngine::Win32::System::CThread, CSingleton<CNSDbManager>
{
  unsigned int m_dwLagTest;
  int m_bThreadLoop;
  SteamEngine::Win32::DB::COdbc *m_pDb;
  std::multimap<CNSSessionPc *,SteamEngine::Win32::Net::CPacket *,std::less<CNSSessionPc *>,std::allocator<std::pair<CNSSessionPc * const,SteamEngine::Win32::Net::CPacket *> > > m_mapDbSession;
  CNSCriticalSection m_csMapDbSession;
  std::queue<CNSDbManager::_SavePc *,std::deque<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *> > > m_queueDbSavePc;
  CNSCriticalSection m_csQueueDbSavePc;
  CNSDbManager::_EventParams m_eventParamsArray[100];
  CNSDbManager::_DateEventParams m_dateEventParamsArray[100];
  char m_szServerName[256];
  char m_szDbName[256];
  char m_szUserId[256];
  char m_szPassword[256];
  SteamEngine::Win32::System::CCriticalSection m_csSock[2];
  CChSocket m_Socket[2];
  int m_bDbCheck;
  unsigned int m_dwLastCheckTime;
};

/* 1055 */
struct _ldiv_t
{
  int quot;
  int rem;
};

/* 1056 */
struct CNSObjectManager
{
  CNSObjectManagerVtbl *vfptr;
  std::map<unsigned long,CNSObject *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSObject *> > > m_mapObject;
  std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > m_mapMaxIndex;
  std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > > m_mapFreeIndex;
  CNSCriticalSection m_cs;
  std::deque<void *,std::allocator<void *> > m_dequeFreeItem;
  SteamEngine::Win32::System::CCriticalSection m_csDequeFreeItem;
};

/* 1057 */
struct CNSObjectManagerVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSObjectManager *this, unsigned int);
};

/* 1058 */
struct CNSPcDamageCounter
{
  CNSPcDamageCounterVtbl *vfptr;
  std::map<int,CNSPcDamageCounter::_Attacker *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter::_Attacker *> > > m_mapAttacker;
  CNSCriticalSection m_cs;
  int m_nUserSeq;
  unsigned int m_dwLastUseTime;
};

/* 1059 */
struct CNSPcDamageCounterVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSPcDamageCounter *this, unsigned int);
};

/* 1060 */
struct __cppobj CSingleton<CNSNpcParams>
{
};

/* 1061 */
struct __cppobj CNSNpcParams : CSingleton<CNSNpcParams>
{
  CNSNpcParamsVtbl *vfptr;
  std::map<unsigned short,CNSNpc *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpc *> > > m_mapNpc;
  std::map<unsigned short,CNSNpcParams::_NpcDropItem *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcDropItem *> > > m_mapNpcDropItem;
  std::map<unsigned long,CNSNpcParams::_NpcArrange *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcArrange *> > > m_mapNpcArrange;
  std::map<unsigned long,CNSNpcParams::_NpcScript *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSNpcParams::_NpcScript *> > > m_mapNpcScript;
  std::map<unsigned short,CNSNpcParams::_NpcPath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcPath *> > > m_mapNpcPath;
  std::map<unsigned short,CNSNpcParams::_NpcArrangePath *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_NpcArrangePath *> > > m_mapNpcArrangePath;
  std::map<unsigned short,CNSNpcParams::_PetMsg *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSNpcParams::_PetMsg *> > > m_mapPetMsg;
};

/* 1062 */
struct CNSNpcParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSNpcParams *this, unsigned int);
  int (__thiscall *Init)(CNSNpcParams *this);
};

/* 1063 */
struct CFiniteState::State
{
  unsigned int dwInputEventId;
  unsigned int dwOutputStateId;
};

/* 1064 */
struct CNSQuest::_dateTime
{
  unsigned __int16 wYear;
  unsigned __int16 wMonth;
  unsigned __int16 wDay;
  unsigned __int16 wHour;
  unsigned __int16 wMinute;
  unsigned __int16 wSecond;
};

/* 1065 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_23
{
  const void *pVFTable;
  void *spare;
  char name[23];
};

/* 1066 */
struct CNSPcParty::PartyMember
{
  char szUserAlias[25];
  unsigned int dwObjectId;
};

/* 1067 */
struct __cppobj __declspec(align(2)) CNSPcParty : CNSObject
{
  CNSPcParty::PartyMember m_PartyMember[8];
  SteamEngine::Win32::Common::CRand32 m_Rand;
  unsigned int m_dwCount;
  CNSPcParty::LOOTMODE m_lootMode;
  unsigned int m_dwLootSeq;
  char m_szPartyName[25];
  char m_szPartyPassword[9];
  char m_szPartyLeader[25];
};

/* 1068 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_13
{
  const void *pVFTable;
  void *spare;
  char name[13];
};

/* 1069 */
struct CNSPc::_BuffTime
{
  char btBuffId;
  __unaligned __declspec(align(1)) unsigned __int16 wSkillId;
  char btLevel;
  unsigned __int16 wValue;
  unsigned __int16 wRemainTime;
};

/* 1070 */
struct $_TypeDescriptor$_extraBytes_20
{
  const void *pVFTable;
  void *spare;
  char name[20];
};

/* 1071 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/* 1072 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_12
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[3];
  _BYTE gapC[1];
};

/* 1073 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_38
{
  const void *pVFTable;
  void *spare;
  char name[38];
};

/* 1074 */
struct CNSGuild::GuildMember
{
  int bStatus;
  char szUserAlias[25];
  char btRank;
  unsigned int dwObjectId;
  int nAliasSeq;
};

/* 1075 */
struct __cppobj CNSGuild : CNSObject
{
  int m_nDbSeq;
  char m_btRealm;
  char m_btLevel;
  int m_nPoint;
  unsigned int m_dwCount;
  unsigned int m_dwMark;
  unsigned int m_dwRank;
  unsigned int m_dwRankPoint;
  unsigned int m_dwRankMonth;
  unsigned int m_dwAllianceGuildId;
  char m_szGuildName[25];
  char m_szGuildMaster[25];
  char m_szComment[256];
  CNSGuild::GuildMember m_GuildMember[60];
  CNSCriticalSection m_cs;
  unsigned __int16 m_wGuildMemberLevel;
  unsigned int m_dwLastGuildMemberLevelTime;
};

/* 1076 */
struct CNSGuild::GuildInfo
{
  char szGuildMaster[25];
  char btRealm;
  char szGuildName[25];
  char btLevel;
  int nPoint;
  unsigned int dwMark;
  unsigned int dwRank;
  unsigned int dwRankPoint;
  unsigned int dwRankMonth;
  char szComment[256];
};

/* 1077 */
struct _MINIDUMP_MEMORY_INFO
{
  unsigned __int64 BaseAddress;
  unsigned __int64 AllocationBase;
  unsigned int AllocationProtect;
  unsigned int __alignment1;
  unsigned __int64 RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
  unsigned int __alignment2;
};

/* 1078 */
struct tagVS_FIXEDFILEINFO
{
  unsigned int dwSignature;
  unsigned int dwStrucVersion;
  unsigned int dwFileVersionMS;
  unsigned int dwFileVersionLS;
  unsigned int dwProductVersionMS;
  unsigned int dwProductVersionLS;
  unsigned int dwFileFlagsMask;
  unsigned int dwFileFlags;
  unsigned int dwFileOS;
  unsigned int dwFileType;
  unsigned int dwFileSubtype;
  unsigned int dwFileDateMS;
  unsigned int dwFileDateLS;
};

/* 1079 */
struct _MINIDUMP_INCLUDE_THREAD_CALLBACK
{
  unsigned int ThreadId;
};

/* 1080 */
struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK
{
  unsigned __int64 Offset;
  unsigned int Bytes;
  HRESULT FailureStatus;
};

/* 1081 */
struct $C3E071958E7BDFB53859BF79F284BD3C
{
  unsigned int ModuleWriteFlags;
  int Cancel;
  unsigned int MemorySize;
};

/* 1082 */
union $04E9D681A774D2C07A3930B2A62E5FFF
{
  $C3E071958E7BDFB53859BF79F284BD3C __s0;
  unsigned int ThreadWriteFlags;
  unsigned int SecondaryFlags;
  unsigned __int64 MemoryBase;
  int CheckCancel;
  void *Handle;
  _MINIDUMP_MEMORY_INFO VmRegion;
  HRESULT Status;
};

/* 1083 */
struct __unaligned __declspec(align(4)) _MINIDUMP_CALLBACK_OUTPUT
{
  $04E9D681A774D2C07A3930B2A62E5FFF ___u0;
  int Continue;
};

/* 1084 */
struct _FLOATING_SAVE_AREA
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int TagWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  char RegisterArea[80];
  unsigned int Cr0NpxState;
};

/* 1085 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
  char ExtendedRegisters[512];
};

/* 1086 */
struct _MINIDUMP_THREAD_EX_CALLBACK
{
  unsigned int ThreadId;
  void *ThreadHandle;
  _CONTEXT Context;
  unsigned int SizeOfContext;
  unsigned __int64 StackBase;
  unsigned __int64 StackEnd;
  unsigned __int64 BackingStoreBase;
  unsigned __int64 BackingStoreEnd;
};

/* 1087 */
struct HINSTANCE__
{
  int unused;
};

/* 1088 */
struct _MINIDUMP_THREAD_CALLBACK
{
  unsigned int ThreadId;
  void *ThreadHandle;
  _CONTEXT Context;
  unsigned int SizeOfContext;
  unsigned __int64 StackBase;
  unsigned __int64 StackEnd;
};

/* 1089 */
struct _MINIDUMP_INCLUDE_MODULE_CALLBACK
{
  unsigned __int64 BaseOfImage;
};

/* 1090 */
struct __unaligned __declspec(align(4)) _MINIDUMP_MODULE_CALLBACK
{
  wchar_t *FullPath;
  unsigned __int64 BaseOfImage;
  unsigned int SizeOfImage;
  unsigned int CheckSum;
  unsigned int TimeDateStamp;
  tagVS_FIXEDFILEINFO VersionInfo;
  void *CvRecord;
  unsigned int SizeOfCvRecord;
  void *MiscRecord;
  unsigned int SizeOfMiscRecord;
};

/* 1091 */
struct _EXCEPTION_RECORD
{
  int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 1092 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/* 1093 */
struct __unaligned __declspec(align(4)) _MINIDUMP_IO_CALLBACK
{
  void *Handle;
  unsigned __int64 Offset;
  void *Buffer;
  unsigned int BufferBytes;
};

/* 1094 */
union $5021EA920A1F33E5E9B6A9E0BD442AA2
{
  HRESULT Status;
  _MINIDUMP_THREAD_CALLBACK Thread;
  _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
  _MINIDUMP_MODULE_CALLBACK Module;
  _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
  _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;
  _MINIDUMP_IO_CALLBACK Io;
  _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK ReadMemoryFailure;
  unsigned int SecondaryFlags;
};

/* 1095 */
struct __unaligned __declspec(align(4)) _MINIDUMP_CALLBACK_INPUT
{
  unsigned int ProcessId;
  void *ProcessHandle;
  unsigned int CallbackType;
  $5021EA920A1F33E5E9B6A9E0BD442AA2 ___u3;
};

/* 1096 */
struct _tagADDRESS64
{
  unsigned __int64 Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/* 1097 */
struct _KDHELP
{
  unsigned int Thread;
  unsigned int ThCallbackStack;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int SystemRangeStart;
  unsigned int ThCallbackBStore;
  unsigned int KiUserExceptionDispatcher;
  unsigned int StackBase;
  unsigned int StackLimit;
  unsigned int Reserved[5];
};

/* 1098 */
struct __cppobj std::_Iterator_with_base<std::random_access_iterator_tag,CNSObject *,int,CNSObject * const *,CNSObject * const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1099 */
struct __cppobj std::_Ranit<CNSObject *,int,CNSObject * const *,CNSObject * const &> : std::_Iterator_with_base<std::random_access_iterator_tag,CNSObject *,int,CNSObject * const *,CNSObject * const &,std::_Iterator_base_aux>
{
};

/* 1100 */
struct __cppobj std::_Vector_const_iterator<CNSObject *,std::allocator<CNSObject *> > : std::_Ranit<CNSObject *,int,CNSObject * const *,CNSObject * const &>
{
  CNSObject **_Myptr;
};

/* 1101 */
struct __cppobj std::_Undefined_move_tag
{
};

/* 1102 */
struct __cppobj std::_Vector_iterator<CNSObject *,std::allocator<CNSObject *> > : std::_Vector_const_iterator<CNSObject *,std::allocator<CNSObject *> >
{
};

/* 1103 */
struct __cppobj std::allocator<CNSObject *>::rebind<std::_Aux_cont>
{
};

/* 1104 */
struct __cppobj std::allocator<CNSObject *>::rebind<CNSObject *>
{
};

/* 1105 */
struct _MINIDUMP_EXCEPTION_INFORMATION
{
  unsigned int ThreadId;
  _EXCEPTION_POINTERS *ExceptionPointers;
  int ClientPointers;
};

/* 1106 */
struct _MINIDUMP_USER_STREAM
{
  unsigned int Type;
  unsigned int BufferSize;
  void *Buffer;
};

/* 1107 */
struct _MINIDUMP_USER_STREAM_INFORMATION
{
  unsigned int UserStreamCount;
  _MINIDUMP_USER_STREAM *UserStreamArray;
};

/* 1108 */
struct SteamEngine::Win32::System::CMiniDumper
{
  SteamEngine::Win32::System::CMiniDumperVtbl *vfptr;
  HINSTANCE__ *m_hDll;
  int (__stdcall *m_pMiniDumpWriteDump)(void *, unsigned int, void *, _MINIDUMP_TYPE, _MINIDUMP_EXCEPTION_INFORMATION *const , _MINIDUMP_USER_STREAM_INFORMATION *const , _MINIDUMP_CALLBACK_INFORMATION *const );
  char m_szDumpPath[260];
  char m_szAppPath[260];
  char m_szAppBaseName[260];
};

/* 1109 */
struct SteamEngine::Win32::System::CMiniDumperVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::System::CMiniDumper *this, unsigned int);
  void (__thiscall *OnEndProcess)(SteamEngine::Win32::System::CMiniDumper *this);
  void (__thiscall *VSetDumpFileName)(SteamEngine::Win32::System::CMiniDumper *this);
  void (__thiscall *VPrintOut)(SteamEngine::Win32::System::CMiniDumper *this, char *, char *);
  _MINIDUMP_USER_STREAM_INFORMATION *(__thiscall *VGetUserStreamArray)(SteamEngine::Win32::System::CMiniDumper *this);
};

/* 1110 */
struct _MINIDUMP_CALLBACK_INFORMATION
{
  int (__stdcall *CallbackRoutine)(void *, _MINIDUMP_CALLBACK_INPUT *const , _MINIDUMP_CALLBACK_OUTPUT *);
  void *CallbackParam;
};

/* 1111 */
struct _KDHELP64
{
  unsigned __int64 Thread;
  unsigned int ThCallbackStack;
  unsigned int ThCallbackBStore;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned __int64 KiCallUserMode;
  unsigned __int64 KeUserCallbackDispatcher;
  unsigned __int64 SystemRangeStart;
  unsigned __int64 KiUserExceptionDispatcher;
  unsigned __int64 StackBase;
  unsigned __int64 StackLimit;
  unsigned __int64 Reserved[5];
};

/* 1112 */
struct _tagADDRESS
{
  unsigned int Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/* 1113 */
struct _SMALL_RECT
{
  __int16 Left;
  __int16 Top;
  __int16 Right;
  __int16 Bottom;
};

/* 1114 */
struct _CONSOLE_SCREEN_BUFFER_INFO
{
  _COORD dwSize;
  _COORD dwCursorPosition;
  unsigned __int16 wAttributes;
  _SMALL_RECT srWindow;
  _COORD dwMaximumWindowSize;
};

/* 1115 */
struct __cppobj CSingleton<CNSTipParams>
{
};

/* 1116 */
struct __cppobj CNSTipParams : CSingleton<CNSTipParams>
{
  CNSTipParamsVtbl *vfptr;
};

/* 1117 */
struct CNSTipParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSTipParams *this, unsigned int);
};

/* 1118 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_35
{
  const void *pVFTable;
  void *spare;
  char name[35];
};

/* 1119 */
struct CNSSlangFilter
{
  char m_szSlangArray[1000][80];
  int m_nSlangCount;
};

/* 1120 */
struct $983F061E0B702DD8AE0B4B955735A6A3
{
  unsigned int Lo;
  int Hi;
};

/* 1121 */
union tagCY
{
  $983F061E0B702DD8AE0B4B955735A6A3 __s0;
  __int64 int64;
};

/* 1122 */
struct IUnknown
{
  IUnknownVtbl *vfptr;
};

/* 1123 */
struct IUnknownVtbl
{
  HRESULT (__stdcall *QueryInterface)(IUnknown *this, _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
};

/* 1124 */
struct __cppobj IDispatch : IUnknown
{
};

/* 1125 */
struct tagSAFEARRAYBOUND
{
  unsigned int cElements;
  int lLbound;
};

/* 1126 */
struct tagSAFEARRAY
{
  unsigned __int16 cDims;
  unsigned __int16 fFeatures;
  unsigned int cbElements;
  unsigned int cLocks;
  void *pvData;
  tagSAFEARRAYBOUND rgsabound[1];
};

/* 1127 */
struct tagVARIANT
{
  $7618D393514C50B4A65D19ACB23B864D ___u0;
};

/* 1128 */
struct $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA
{
  char scale;
  char sign;
};

/* 1129 */
union $9B1F00C9EDC821A6DC1F7941D0CF535C
{
  $5CC4D6FD2BF4E5B80FE1FD714DCA0CFA __s0;
  unsigned __int16 signscale;
};

/* 1130 */
struct $A04CD8C0331024E133CCEC4B0AB36956
{
  unsigned int Lo32;
  unsigned int Mid32;
};

/* 1131 */
union $02333D5C4653F3011368B025F95AEE9E
{
  $A04CD8C0331024E133CCEC4B0AB36956 __s0;
  unsigned __int64 Lo64;
};

/* 1132 */
struct tagDEC
{
  unsigned __int16 wReserved;
  $9B1F00C9EDC821A6DC1F7941D0CF535C ___u1;
  unsigned int Hi32;
  $02333D5C4653F3011368B025F95AEE9E ___u3;
};

/* 1133 */
struct __cppobj IRecordInfo : IUnknown
{
};

/* 1134 */
struct $E2F13C0D8C7A5E44CBEA2DDC2BADB614
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  __int64 llVal;
};

/* 1135 */
struct $30F5EB9E87EE299C24B4604F7D3ED74C
{
  _BYTE gap0[8];
  int lVal;
  IRecordInfo *pRecInfo;
};

/* 1136 */
struct $F28A51B4B40B0D33C72915D739D42B4B
{
  _BYTE gap0[8];
  char bVal;
};

/* 1137 */
struct $31126B8528A05AF3606C6D495FD178E8
{
  _BYTE gap0[8];
  __int16 iVal;
};

/* 1138 */
struct $50230A970D9734D4E9774CFC619DF0F6
{
  _BYTE gap0[8];
  float fltVal;
};

/* 1139 */
struct $4C0EC2258454B893CE739DAE89D8DB7B
{
  _BYTE gap0[8];
  long double dblVal;
};

/* 1140 */
struct $6DB36323059316E675433BB10D285009
{
  _BYTE gap0[8];
  __int16 boolVal;
};

/* 1141 */
struct $8E3C8731874D1B3BC66617C4DD3163A6
{
  _BYTE gap0[8];
  int scode;
};

/* 1142 */
struct $BF7F8F7D427EDAD7B65B36DC1C6C911E
{
  _BYTE gap0[8];
  tagCY cyVal;
};

/* 1143 */
struct $E94952165EEA9EEA990FEB33603E1B19
{
  _BYTE gap0[8];
  long double date;
};

/* 1144 */
struct $7B1C2AA558A72DB3909F7F0B6C8C78B2
{
  _BYTE gap0[8];
  wchar_t *bstrVal;
};

/* 1145 */
struct $E3A9A89D191EFF7E39A4B1D91F931BBC
{
  _BYTE gap0[8];
  IUnknown *punkVal;
};

/* 1146 */
struct $9AA0C6297F298869BA267759B9F809EC
{
  _BYTE gap0[8];
  IDispatch *pdispVal;
};

/* 1147 */
struct $939A5E4F4154CA6B2F5C0D44129D1489
{
  _BYTE gap0[8];
  tagSAFEARRAY *parray;
};

/* 1148 */
struct $166B1F81F6EA96F97683A65F38FB1A59
{
  _BYTE gap0[8];
  char *pbVal;
};

/* 1149 */
struct $76732A64405C0E287FCB302687644550
{
  _BYTE gap0[8];
  __int16 *piVal;
};

/* 1150 */
struct $E5FC128E66C26C95254032BA69D36E74
{
  _BYTE gap0[8];
  int *plVal;
};

/* 1151 */
struct $E9CDCC48CD0BB58E8F361AA17BFDA76E
{
  _BYTE gap0[8];
  __int64 *pllVal;
};

/* 1152 */
struct $BF8CC88CDF129BD6E4FA4ABA13F521AD
{
  _BYTE gap0[8];
  float *pfltVal;
};

/* 1153 */
struct $2CABE618CF1C2625A4479554E4967E0A
{
  _BYTE gap0[8];
  long double *pdblVal;
};

/* 1154 */
struct $AAA92DA1D6E1B0E8462F69216B62027C
{
  _BYTE gap0[8];
  __int16 *pboolVal;
};

/* 1155 */
struct $F7167AE7A8ABA03C094C204FB1564A28
{
  _BYTE gap0[8];
  int *pscode;
};

/* 1156 */
struct $0E775A6B7C96A7C25854EBC88D103E11
{
  _BYTE gap0[8];
  tagCY *pcyVal;
};

/* 1157 */
struct $6857AE69DB7C952EEFD665431A7B503A
{
  _BYTE gap0[8];
  long double *pdate;
};

/* 1158 */
struct $BE56ADCB97A5F80C4E840DC3FCEE04D4
{
  _BYTE gap0[8];
  wchar_t **pbstrVal;
};

/* 1159 */
struct $A9E5A92A0E76DA9A3125C667803D7FA9
{
  _BYTE gap0[8];
  IUnknown **ppunkVal;
};

/* 1160 */
struct $7F3C9196F4617CAEED4E20A26B64441F
{
  _BYTE gap0[8];
  IDispatch **ppdispVal;
};

/* 1161 */
struct $B5E3B0526E83BA38A35257CD199F48AA
{
  _BYTE gap0[8];
  tagSAFEARRAY **pparray;
};

/* 1162 */
struct $32C4212C0ADED01CCCA1A7F98551B194
{
  _BYTE gap0[8];
  tagVARIANT *pvarVal;
};

/* 1163 */
struct $6C39A09D97B880131B2C5BB4943CBB45
{
  _BYTE gap0[8];
  void *byref;
};

/* 1164 */
struct $E898A5260D8380431CCAA47FCC291563
{
  _BYTE gap0[8];
  char cVal;
};

/* 1165 */
struct $48802A31D3D0701BC13CEF9CEA041E7B
{
  _BYTE gap0[8];
  unsigned __int16 uiVal;
};

/* 1166 */
struct $B644145F46FF1F932B106BFA6CC3F6D9
{
  _BYTE gap0[8];
  unsigned int ulVal;
};

/* 1167 */
struct $EA00B0D50EAA1933F67C45009B664198
{
  _BYTE gap0[8];
  unsigned __int64 ullVal;
};

/* 1168 */
struct $5CA90CF57237397281FB12BFD52C1905
{
  _BYTE gap0[8];
  int intVal;
};

/* 1169 */
struct $E7F48E2F4EAA3149E57D87E5D1B2C6B8
{
  _BYTE gap0[8];
  unsigned int uintVal;
};

/* 1170 */
struct $D09366ED86BEA8C77FEB007675F7A2EB
{
  _BYTE gap0[8];
  tagDEC *pdecVal;
};

/* 1171 */
struct $E1D71D20C3D01115E20D79FAE9629CE8
{
  _BYTE gap0[8];
  char *pcVal;
};

/* 1172 */
struct $5669F5A4AD19EF2CB42A5602080CB0A6
{
  _BYTE gap0[8];
  unsigned __int16 *puiVal;
};

/* 1173 */
struct $886F8AE9D7C8B1B861B6CA58D67B682A
{
  _BYTE gap0[8];
  unsigned int *pulVal;
};

/* 1174 */
struct $ADBB94A21537A8461C6168A5B871A740
{
  _BYTE gap0[8];
  unsigned __int64 *pullVal;
};

/* 1175 */
struct $CDA73A427DD2A30CDA26CA3394C33CF0
{
  _BYTE gap0[8];
  int *pintVal;
};

/* 1176 */
struct $2516E53E690D8CC5659AAB7EDC49E664
{
  _BYTE gap0[8];
  unsigned int *puintVal;
};

/* 1177 */
struct $17B4421FDC73B39569D8A12F584CB67F
{
  _BYTE gap0[8];
  void *pvRecord;
};

/* 1178 */
union $7618D393514C50B4A65D19ACB23B864D
{
  $E2F13C0D8C7A5E44CBEA2DDC2BADB614 __s0;
  tagDEC decVal;
  $30F5EB9E87EE299C24B4604F7D3ED74C __s2;
  $F28A51B4B40B0D33C72915D739D42B4B __s3;
  $31126B8528A05AF3606C6D495FD178E8 __s4;
  $50230A970D9734D4E9774CFC619DF0F6 __s5;
  $4C0EC2258454B893CE739DAE89D8DB7B __s6;
  $6DB36323059316E675433BB10D285009 __s7;
  $8E3C8731874D1B3BC66617C4DD3163A6 __s8;
  $BF7F8F7D427EDAD7B65B36DC1C6C911E __s9;
  $E94952165EEA9EEA990FEB33603E1B19 __s10;
  $7B1C2AA558A72DB3909F7F0B6C8C78B2 __s11;
  $E3A9A89D191EFF7E39A4B1D91F931BBC __s12;
  $9AA0C6297F298869BA267759B9F809EC __s13;
  $939A5E4F4154CA6B2F5C0D44129D1489 __s14;
  $166B1F81F6EA96F97683A65F38FB1A59 __s15;
  $76732A64405C0E287FCB302687644550 __s16;
  $E5FC128E66C26C95254032BA69D36E74 __s17;
  $E9CDCC48CD0BB58E8F361AA17BFDA76E __s18;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD __s19;
  $2CABE618CF1C2625A4479554E4967E0A __s20;
  $AAA92DA1D6E1B0E8462F69216B62027C __s21;
  $F7167AE7A8ABA03C094C204FB1564A28 __s22;
  $0E775A6B7C96A7C25854EBC88D103E11 __s23;
  $6857AE69DB7C952EEFD665431A7B503A __s24;
  $BE56ADCB97A5F80C4E840DC3FCEE04D4 __s25;
  $A9E5A92A0E76DA9A3125C667803D7FA9 __s26;
  $7F3C9196F4617CAEED4E20A26B64441F __s27;
  $B5E3B0526E83BA38A35257CD199F48AA __s28;
  $32C4212C0ADED01CCCA1A7F98551B194 __s29;
  $6C39A09D97B880131B2C5BB4943CBB45 __s30;
  $E898A5260D8380431CCAA47FCC291563 __s31;
  $48802A31D3D0701BC13CEF9CEA041E7B __s32;
  $B644145F46FF1F932B106BFA6CC3F6D9 __s33;
  $EA00B0D50EAA1933F67C45009B664198 __s34;
  $5CA90CF57237397281FB12BFD52C1905 __s35;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 __s36;
  $D09366ED86BEA8C77FEB007675F7A2EB __s37;
  $E1D71D20C3D01115E20D79FAE9629CE8 __s38;
  $5669F5A4AD19EF2CB42A5602080CB0A6 __s39;
  $886F8AE9D7C8B1B861B6CA58D67B682A __s40;
  $ADBB94A21537A8461C6168A5B871A740 __s41;
  $CDA73A427DD2A30CDA26CA3394C33CF0 __s42;
  $2516E53E690D8CC5659AAB7EDC49E664 __s43;
  $17B4421FDC73B39569D8A12F584CB67F __s44;
};

/* 1179 */
struct tagPARAMDESCEX
{
  unsigned int cBytes;
  tagVARIANT varDefaultValue;
};

/* 1180 */
struct __declspec(align(4)) tagPARAMDESC
{
  tagPARAMDESCEX *pparamdescex;
  unsigned __int16 wParamFlags;
};

/* 1181 */
struct __declspec(align(4)) tagTYPEDESC
{
  $D9212C57B9334A8821522E665AF92ECC ___u0;
  unsigned __int16 vt;
};

/* 1182 */
struct __unaligned __declspec(align(4)) tagARRAYDESC
{
  tagTYPEDESC tdescElem;
  unsigned __int16 cDims;
  __declspec(align(4)) tagSAFEARRAYBOUND rgbounds[1];
};

/* 1183 */
union $D9212C57B9334A8821522E665AF92ECC
{
  tagTYPEDESC *lptdesc;
  tagARRAYDESC *lpadesc;
  unsigned int hreftype;
};

/* 1184 */
struct __declspec(align(4)) tagIDLDESC
{
  unsigned int dwReserved;
  unsigned __int16 wIDLFlags;
};

/* 1185 */
union $56F8AD7C4946D7834ECB32FBF952EDFC
{
  tagIDLDESC idldesc;
  tagPARAMDESC paramdesc;
};

/* 1186 */
struct tagELEMDESC
{
  tagTYPEDESC tdesc;
  $56F8AD7C4946D7834ECB32FBF952EDFC ___u1;
};

/* 1187 */
struct __declspec(align(4)) tagFUNCDESC
{
  int memid;
  int *lprgscode;
  tagELEMDESC *lprgelemdescParam;
  tagFUNCKIND funckind;
  tagINVOKEKIND invkind;
  tagCALLCONV callconv;
  __int16 cParams;
  __int16 cParamsOpt;
  __int16 oVft;
  __int16 cScodes;
  tagELEMDESC elemdescFunc;
  unsigned __int16 wFuncFlags;
};

/* 1188 */
union $A5BFBD4BCB4BB683E0A31C39F5C22BCB
{
  unsigned int oInst;
  tagVARIANT *lpvarValue;
};

/* 1189 */
struct tagVARDESC
{
  int memid;
  wchar_t *lpstrSchema;
  $A5BFBD4BCB4BB683E0A31C39F5C22BCB ___u2;
  tagELEMDESC elemdescVar;
  unsigned __int16 wVarFlags;
  tagVARKIND varkind;
};

/* 1190 */
struct __cppobj ITypeComp : IUnknown
{
};

/* 1191 */
union tagBINDPTR
{
  tagFUNCDESC *lpfuncdesc;
  tagVARDESC *lpvardesc;
  ITypeComp *lptcomp;
};

/* 1192 */
struct __declspec(align(4)) tagTLIBATTR
{
  _GUID guid;
  unsigned int lcid;
  tagSYSKIND syskind;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  unsigned __int16 wLibFlags;
};

/* 1193 */
struct tagEXCEPINFO
{
  unsigned __int16 wCode;
  unsigned __int16 wReserved;
  wchar_t *bstrSource;
  wchar_t *bstrDescription;
  wchar_t *bstrHelpFile;
  unsigned int dwHelpContext;
  void *pvReserved;
  HRESULT (__stdcall *pfnDeferredFillIn)(tagEXCEPINFO *);
  int scode;
};

/* 1194 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 1195 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F __s0;
  $B950AFB169DC87688B328897744C612F u;
  unsigned __int64 QuadPart;
};

/* 1196 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/* 1197 */
struct tagSTATSTG
{
  wchar_t *pwcsName;
  unsigned int type;
  _ULARGE_INTEGER cbSize;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int grfMode;
  unsigned int grfLocksSupported;
  _GUID clsid;
  unsigned int grfStateBits;
  unsigned int reserved;
};

/* 1198 */
struct tagCABSTR
{
  unsigned int cElems;
  wchar_t **pElems;
};

/* 1199 */
struct tagCACLSID
{
  unsigned int cElems;
  _GUID *pElems;
};

/* 1200 */
struct tagCADBL
{
  unsigned int cElems;
  long double *pElems;
};

/* 1201 */
struct tagCAUB
{
  unsigned int cElems;
  char *pElems;
};

/* 1202 */
struct tagCACY
{
  unsigned int cElems;
  tagCY *pElems;
};

/* 1203 */
struct tagCAUL
{
  unsigned int cElems;
  unsigned int *pElems;
};

/* 1204 */
struct tagBSTRBLOB
{
  unsigned int cbSize;
  char *pData;
};

/* 1205 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 1206 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 1207 */
struct tagCAH
{
  unsigned int cElems;
  _LARGE_INTEGER *pElems;
};

/* 1208 */
struct __cppobj ITypeInfo : IUnknown
{
};

/* 1209 */
struct tagCAUI
{
  unsigned int cElems;
  unsigned __int16 *pElems;
};

/* 1210 */
struct tagCAFILETIME
{
  unsigned int cElems;
  _FILETIME *pElems;
};

/* 1211 */
struct tagDISPPARAMS
{
  tagVARIANT *rgvarg;
  int *rgdispidNamedArgs;
  unsigned int cArgs;
  unsigned int cNamedArgs;
};

/* 1212 */
struct tagCLIPDATA
{
  unsigned int cbSize;
  int ulClipFmt;
  char *pClipData;
};

/* 1213 */
struct tagBLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/* 1214 */
struct __cppobj ISequentialStream : IUnknown
{
};

/* 1215 */
struct __cppobj IStream : ISequentialStream
{
};

/* 1216 */
struct __cppobj IStorage : IUnknown
{
};

/* 1217 */
struct tagVersionedStream
{
  _GUID guidVersion;
  IStream *pStream;
};

/* 1218 */
struct tagCAC
{
  unsigned int cElems;
  char *pElems;
};

/* 1219 */
struct tagCAI
{
  unsigned int cElems;
  __int16 *pElems;
};

/* 1220 */
struct tagCAL
{
  unsigned int cElems;
  int *pElems;
};

/* 1221 */
struct tagCAUH
{
  unsigned int cElems;
  _ULARGE_INTEGER *pElems;
};

/* 1222 */
struct tagCAFLT
{
  unsigned int cElems;
  float *pElems;
};

/* 1223 */
struct tagCABOOL
{
  unsigned int cElems;
  __int16 *pElems;
};

/* 1224 */
struct tagCASCODE
{
  unsigned int cElems;
  int *pElems;
};

/* 1225 */
struct tagCADATE
{
  unsigned int cElems;
  long double *pElems;
};

/* 1226 */
struct tagCACLIPDATA
{
  unsigned int cElems;
  tagCLIPDATA *pElems;
};

/* 1227 */
struct tagCABSTRBLOB
{
  unsigned int cElems;
  tagBSTRBLOB *pElems;
};

/* 1228 */
struct tagCALPSTR
{
  unsigned int cElems;
  char **pElems;
};

/* 1229 */
struct tagCALPWSTR
{
  unsigned int cElems;
  wchar_t **pElems;
};

/* 1230 */
struct _BLOB
{
  unsigned int cbSize;
  char *pBlobData;
};

/* 1231 */
struct tagCAPROPVARIANT
{
  unsigned int cElems;
  tagPROPVARIANT *pElems;
};

/* 1232 */
struct tagPROPVARIANT
{
  $C094AB8C311FEBC032CF879023240E62 ___u0;
};

/* 1233 */
struct __unaligned __declspec(align(1)) $5DF3780F58367B9F2537DF425A8A812E
{
  unsigned __int16 vt;
  unsigned __int16 wReserved1;
  unsigned __int16 wReserved2;
  unsigned __int16 wReserved3;
  char cVal;
};

/* 1234 */
struct $6D336DA143C556260FF80C12817B08DB
{
  _BYTE gap0[8];
  int lVal;
};

/* 1235 */
struct $E39343820046B4372691A94731B75871
{
  _BYTE gap0[8];
  _LARGE_INTEGER hVal;
};

/* 1236 */
struct $33A205954F47CF66760BB8B8920E67CE
{
  _BYTE gap0[8];
  _ULARGE_INTEGER uhVal;
};

/* 1237 */
struct $B5157A43861F265B6C12881931E69B78
{
  _BYTE gap0[8];
  _FILETIME filetime;
};

/* 1238 */
struct $E272F37C2B69D96E73B8999B5775430A
{
  _BYTE gap0[8];
  _GUID *puuid;
};

/* 1239 */
struct $431053FF64512A584C18FDBAB40C1B30
{
  _BYTE gap0[8];
  tagCLIPDATA *pclipdata;
};

/* 1240 */
struct $81D27A276354A5C9BEE68A4BDA90FE36
{
  _BYTE gap0[8];
  tagBSTRBLOB bstrblobVal;
};

/* 1241 */
struct $369EC360E8084E592F87C57C7E8B245A
{
  _BYTE gap0[8];
  _BLOB blob;
};

/* 1242 */
struct $17BA733FE6B8BEB3CC80B954432F0727
{
  _BYTE gap0[8];
  char *pszVal;
};

/* 1243 */
struct $A123DDE5155BABE8656CED1ACF96B10E
{
  _BYTE gap0[8];
  wchar_t *pwszVal;
};

/* 1244 */
struct $9231E5B8278A245F0D873A5DACD39D5B
{
  _BYTE gap0[8];
  IStream *pStream;
};

/* 1245 */
struct $8D7F83DAAC2C9A3047B3100F692DA8C2
{
  _BYTE gap0[8];
  IStorage *pStorage;
};

/* 1246 */
struct $4B9E15C840C03403F08515F38D3F76C3
{
  _BYTE gap0[8];
  tagVersionedStream *pVersionedStream;
};

/* 1247 */
struct $6B455352F8AE9D6E0EF9B71AFDEE842B
{
  _BYTE gap0[8];
  tagCAC cac;
};

/* 1248 */
struct $D242F636B6763A559BBC45883EDF05EE
{
  _BYTE gap0[8];
  tagCAUB caub;
};

/* 1249 */
struct $64AD98C5BD81DC1065257F8DBF5F92A2
{
  _BYTE gap0[8];
  tagCAI cai;
};

/* 1250 */
struct $F1A0C32A7FECD4832682BE0C5BDDA665
{
  _BYTE gap0[8];
  tagCAUI caui;
};

/* 1251 */
struct $6F6D9697BA697BB8DEE14B31A1B9BFEC
{
  _BYTE gap0[8];
  tagCAL cal;
};

/* 1252 */
struct $68D6F8A1DF6DAE29872C7204BA9B45C4
{
  _BYTE gap0[8];
  tagCAUL caul;
};

/* 1253 */
struct $6B1720A47C4A59AB884232B6D10EFF20
{
  _BYTE gap0[8];
  tagCAH cah;
};

/* 1254 */
struct $401F9602B11F1E552AE6A211129197EA
{
  _BYTE gap0[8];
  tagCAUH cauh;
};

/* 1255 */
struct $00927CC8E0CFDF70F2A55C9294F9AA07
{
  _BYTE gap0[8];
  tagCAFLT caflt;
};

/* 1256 */
struct $B157D21746FB0DEEC070314BE6284899
{
  _BYTE gap0[8];
  tagCADBL cadbl;
};

/* 1257 */
struct $1E6149A6E78A32E1F8230831D3D19C12
{
  _BYTE gap0[8];
  tagCABOOL cabool;
};

/* 1258 */
struct $957700FC3545FE216E210D628CF16513
{
  _BYTE gap0[8];
  tagCASCODE cascode;
};

/* 1259 */
struct $FB7CA9D7A3040DEB31A0808D86003E81
{
  _BYTE gap0[8];
  tagCACY cacy;
};

/* 1260 */
struct $637137B008594EF67E3FAA91B82EE273
{
  _BYTE gap0[8];
  tagCADATE cadate;
};

/* 1261 */
struct $F257C6F3D6E09759201ACED887C7DA07
{
  _BYTE gap0[8];
  tagCAFILETIME cafiletime;
};

/* 1262 */
struct $4D2B45632B9E1F4805622945F9DC3D88
{
  _BYTE gap0[8];
  tagCACLSID cauuid;
};

/* 1263 */
struct $9C9A818030898FF66B2255D09E7BB583
{
  _BYTE gap0[8];
  tagCACLIPDATA caclipdata;
};

/* 1264 */
struct $3A6AFA62C1DD5ED49D808E6C8A1303C9
{
  _BYTE gap0[8];
  tagCABSTR cabstr;
};

/* 1265 */
struct $3CBEA2DA52550945BE28B3002674EE70
{
  _BYTE gap0[8];
  tagCABSTRBLOB cabstrblob;
};

/* 1266 */
struct $9051F45DED9EA646A4DFFC8DC8EB7D64
{
  _BYTE gap0[8];
  tagCALPSTR calpstr;
};

/* 1267 */
struct $1D3752518DBBD2685E3E7D068BBD1993
{
  _BYTE gap0[8];
  tagCALPWSTR calpwstr;
};

/* 1268 */
struct $FBBFA1BA74BB0F9078E62D088725BF43
{
  _BYTE gap0[8];
  tagCAPROPVARIANT capropvar;
};

/* 1269 */
struct $8F55D5A517B9D88C69A1381A534E484D
{
  _BYTE gap0[8];
  tagPROPVARIANT *pvarVal;
};

/* 1270 */
union $C094AB8C311FEBC032CF879023240E62
{
  $5DF3780F58367B9F2537DF425A8A812E __s0;
  tagDEC decVal;
  $F28A51B4B40B0D33C72915D739D42B4B __s2;
  $31126B8528A05AF3606C6D495FD178E8 __s3;
  $48802A31D3D0701BC13CEF9CEA041E7B __s4;
  $6D336DA143C556260FF80C12817B08DB __s5;
  $B644145F46FF1F932B106BFA6CC3F6D9 __s6;
  $5CA90CF57237397281FB12BFD52C1905 __s7;
  $E7F48E2F4EAA3149E57D87E5D1B2C6B8 __s8;
  $E39343820046B4372691A94731B75871 __s9;
  $33A205954F47CF66760BB8B8920E67CE __s10;
  $50230A970D9734D4E9774CFC619DF0F6 __s11;
  $4C0EC2258454B893CE739DAE89D8DB7B __s12;
  $6DB36323059316E675433BB10D285009 __s13;
  $8E3C8731874D1B3BC66617C4DD3163A6 __s14;
  $BF7F8F7D427EDAD7B65B36DC1C6C911E __s15;
  $E94952165EEA9EEA990FEB33603E1B19 __s16;
  $B5157A43861F265B6C12881931E69B78 __s17;
  $E272F37C2B69D96E73B8999B5775430A __s18;
  $431053FF64512A584C18FDBAB40C1B30 __s19;
  $7B1C2AA558A72DB3909F7F0B6C8C78B2 __s20;
  $81D27A276354A5C9BEE68A4BDA90FE36 __s21;
  $369EC360E8084E592F87C57C7E8B245A __s22;
  $17BA733FE6B8BEB3CC80B954432F0727 __s23;
  $A123DDE5155BABE8656CED1ACF96B10E __s24;
  $E3A9A89D191EFF7E39A4B1D91F931BBC __s25;
  $9AA0C6297F298869BA267759B9F809EC __s26;
  $9231E5B8278A245F0D873A5DACD39D5B __s27;
  $8D7F83DAAC2C9A3047B3100F692DA8C2 __s28;
  $4B9E15C840C03403F08515F38D3F76C3 __s29;
  $939A5E4F4154CA6B2F5C0D44129D1489 __s30;
  $6B455352F8AE9D6E0EF9B71AFDEE842B __s31;
  $D242F636B6763A559BBC45883EDF05EE __s32;
  $64AD98C5BD81DC1065257F8DBF5F92A2 __s33;
  $F1A0C32A7FECD4832682BE0C5BDDA665 __s34;
  $6F6D9697BA697BB8DEE14B31A1B9BFEC __s35;
  $68D6F8A1DF6DAE29872C7204BA9B45C4 __s36;
  $6B1720A47C4A59AB884232B6D10EFF20 __s37;
  $401F9602B11F1E552AE6A211129197EA __s38;
  $00927CC8E0CFDF70F2A55C9294F9AA07 __s39;
  $B157D21746FB0DEEC070314BE6284899 __s40;
  $1E6149A6E78A32E1F8230831D3D19C12 __s41;
  $957700FC3545FE216E210D628CF16513 __s42;
  $FB7CA9D7A3040DEB31A0808D86003E81 __s43;
  $637137B008594EF67E3FAA91B82EE273 __s44;
  $F257C6F3D6E09759201ACED887C7DA07 __s45;
  $4D2B45632B9E1F4805622945F9DC3D88 __s46;
  $9C9A818030898FF66B2255D09E7BB583 __s47;
  $3A6AFA62C1DD5ED49D808E6C8A1303C9 __s48;
  $3CBEA2DA52550945BE28B3002674EE70 __s49;
  $9051F45DED9EA646A4DFFC8DC8EB7D64 __s50;
  $1D3752518DBBD2685E3E7D068BBD1993 __s51;
  $FBBFA1BA74BB0F9078E62D088725BF43 __s52;
  $E1D71D20C3D01115E20D79FAE9629CE8 __s53;
  $166B1F81F6EA96F97683A65F38FB1A59 __s54;
  $76732A64405C0E287FCB302687644550 __s55;
  $5669F5A4AD19EF2CB42A5602080CB0A6 __s56;
  $E5FC128E66C26C95254032BA69D36E74 __s57;
  $886F8AE9D7C8B1B861B6CA58D67B682A __s58;
  $CDA73A427DD2A30CDA26CA3394C33CF0 __s59;
  $2516E53E690D8CC5659AAB7EDC49E664 __s60;
  $BF8CC88CDF129BD6E4FA4ABA13F521AD __s61;
  $2CABE618CF1C2625A4479554E4967E0A __s62;
  $AAA92DA1D6E1B0E8462F69216B62027C __s63;
  $D09366ED86BEA8C77FEB007675F7A2EB __s64;
  $F7167AE7A8ABA03C094C204FB1564A28 __s65;
  $0E775A6B7C96A7C25854EBC88D103E11 __s66;
  $6857AE69DB7C952EEFD665431A7B503A __s67;
  $BE56ADCB97A5F80C4E840DC3FCEE04D4 __s68;
  $A9E5A92A0E76DA9A3125C667803D7FA9 __s69;
  $7F3C9196F4617CAEED4E20A26B64441F __s70;
  $B5E3B0526E83BA38A35257CD199F48AA __s71;
  $8F55D5A517B9D88C69A1381A534E484D __s72;
};

/* 1271 */
struct tagTYPEATTR
{
  _GUID guid;
  unsigned int lcid;
  unsigned int dwReserved;
  int memidConstructor;
  int memidDestructor;
  wchar_t *lpstrSchema;
  unsigned int cbSizeInstance;
  tagTYPEKIND typekind;
  unsigned __int16 cFuncs;
  unsigned __int16 cVars;
  unsigned __int16 cImplTypes;
  unsigned __int16 cbSizeVft;
  unsigned __int16 cbAlignment;
  unsigned __int16 wTypeFlags;
  unsigned __int16 wMajorVerNum;
  unsigned __int16 wMinorVerNum;
  tagTYPEDESC tdescAlias;
  tagIDLDESC idldescType;
};

/* 1272 */
struct __cppobj IEnumSTATSTG : IUnknown
{
};

/* 1273 */
struct __cppobj ITypeLib : IUnknown
{
};

/* 1274 */
struct CNSSkillList::DBSkillListBuild::__l2::_JobSkillTable
{
  char btRaceRegion;
  char btJob;
  unsigned __int16 wSkillId[120];
};

/* 1275 */
struct __cppobj CSingleton<CNSSkillParams>
{
};

/* 1276 */
struct __cppobj CNSSkillParams : CSingleton<CNSSkillParams>
{
  CNSSkillParamsVtbl *vfptr;
  std::map<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> > > m_mapSkill;
};

/* 1277 */
struct CNSSkillParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSSkillParams *this, unsigned int);
  int (__thiscall *Init)(CNSSkillParams *this);
};

/* 1278 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSSkill *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1279 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSSkill *> > >
{
  std::less<unsigned long> comp;
};

/* 1280 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node>
{
};

/* 1281 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node>
{
};

/* 1282 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> > : std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node> _Alnod;
};

/* 1283 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *>
{
};

/* 1284 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *>
{
};

/* 1285 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *> _Alptr;
};

/* 1286 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSSkill *> >
{
};

/* 1287 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSSkill *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSSkill *> >
{
};

/* 1288 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSSkill *> > _Alval;
};

/* 1289 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSSkill *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1290 */
struct std::pair<unsigned long const ,CNSSkill *>
{
  const unsigned int first;
  CNSSkill *second;
};

/* 1291 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1292 */
struct __cppobj std::map<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >
{
};

/* 1293 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSSkill *>,int,std::pair<unsigned long const ,CNSSkill *> const *,std::pair<unsigned long const ,CNSSkill *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1294 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSSkill *>,int,std::pair<unsigned long const ,CNSSkill *> const *,std::pair<unsigned long const ,CNSSkill *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSSkill *>,int,std::pair<unsigned long const ,CNSSkill *> const *,std::pair<unsigned long const ,CNSSkill *> const &,std::_Iterator_base_aux>
{
};

/* 1295 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSSkill *>,int,std::pair<unsigned long const ,CNSSkill *> const *,std::pair<unsigned long const ,CNSSkill *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *_Ptr;
};

/* 1296 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::const_iterator
{
};

/* 1297 */
struct CNSSkillParams::ConvertSkillTypeString::__l2::_SkillTypeTable
{
  char btType;
  char szName[80];
};

/* 1298 */
struct CNSSkillParams::ConvertSkillOptionString::__l2::_SkillOptionTable
{
  char btType;
  char szName[80];
};

/* 1299 */
struct CNSSkillParams::ConvertRangeTypeString::__l2::_RangeTypeTable
{
  char btType;
  char szName[80];
};

/* 1300 */
struct $5774707979447386C580FAF4CA8AEC32
{
  unsigned int dwCount;
  unsigned int dwTime;
  unsigned int dwMaxTime;
};

/* 1301 */
struct CMsgCounter
{
  $5774707979447386C580FAF4CA8AEC32 m_Msg[65535];
  unsigned int m_dwCount;
  unsigned int m_dwTime;
  char m_szFilename[261];
  CNSConsole m_Console;
};

/* 1302 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *_Right;
  std::pair<int const ,CNSPcDamageCounter *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1303 */
struct std::pair<int const ,CNSPcDamageCounter *>
{
  const int first;
  CNSPcDamageCounter *second;
};

/* 1304 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *>
{
};

/* 1305 */
struct std::pair<unsigned short const ,CNSPcParty *>
{
  const unsigned __int16 first;
  CNSPcParty *second;
};

/* 1306 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSPcParty *> >
{
};

/* 1307 */
struct __cppobj std::_Allocator_base<std::pair<int const ,CNSPcDamageCounter *> >
{
};

/* 1308 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *_Right;
  std::pair<int const ,CNSGuild *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1309 */
struct std::pair<int const ,CNSGuild *>
{
  const int first;
  CNSGuild *second;
};

/* 1310 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *>
{
};

/* 1311 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSPcDamageCounter *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1312 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSPcDamageCounter *> > >
{
  std::less<int> comp;
};

/* 1313 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node>
{
};

/* 1314 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node>
{
};

/* 1315 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> > : std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node> _Alnod;
};

/* 1316 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *>
{
};

/* 1317 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *> _Alptr;
};

/* 1318 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter *> > : std::_Allocator_base<std::pair<int const ,CNSPcDamageCounter *> >
{
};

/* 1319 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >
{
  std::allocator<std::pair<int const ,CNSPcDamageCounter *> > _Alval;
};

/* 1320 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSPcParty *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1321 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node>
{
};

/* 1322 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node>
{
};

/* 1323 */
struct __cppobj std::_Allocator_base<std::pair<int const ,CNSGuild *> >
{
};

/* 1324 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *>
{
};

/* 1325 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSGuild *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1326 */
struct __cppobj std::allocator<std::pair<int const ,CNSGuild *> > : std::_Allocator_base<std::pair<int const ,CNSGuild *> >
{
};

/* 1327 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSGuild *> > >
{
  std::less<int> comp;
};

/* 1328 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node>
{
};

/* 1329 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> > : std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node> _Alnod;
};

/* 1330 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node>
{
};

/* 1331 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *>
{
};

/* 1332 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter *> >::rebind<std::_Aux_cont>
{
};

/* 1333 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter *> >::rebind<std::pair<int const ,CNSPcDamageCounter *> >
{
};

/* 1334 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node>
{
};

/* 1335 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *>
{
};

/* 1336 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter *> >::rebind<int>
{
};

/* 1337 */
struct __cppobj std::allocator<std::pair<int const ,CNSPcDamageCounter *> >::rebind<char>
{
};

/* 1338 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParty *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSPcParty *> >
{
};

/* 1339 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParty *> >::rebind<std::_Aux_cont>
{
};

/* 1340 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParty *> >::rebind<std::pair<unsigned short const ,CNSPcParty *> >
{
};

/* 1341 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParty *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node>
{
};

/* 1342 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParty *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *>
{
};

/* 1343 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParty *> >::rebind<unsigned short>
{
};

/* 1344 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParty *> >::rebind<char>
{
};

/* 1345 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *>
{
};

/* 1346 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *> _Alptr;
};

/* 1347 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >
{
  std::allocator<std::pair<int const ,CNSGuild *> > _Alval;
};

/* 1348 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSPcParty *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1349 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSPcParty *> > >
{
  std::less<unsigned short> comp;
};

/* 1350 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> > : std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node> _Alnod;
};

/* 1351 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *> _Alptr;
};

/* 1352 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSPcParty *> > _Alval;
};

/* 1353 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1354 */
struct __cppobj std::map<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >
{
};

/* 1355 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSPcParty *>,int,std::pair<unsigned short const ,CNSPcParty *> const *,std::pair<unsigned short const ,CNSPcParty *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1356 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSPcParty *>,int,std::pair<unsigned short const ,CNSPcParty *> const *,std::pair<unsigned short const ,CNSPcParty *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSPcParty *>,int,std::pair<unsigned short const ,CNSPcParty *> const *,std::pair<unsigned short const ,CNSPcParty *> const &,std::_Iterator_base_aux>
{
};

/* 1357 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSPcParty *>,int,std::pair<unsigned short const ,CNSPcParty *> const *,std::pair<unsigned short const ,CNSPcParty *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::_Node *_Ptr;
};

/* 1358 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::const_iterator
{
};

/* 1359 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> > : std::_Tree_val<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1360 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSPcDamageCounter *>,int,std::pair<int const ,CNSPcDamageCounter *> const *,std::pair<int const ,CNSPcDamageCounter *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1361 */
struct __cppobj std::_Bidit<std::pair<int const ,CNSPcDamageCounter *>,int,std::pair<int const ,CNSPcDamageCounter *> const *,std::pair<int const ,CNSPcDamageCounter *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSPcDamageCounter *>,int,std::pair<int const ,CNSPcDamageCounter *> const *,std::pair<int const ,CNSPcDamageCounter *> const &,std::_Iterator_base_aux>
{
};

/* 1362 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,CNSPcDamageCounter *>,int,std::pair<int const ,CNSPcDamageCounter *> const *,std::pair<int const ,CNSPcDamageCounter *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::_Node *_Ptr;
};

/* 1363 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::const_iterator
{
};

/* 1364 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >::iterator first;
  bool second;
};

/* 1365 */
struct __cppobj std::allocator<std::pair<int const ,CNSGuild *> >::rebind<std::_Aux_cont>
{
};

/* 1366 */
struct __cppobj std::allocator<std::pair<int const ,CNSGuild *> >::rebind<std::pair<int const ,CNSGuild *> >
{
};

/* 1367 */
struct __cppobj std::allocator<std::pair<int const ,CNSGuild *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node>
{
};

/* 1368 */
struct __cppobj std::allocator<std::pair<int const ,CNSGuild *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *>
{
};

/* 1369 */
struct __cppobj std::allocator<std::pair<int const ,CNSGuild *> >::rebind<int>
{
};

/* 1370 */
struct __cppobj std::allocator<std::pair<int const ,CNSGuild *> >::rebind<char>
{
};

/* 1371 */
struct __cppobj std::map<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> > > : std::_Tree<std::_Tmap_traits<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> >,0> >
{
};

/* 1372 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> > : std::_Tree_val<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1373 */
struct __cppobj std::map<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> > > : std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >
{
};

/* 1374 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSGuild *>,int,std::pair<int const ,CNSGuild *> const *,std::pair<int const ,CNSGuild *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1375 */
struct __cppobj std::_Bidit<std::pair<int const ,CNSGuild *>,int,std::pair<int const ,CNSGuild *> const *,std::pair<int const ,CNSGuild *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSGuild *>,int,std::pair<int const ,CNSGuild *> const *,std::pair<int const ,CNSGuild *> const &,std::_Iterator_base_aux>
{
};

/* 1376 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,CNSGuild *>,int,std::pair<int const ,CNSGuild *> const *,std::pair<int const ,CNSGuild *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::_Node *_Ptr;
};

/* 1377 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::const_iterator
{
};

/* 1378 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::iterator first;
  bool second;
};

/* 1379 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSSkill *> >::rebind<std::_Aux_cont>
{
};

/* 1380 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSSkill *> >::rebind<std::pair<unsigned long const ,CNSSkill *> >
{
};

/* 1381 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSSkill *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node>
{
};

/* 1382 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSSkill *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSSkill *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSSkill *> >,0> >::_Node *>
{
};

/* 1383 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSSkill *> >::rebind<unsigned long>
{
};

/* 1384 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSSkill *> >::rebind<char>
{
};

/* 1385 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::iterator first;
  bool second;
};

/* 1386 */
struct std::pair<std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::iterator>
{
  std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> >,0> >::iterator second;
};

/* 1387 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::iterator first;
  bool second;
};

/* 1388 */
struct std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::iterator>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::iterator first;
  std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> >,0> >::iterator second;
};

/* 1389 */
struct __cppobj CSingleton<CNSPcManager>
{
};

/* 1390 */
struct CNSPcChatChannelList
{
  char m_szChatChannelArray[1000][25];
};

/* 1391 */
struct __cppobj CNSPcManager : SteamEngine::Win32::System::CThread, CSingleton<CNSPcManager>
{
  char m_szLog[40960];
  CNSPcChatChannelList m_ChatChannel;
  unsigned int m_dwLagTest;
  int m_bThreadLoop;
  std::map<unsigned long,CNSPc *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPc *> > > m_mapPc;
  std::map<unsigned short,CNSPcParty *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParty *> > > m_mapParty;
  std::map<int,CNSGuild *,std::less<int>,std::allocator<std::pair<int const ,CNSGuild *> > > m_mapGuild;
  std::map<int,CNSPcDamageCounter *,std::less<int>,std::allocator<std::pair<int const ,CNSPcDamageCounter *> > > m_mapDamageCounter;
  CNSCriticalSection m_csPc;
  CNSCriticalSection m_csParty;
  CNSCriticalSection m_csGuild;
  CNSCriticalSection m_csDamageCounter;
  int m_nUserMax;
  int m_nServerPort;
  unsigned __int16 m_wNsChargeHour;
  int m_bNsChargeTime;
  unsigned __int16 m_wWarpRaceRegionDay;
  int m_bWarpRaceRegion;
  unsigned int m_dwTickCounter;
};

/* 1392 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_21
{
  const void *pVFTable;
  void *spare;
  char name[21];
};

/* 1393 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_15
{
  const void *pVFTable;
  void *spare;
  char name[15];
};

/* 1394 */
struct __cppobj SteamEngine::Win32::Net::CSession::OVERLAPPED2_SEND : SteamEngine::Win32::Net::CSession::OVERLAPPED2
{
  char pSendBuff[8192];
};

/* 1395 */
struct __cppobj CSingleton<CNSEventManager>
{
};

/* 1396 */
struct __cppobj CNSEventManager : CSingleton<CNSEventManager>
{
  CNSEventManagerVtbl *vfptr;
  int m_eventTypeArray[8];
};

/* 1397 */
struct CNSEventManagerVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSEventManager *this, unsigned int);
};

/* 1398 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 1399 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/* 1400 */
struct _TOKEN_PRIVILEGES
{
  unsigned int PrivilegeCount;
  _LUID_AND_ATTRIBUTES Privileges[1];
};

/* 1401 */
struct __cppobj CSingleton<CNSAuction>
{
};

/* 1402 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSItem *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1403 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,CNSItem *> > >
{
  std::less<int> comp;
};

/* 1404 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node>
{
};

/* 1405 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node>
{
};

/* 1406 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> > : std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node> _Alnod;
};

/* 1407 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *>
{
};

/* 1408 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *>
{
};

/* 1409 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *> _Alptr;
};

/* 1410 */
struct __cppobj std::_Allocator_base<std::pair<int const ,CNSItem *> >
{
};

/* 1411 */
struct __cppobj std::allocator<std::pair<int const ,CNSItem *> > : std::_Allocator_base<std::pair<int const ,CNSItem *> >
{
};

/* 1412 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >
{
  std::allocator<std::pair<int const ,CNSItem *> > _Alval;
};

/* 1413 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *_Right;
  std::pair<int const ,CNSItem *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1414 */
struct std::pair<int const ,CNSItem *>
{
  const int first;
  CNSItem *second;
};

/* 1415 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> > : std::_Tree_val<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1416 */
struct __cppobj std::map<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> > > : std::_Tree<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >
{
};

/* 1417 */
struct __cppobj CNSAuction : CSingleton<CNSAuction>
{
  SteamEngine::Win32::System::CCriticalSection m_csMap;
  std::map<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> > > m_mapItem;
};

/* 1418 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSAdminParams::_Admin *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1419 */
struct CNSAdminParams::_Admin
{
  char szUserId[52];
  char btLevel;
};

/* 1420 */
struct std::pair<unsigned long const ,CNSAdminParams::_Admin *>
{
  const unsigned int first;
  CNSAdminParams::_Admin *second;
};

/* 1421 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *>
{
};

/* 1422 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >
{
};

/* 1423 */
struct std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node
{
  std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *_Next;
  std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *_Prev;
  SteamEngine::Win32::Net::CSession *_Myval;
};

/* 1424 */
struct __cppobj std::_Allocator_base<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *>
{
};

/* 1425 */
struct CNSDbLogManager::_ItemLog
{
  char cMode;
  char szAction[5];
  int nItemSeq;
  int wItemId;
  char btCount;
  int nAliasSeq;
  char btRegion;
  NSPOINT2 cell;
  unsigned int dwOptionValue;
};

/* 1426 */
struct __cppobj std::_Allocator_base<CNSDbLogManager::_ItemLog * *>
{
};

/* 1427 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node>
{
};

/* 1428 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSPcParams::_Path *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1429 */
struct CNSPcParams::_Path
{
  unsigned __int16 wId;
  unsigned int dwCount;
  NSPOINT2 cell[20];
};

/* 1430 */
struct std::pair<unsigned short const ,CNSPcParams::_Path *>
{
  const unsigned __int16 first;
  CNSPcParams::_Path *second;
};

/* 1431 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *>
{
};

/* 1432 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *>
{
};

/* 1433 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1434 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> > >
{
  std::less<unsigned long> comp;
};

/* 1435 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >
{
};

/* 1436 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node>
{
};

/* 1437 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> > : std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node> _Alnod;
};

/* 1438 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *> _Alptr;
};

/* 1439 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSPcParams::_Path *> >
{
};

/* 1440 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> > _Alval;
};

/* 1441 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >::rebind<std::_Aux_cont>
{
};

/* 1442 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >::rebind<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >
{
};

/* 1443 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node>
{
};

/* 1444 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *>
{
};

/* 1445 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >::rebind<unsigned long>
{
};

/* 1446 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >::rebind<char>
{
};

/* 1447 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,unsigned long> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1448 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,unsigned long> >
{
};

/* 1449 */
struct __cppobj std::allocator<std::pair<unsigned short const ,unsigned long> > : std::_Allocator_base<std::pair<unsigned short const ,unsigned long> >
{
};

/* 1450 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 1451 */
struct std::pair<unsigned short const ,unsigned long>
{
  const unsigned __int16 first;
  unsigned int second;
};

/* 1452 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *>
{
};

/* 1453 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *>
{
};

/* 1454 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1455 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> > >
{
  std::less<unsigned short> comp;
};

/* 1456 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node>
{
};

/* 1457 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node>
{
};

/* 1458 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> > : std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node> _Alnod;
};

/* 1459 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *> _Alptr;
};

/* 1460 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSPcParams::_Path *> >
{
};

/* 1461 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> > _Alval;
};

/* 1462 */
struct __cppobj std::_Allocator_base<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node>
{
};

/* 1463 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<CNSDbLogManager::_ItemLog *> > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1464 */
struct __cppobj std::_Allocator_base<CNSDbLogManager::_ItemLog *>
{
};

/* 1465 */
struct __cppobj std::allocator<CNSDbLogManager::_ItemLog *> : std::_Allocator_base<CNSDbLogManager::_ItemLog *>
{
};

/* 1466 */
struct __cppobj std::allocator<CNSDbLogManager::_ItemLog * *> : std::_Allocator_base<CNSDbLogManager::_ItemLog * *>
{
};

/* 1467 */
struct __cppobj std::_Allocator_base<SteamEngine::Win32::Net::CSession *>
{
};

/* 1468 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,unsigned long> > >
{
  std::less<unsigned short> comp;
};

/* 1469 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node>
{
};

/* 1470 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node>
{
};

/* 1471 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> > : std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node> _Alnod;
};

/* 1472 */
struct CNSPcParams::_Status
{
  unsigned __int16 btStr;
  unsigned __int16 btCon;
  unsigned __int16 btDex;
  unsigned __int16 btInt;
};

/* 1473 */
struct std::pair<unsigned long const ,CNSPcParams::_Status *>
{
  const unsigned int first;
  CNSPcParams::_Status *second;
};

/* 1474 */
struct __cppobj std::_Allocator_base<std::pair<unsigned long const ,CNSPcParams::_Status *> >
{
};

/* 1475 */
struct __cppobj std::allocator<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node> : std::_Allocator_base<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node>
{
};

/* 1476 */
struct __cppobj __declspec(align(4)) std::_Deque_map<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *> > : std::_Container_base_aux_alloc_real<std::allocator<CNSDbLogManager::_ItemLog *> >
{
  std::allocator<CNSDbLogManager::_ItemLog * *> _Almap;
};

/* 1477 */
struct __cppobj __declspec(align(4)) std::_Deque_val<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *> > : std::_Deque_map<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *> >
{
  std::allocator<CNSDbLogManager::_ItemLog *> _Alval;
};

/* 1478 */
struct __cppobj std::allocator<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *> : std::_Allocator_base<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *>
{
};

/* 1479 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *>
{
};

/* 1480 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *> _Alptr;
};

/* 1481 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1482 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> > >
{
  std::less<unsigned long> comp;
};

/* 1483 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node>
{
};

/* 1484 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node>
{
};

/* 1485 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> > : std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node> _Alnod;
};

/* 1486 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *>
{
};

/* 1487 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *>
{
};

/* 1488 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *> _Alptr;
};

/* 1489 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> > : std::_Allocator_base<std::pair<unsigned long const ,CNSPcParams::_Status *> >
{
};

/* 1490 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >
{
  std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> > _Alval;
};

/* 1491 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<SteamEngine::Win32::Net::CSession *> > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1492 */
struct __cppobj __declspec(align(4)) std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > : std::_Container_base_aux_alloc_real<std::allocator<SteamEngine::Win32::Net::CSession *> >
{
  std::allocator<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node> _Alnod;
};

/* 1493 */
struct __cppobj __declspec(align(4)) std::_List_ptr<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > : std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >
{
  std::allocator<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *> _Alptr;
};

/* 1494 */
struct __cppobj std::allocator<SteamEngine::Win32::Net::CSession *> : std::_Allocator_base<SteamEngine::Win32::Net::CSession *>
{
};

/* 1495 */
struct __cppobj __declspec(align(4)) std::_List_val<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > : std::_List_ptr<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >
{
  std::allocator<SteamEngine::Win32::Net::CSession *> _Alval;
};

/* 1496 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSItem *>,int,std::pair<int const ,CNSItem *> const *,std::pair<int const ,CNSItem *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1497 */
struct __cppobj std::_Bidit<std::pair<int const ,CNSItem *>,int,std::pair<int const ,CNSItem *> const *,std::pair<int const ,CNSItem *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,CNSItem *>,int,std::pair<int const ,CNSItem *> const *,std::pair<int const ,CNSItem *> const &,std::_Iterator_base_aux>
{
};

/* 1498 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,CNSItem *>,int,std::pair<int const ,CNSItem *> const *,std::pair<int const ,CNSItem *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *_Ptr;
};

/* 1499 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::const_iterator
{
};

/* 1500 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::iterator first;
  bool second;
};

/* 1501 */
struct __cppobj std::allocator<std::pair<unsigned short const ,unsigned long> >::rebind<std::_Aux_cont>
{
};

/* 1502 */
struct __cppobj std::allocator<std::pair<unsigned short const ,unsigned long> >::rebind<std::pair<unsigned short const ,unsigned long> >
{
};

/* 1503 */
struct __cppobj std::allocator<std::pair<unsigned short const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node>
{
};

/* 1504 */
struct __cppobj std::allocator<std::pair<unsigned short const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *>
{
};

/* 1505 */
struct __cppobj std::allocator<std::pair<unsigned short const ,unsigned long> >::rebind<unsigned short>
{
};

/* 1506 */
struct __cppobj std::allocator<std::pair<unsigned short const ,unsigned long> >::rebind<char>
{
};

/* 1507 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >
{
  std::allocator<std::pair<unsigned short const ,unsigned long> > _Alval;
};

/* 1508 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *_Right;
  std::pair<unsigned long const ,CNSPcParams::_Status *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1509 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1510 */
struct __cppobj std::map<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> > > : std::_Tree<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >
{
};

/* 1511 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,unsigned long>,int,std::pair<unsigned short const ,unsigned long> const *,std::pair<unsigned short const ,unsigned long> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1512 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,unsigned long>,int,std::pair<unsigned short const ,unsigned long> const *,std::pair<unsigned short const ,unsigned long> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,unsigned long>,int,std::pair<unsigned short const ,unsigned long> const *,std::pair<unsigned short const ,unsigned long> const &,std::_Iterator_base_aux>
{
};

/* 1513 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,unsigned long>,int,std::pair<unsigned short const ,unsigned long> const *,std::pair<unsigned short const ,unsigned long> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::_Node *_Ptr;
};

/* 1514 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::const_iterator
{
};

/* 1515 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1516 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSAdminParams::_Admin *>,int,std::pair<unsigned long const ,CNSAdminParams::_Admin *> const *,std::pair<unsigned long const ,CNSAdminParams::_Admin *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1517 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSAdminParams::_Admin *>,int,std::pair<unsigned long const ,CNSAdminParams::_Admin *> const *,std::pair<unsigned long const ,CNSAdminParams::_Admin *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSAdminParams::_Admin *>,int,std::pair<unsigned long const ,CNSAdminParams::_Admin *> const *,std::pair<unsigned long const ,CNSAdminParams::_Admin *> const &,std::_Iterator_base_aux>
{
};

/* 1518 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSAdminParams::_Admin *>,int,std::pair<unsigned long const ,CNSAdminParams::_Admin *> const *,std::pair<unsigned long const ,CNSAdminParams::_Admin *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::_Node *_Ptr;
};

/* 1519 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::const_iterator
{
};

/* 1520 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >::iterator first;
  bool second;
};

/* 1521 */
struct __cppobj std::map<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> >,0> >
{
};

/* 1522 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1523 */
struct __cppobj std::map<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >
{
};

/* 1524 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSPcParams::_Path *>,int,std::pair<unsigned short const ,CNSPcParams::_Path *> const *,std::pair<unsigned short const ,CNSPcParams::_Path *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1525 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSPcParams::_Path *>,int,std::pair<unsigned short const ,CNSPcParams::_Path *> const *,std::pair<unsigned short const ,CNSPcParams::_Path *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSPcParams::_Path *>,int,std::pair<unsigned short const ,CNSPcParams::_Path *> const *,std::pair<unsigned short const ,CNSPcParams::_Path *> const &,std::_Iterator_base_aux>
{
};

/* 1526 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSPcParams::_Path *>,int,std::pair<unsigned short const ,CNSPcParams::_Path *> const *,std::pair<unsigned short const ,CNSPcParams::_Path *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *_Ptr;
};

/* 1527 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::const_iterator
{
};

/* 1528 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >::rebind<std::_Aux_cont>
{
};

/* 1529 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >::rebind<std::pair<unsigned short const ,CNSPcParams::_Path *> >
{
};

/* 1530 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node>
{
};

/* 1531 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::_Node *>
{
};

/* 1532 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >::rebind<unsigned short>
{
};

/* 1533 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >::rebind<char>
{
};

/* 1534 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> >,0> >::iterator first;
  bool second;
};

/* 1535 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> >,0> >::iterator first;
  bool second;
};

/* 1536 */
struct __cppobj std::allocator<SteamEngine::Win32::Net::CSession *>::rebind<std::_Aux_cont>
{
};

/* 1537 */
struct __cppobj std::allocator<SteamEngine::Win32::Net::CSession *>::rebind<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node>
{
};

/* 1538 */
struct __cppobj std::allocator<SteamEngine::Win32::Net::CSession *>::rebind<std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *>
{
};

/* 1539 */
struct __cppobj std::allocator<SteamEngine::Win32::Net::CSession *>::rebind<SteamEngine::Win32::Net::CSession *>
{
};

/* 1540 */
struct __cppobj std::allocator<std::pair<int const ,CNSItem *> >::rebind<std::_Aux_cont>
{
};

/* 1541 */
struct __cppobj std::allocator<std::pair<int const ,CNSItem *> >::rebind<std::pair<int const ,CNSItem *> >
{
};

/* 1542 */
struct __cppobj std::allocator<std::pair<int const ,CNSItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node>
{
};

/* 1543 */
struct __cppobj std::allocator<std::pair<int const ,CNSItem *> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,CNSItem *,std::less<int>,std::allocator<std::pair<int const ,CNSItem *> >,0> >::_Node *>
{
};

/* 1544 */
struct __cppobj std::allocator<std::pair<int const ,CNSItem *> >::rebind<int>
{
};

/* 1545 */
struct __cppobj std::allocator<std::pair<int const ,CNSItem *> >::rebind<char>
{
};

/* 1546 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >::rebind<std::_Aux_cont>
{
};

/* 1547 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >::rebind<std::pair<unsigned long const ,CNSPcParams::_Status *> >
{
};

/* 1548 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node>
{
};

/* 1549 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *>
{
};

/* 1550 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >::rebind<unsigned long>
{
};

/* 1551 */
struct __cppobj std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >::rebind<char>
{
};

/* 1552 */
struct __cppobj std::allocator<CNSDbLogManager::_ItemLog *>::rebind<std::_Aux_cont>
{
};

/* 1553 */
struct __cppobj std::allocator<CNSDbLogManager::_ItemLog *>::rebind<CNSDbLogManager::_ItemLog *>
{
};

/* 1554 */
struct __cppobj std::allocator<CNSDbLogManager::_ItemLog *>::rebind<CNSDbLogManager::_ItemLog * *>
{
};

/* 1555 */
struct __cppobj std::deque<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *> > : std::_Deque_val<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *> >
{
  CNSDbLogManager::_ItemLog ***_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 1556 */
struct __cppobj std::_Iterator_with_base<std::random_access_iterator_tag,CNSDbLogManager::_ItemLog *,int,CNSDbLogManager::_ItemLog * const *,CNSDbLogManager::_ItemLog * const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1557 */
struct __cppobj std::_Ranit<CNSDbLogManager::_ItemLog *,int,CNSDbLogManager::_ItemLog * const *,CNSDbLogManager::_ItemLog * const &> : std::_Iterator_with_base<std::random_access_iterator_tag,CNSDbLogManager::_ItemLog *,int,CNSDbLogManager::_ItemLog * const *,CNSDbLogManager::_ItemLog * const &,std::_Iterator_base_aux>
{
};

/* 1558 */
struct __cppobj std::_Deque_const_iterator<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *>,1> : std::_Ranit<CNSDbLogManager::_ItemLog *,int,CNSDbLogManager::_ItemLog * const *,CNSDbLogManager::_ItemLog * const &>
{
  unsigned int _Myoff;
};

/* 1559 */
struct __cppobj std::_Deque_iterator<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *>,1> : std::_Deque_const_iterator<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *>,1>
{
};

/* 1560 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1561 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSPcParams::_Status *>,int,std::pair<unsigned long const ,CNSPcParams::_Status *> const *,std::pair<unsigned long const ,CNSPcParams::_Status *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1562 */
struct __cppobj std::_Bidit<std::pair<unsigned long const ,CNSPcParams::_Status *>,int,std::pair<unsigned long const ,CNSPcParams::_Status *> const *,std::pair<unsigned long const ,CNSPcParams::_Status *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned long const ,CNSPcParams::_Status *>,int,std::pair<unsigned long const ,CNSPcParams::_Status *> const *,std::pair<unsigned long const ,CNSPcParams::_Status *> const &,std::_Iterator_base_aux>
{
};

/* 1563 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned long const ,CNSPcParams::_Status *>,int,std::pair<unsigned long const ,CNSPcParams::_Status *> const *,std::pair<unsigned long const ,CNSPcParams::_Status *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::_Node *_Ptr;
};

/* 1564 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::const_iterator
{
};

/* 1565 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >::iterator first;
  bool second;
};

/* 1566 */
struct std::queue<CNSDbLogManager::_ItemLog *,std::deque<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *> > >
{
  std::deque<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *> > c;
};

/* 1567 */
struct __cppobj std::list<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > : std::_List_val<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >
{
  std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1568 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,SteamEngine::Win32::Net::CSession *,int,SteamEngine::Win32::Net::CSession * const *,SteamEngine::Win32::Net::CSession * const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1569 */
struct __cppobj std::_Bidit<SteamEngine::Win32::Net::CSession *,int,SteamEngine::Win32::Net::CSession * const *,SteamEngine::Win32::Net::CSession * const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,SteamEngine::Win32::Net::CSession *,int,SteamEngine::Win32::Net::CSession * const *,SteamEngine::Win32::Net::CSession * const &,std::_Iterator_base_aux>
{
};

/* 1570 */
struct __cppobj std::list<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Const_iterator<1> : std::_Bidit<SteamEngine::Win32::Net::CSession *,int,SteamEngine::Win32::Net::CSession * const *,SteamEngine::Win32::Net::CSession * const &>
{
  std::_List_nod<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Node *_Ptr;
};

/* 1571 */
struct __cppobj std::list<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Iterator<1> : std::list<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >::_Const_iterator<1>
{
};

/* 1572 */
struct __cppobj std::map<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> > > : std::_Tree<std::_Tmap_traits<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> >,0> >
{
};

/* 1573 */
struct __cppobj std::_Different_checked_iterator_base_type_tag
{
};

/* 1574 */
struct __cppobj CSingleton<SteamEngine::Win32::Net::CSessionManager>
{
};

/* 1575 */
struct SteamEngine::Win32::Net::CSessionManager::_socketBuff
{
  unsigned int dwCompletionKey;
  char *pBuff;
  int dwLength;
};

/* 1576 */
struct __cppobj std::_Allocator_base<SteamEngine::Win32::Net::CSession * *>
{
};

/* 1577 */
struct __cppobj std::allocator<SteamEngine::Win32::Net::CSession * *> : std::_Allocator_base<SteamEngine::Win32::Net::CSession * *>
{
};

/* 1578 */
struct __cppobj __declspec(align(4)) std::_Deque_map<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > : std::_Container_base_aux_alloc_real<std::allocator<SteamEngine::Win32::Net::CSession *> >
{
  std::allocator<SteamEngine::Win32::Net::CSession * *> _Almap;
};

/* 1579 */
struct __cppobj __declspec(align(4)) std::_Deque_val<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > : std::_Deque_map<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >
{
  std::allocator<SteamEngine::Win32::Net::CSession *> _Alval;
};

/* 1580 */
struct __cppobj std::deque<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > : std::_Deque_val<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> >
{
  SteamEngine::Win32::Net::CSession ***_Map;
  unsigned int _Mapsize;
  unsigned int _Myoff;
  unsigned int _Mysize;
};

/* 1581 */
struct __cppobj SteamEngine::Win32::Net::CSessionManager : SteamEngine::Win32::System::CThread, CSingleton<SteamEngine::Win32::Net::CSessionManager>
{
  unsigned int m_dwSendCount;
  unsigned int m_dwWriteBytes;
  unsigned int m_dwStartTick;
  int m_bThreadLoop;
  int m_bGhostConnectCheck;
  std::list<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > *m_listSession;
  std::deque<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *> > *m_dequeFreeSession;
  SteamEngine::Win32::System::CCriticalSection m_csListSession;
  SteamEngine::Win32::System::CCriticalSection m_csDequeFreeSession;
};

/* 1582 */
struct __cppobj CSingleton<CNSAdminParams>
{
};

/* 1583 */
struct __cppobj CNSAdminParams : CSingleton<CNSAdminParams>
{
  CNSAdminParamsVtbl *vfptr;
  std::map<unsigned long,CNSAdminParams::_Admin *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSAdminParams::_Admin *> > > m_mapAdmin;
};

/* 1584 */
struct CNSAdminParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSAdminParams *this, unsigned int);
  int (__thiscall *Init)(CNSAdminParams *this);
};

/* 1585 */
struct __cppobj CSingleton<CNSPcParams>
{
};

/* 1586 */
struct __cppobj CNSPcParams : CSingleton<CNSPcParams>
{
  CNSPcParamsVtbl *vfptr;
  std::map<unsigned long,CNSPcParams::_Status *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CNSPcParams::_Status *> > > m_mapStatus;
  std::map<unsigned short,unsigned long,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned long> > > m_mapExp;
  std::map<unsigned short,CNSPcParams::_Path *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSPcParams::_Path *> > > m_mapPath;
};

/* 1587 */
struct CNSPcParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSPcParams *this, unsigned int);
  int (__thiscall *Init)(CNSPcParams *this);
};

/* 1588 */
struct __cppobj CSingleton<CNSDbLogManager>
{
};

/* 1589 */
struct __cppobj CNSDbLogManager : SteamEngine::Win32::System::CThread, CSingleton<CNSDbLogManager>
{
  int m_bThreadLoop;
  SteamEngine::Win32::DB::COdbc *m_pDb;
  std::queue<CNSDbLogManager::_ItemLog *,std::deque<CNSDbLogManager::_ItemLog *,std::allocator<CNSDbLogManager::_ItemLog *> > > m_queueItemLog;
  CNSCriticalSection m_csqueueItemLog;
  int m_bDbCheck;
  unsigned int m_dwLastCheckTime;
  char m_szServerName[256];
  char m_szDbName[256];
  char m_szUserId[256];
  char m_szPassword[256];
};

/* 1590 */
struct CBusMan
{
  CBusManVtbl *vfptr;
  char **m_token;
  int m_nTokenCount;
};

/* 1591 */
struct CBusManVtbl
{
  void *(__thiscall *__vecDelDtor)(CBusMan *this, unsigned int);
};

/* 1592 */
struct NSScriptNpcTalk::__l2::Menu
{
  char szText[256];
  char szKey[256];
};

/* 1593 */
struct std::pair<int const ,unsigned long>
{
  const int first;
  unsigned int second;
};

/* 1594 */
struct __cppobj std::_Allocator_base<std::pair<int const ,unsigned long> >
{
};

/* 1595 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *_Right;
  std::pair<int const ,unsigned long> _Myval;
  char _Color;
  char _Isnil;
};

/* 1596 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *>
{
};

/* 1597 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node>
{
};

/* 1598 */
struct __cppobj std::allocator<std::pair<int const ,unsigned long> > : std::_Allocator_base<std::pair<int const ,unsigned long> >
{
};

/* 1599 */
struct __cppobj std::allocator<std::pair<int const ,unsigned long> >::rebind<std::_Aux_cont>
{
};

/* 1600 */
struct __cppobj std::allocator<std::pair<int const ,unsigned long> >::rebind<std::pair<int const ,unsigned long> >
{
};

/* 1601 */
struct __cppobj std::allocator<std::pair<int const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node>
{
};

/* 1602 */
struct __cppobj std::allocator<std::pair<int const ,unsigned long> >::rebind<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *>
{
};

/* 1603 */
struct __cppobj std::allocator<std::pair<int const ,unsigned long> >::rebind<int>
{
};

/* 1604 */
struct __cppobj std::allocator<std::pair<int const ,unsigned long> >::rebind<char>
{
};

/* 1605 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *>
{
};

/* 1606 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node>
{
};

/* 1607 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,unsigned long> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1608 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<int const ,unsigned long> > >
{
  std::less<int> comp;
};

/* 1609 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> > : std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node> _Alnod;
};

/* 1610 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> > : std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *> _Alptr;
};

/* 1611 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> > : std::_Tree_ptr<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >
{
  std::allocator<std::pair<int const ,unsigned long> > _Alval;
};

/* 1612 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> > : std::_Tree_val<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1613 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,unsigned long>,int,std::pair<int const ,unsigned long> const *,std::pair<int const ,unsigned long> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1614 */
struct __cppobj std::_Bidit<std::pair<int const ,unsigned long>,int,std::pair<int const ,unsigned long> const *,std::pair<int const ,unsigned long> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<int const ,unsigned long>,int,std::pair<int const ,unsigned long> const *,std::pair<int const ,unsigned long> const &,std::_Iterator_base_aux>
{
};

/* 1615 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::const_iterator : std::_Bidit<std::pair<int const ,unsigned long>,int,std::pair<int const ,unsigned long> const *,std::pair<int const ,unsigned long> const &>
{
  std::_Tree_nod<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::_Node *_Ptr;
};

/* 1616 */
struct __cppobj std::_Tree<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::iterator : std::_Tree<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::const_iterator
{
};

/* 1617 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >::iterator first;
  bool second;
};

/* 1618 */
struct __cppobj std::map<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> > > : std::_Tree<std::_Tmap_traits<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> >,0> >
{
};

/* 1619 */
struct __cppobj CSingleton<CNSReserveManager>
{
};

/* 1620 */
struct __cppobj CNSReserveManager : CSingleton<CNSReserveManager>
{
  CNSReserveManagerVtbl *vfptr;
  CNSReserveManager::_KeyInfo m_KeyArray[10];
  unsigned int m_dwKeySeq[10];
  std::map<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> > > m_mapReserveUser[10];
  CNSCriticalSection m_cs[10];
};

/* 1621 */
struct CNSReserveManagerVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSReserveManager *this, unsigned int);
  int (__thiscall *Init)(CNSReserveManager *this);
};

/* 1622 */
struct CNSReserveManager::_KeyInfo
{
  int bStart;
  char szComment[256];
  NSPOINT2 cell;
};

/* 1623 */
struct __cppobj CSingleton<CNSQuestParams>
{
};

/* 1624 */
struct __cppobj CNSQuestParams : CSingleton<CNSQuestParams>
{
  CNSQuestParamsVtbl *vfptr;
  std::map<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> > > m_mapQuest;
};

/* 1625 */
struct CNSQuestParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSQuestParams *this, unsigned int);
  int (__thiscall *Init)(CNSQuestParams *this);
};

/* 1626 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSQuest *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1627 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSQuest *> > >
{
  std::less<unsigned short> comp;
};

/* 1628 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node>
{
};

/* 1629 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node>
{
};

/* 1630 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> > : std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node> _Alnod;
};

/* 1631 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *>
{
};

/* 1632 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *>
{
};

/* 1633 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *> _Alptr;
};

/* 1634 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSQuest *> >
{
};

/* 1635 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSQuest *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSQuest *> >
{
};

/* 1636 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSQuest *> > _Alval;
};

/* 1637 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSQuest *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1638 */
struct std::pair<unsigned short const ,CNSQuest *>
{
  const unsigned __int16 first;
  CNSQuest *second;
};

/* 1639 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1640 */
struct __cppobj std::map<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >
{
};

/* 1641 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSQuest *>,int,std::pair<unsigned short const ,CNSQuest *> const *,std::pair<unsigned short const ,CNSQuest *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1642 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSQuest *>,int,std::pair<unsigned short const ,CNSQuest *> const *,std::pair<unsigned short const ,CNSQuest *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSQuest *>,int,std::pair<unsigned short const ,CNSQuest *> const *,std::pair<unsigned short const ,CNSQuest *> const &,std::_Iterator_base_aux>
{
};

/* 1643 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSQuest *>,int,std::pair<unsigned short const ,CNSQuest *> const *,std::pair<unsigned short const ,CNSQuest *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *_Ptr;
};

/* 1644 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::const_iterator
{
};

/* 1645 */
struct __cppobj CSingleton<CNSDbParams>
{
};

/* 1646 */
struct __cppobj CNSDbParams : CSingleton<CNSDbParams>
{
  CNSDbParamsVtbl *vfptr;
  char m_szAuthDbName[256];
};

/* 1647 */
struct CNSDbParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSDbParams *this, unsigned int);
};

/* 1648 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::iterator first;
  bool second;
};

/* 1649 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSQuest *> >::rebind<std::_Aux_cont>
{
};

/* 1650 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSQuest *> >::rebind<std::pair<unsigned short const ,CNSQuest *> >
{
};

/* 1651 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSQuest *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node>
{
};

/* 1652 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSQuest *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSQuest *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSQuest *> >,0> >::_Node *>
{
};

/* 1653 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSQuest *> >::rebind<unsigned short>
{
};

/* 1654 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSQuest *> >::rebind<char>
{
};

/* 1655 */
struct SteamEngine::Win32::Common::CString
{
  SteamEngine::Win32::Common::CStringVtbl *vfptr;
  char *m_cData;
  int m_nStringLen;
  int m_nAllocSize;
};

/* 1656 */
struct SteamEngine::Win32::Common::CStringVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::Common::CString *this, unsigned int);
};

/* 1657 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSProduct *>,int,std::pair<unsigned short const ,CNSProduct *> const *,std::pair<unsigned short const ,CNSProduct *> const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1658 */
struct __cppobj std::_Bidit<std::pair<unsigned short const ,CNSProduct *>,int,std::pair<unsigned short const ,CNSProduct *> const *,std::pair<unsigned short const ,CNSProduct *> const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned short const ,CNSProduct *>,int,std::pair<unsigned short const ,CNSProduct *> const *,std::pair<unsigned short const ,CNSProduct *> const &,std::_Iterator_base_aux>
{
};

/* 1659 */
struct __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *_Left;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *_Parent;
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *_Right;
  std::pair<unsigned short const ,CNSProduct *> _Myval;
  char _Color;
  char _Isnil;
};

/* 1660 */
struct std::pair<unsigned short const ,CNSProduct *>
{
  const unsigned __int16 first;
  CNSProduct *second;
};

/* 1661 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::const_iterator : std::_Bidit<std::pair<unsigned short const ,CNSProduct *>,int,std::pair<unsigned short const ,CNSProduct *> const *,std::pair<unsigned short const ,CNSProduct *> const &>
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *_Ptr;
};

/* 1662 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::iterator : std::_Tree<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::const_iterator
{
};

/* 1663 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSProduct *> > > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1664 */
struct __cppobj __declspec(align(4)) std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> : std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned short const ,CNSProduct *> > >
{
  std::less<unsigned short> comp;
};

/* 1665 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node>
{
};

/* 1666 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node>
{
};

/* 1667 */
struct __cppobj __declspec(align(4)) std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> > : std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0>
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node> _Alnod;
};

/* 1668 */
struct __cppobj std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *>
{
};

/* 1669 */
struct __cppobj std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *> : std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *>
{
};

/* 1670 */
struct __cppobj __declspec(align(4)) std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> > : std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >
{
  std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *> _Alptr;
};

/* 1671 */
struct __cppobj std::_Allocator_base<std::pair<unsigned short const ,CNSProduct *> >
{
};

/* 1672 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSProduct *> > : std::_Allocator_base<std::pair<unsigned short const ,CNSProduct *> >
{
};

/* 1673 */
struct __cppobj __declspec(align(4)) std::_Tree_val<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> > : std::_Tree_ptr<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >
{
  std::allocator<std::pair<unsigned short const ,CNSProduct *> > _Alval;
};

/* 1674 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> > : std::_Tree_val<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >
{
  std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1675 */
struct __cppobj CSingleton<CNSProductParams>
{
};

/* 1676 */
struct __cppobj CNSProductParams : CSingleton<CNSProductParams>
{
  CNSProductParamsVtbl *vfptr;
  std::map<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> > > m_mapProduct;
};

/* 1677 */
struct CNSProductParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSProductParams *this, unsigned int);
  int (__thiscall *Init)(CNSProductParams *this);
};

/* 1678 */
struct __cppobj std::map<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> > > : std::_Tree<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >
{
};

/* 1679 */
struct __declspec(align(4)) std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::iterator,bool>
{
  std::_Tree<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::iterator first;
  bool second;
};

/* 1680 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSProduct *> >::rebind<std::_Aux_cont>
{
};

/* 1681 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSProduct *> >::rebind<std::pair<unsigned short const ,CNSProduct *> >
{
};

/* 1682 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSProduct *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node>
{
};

/* 1683 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSProduct *> >::rebind<std::_Tree_nod<std::_Tmap_traits<unsigned short,CNSProduct *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CNSProduct *> >,0> >::_Node *>
{
};

/* 1684 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSProduct *> >::rebind<unsigned short>
{
};

/* 1685 */
struct __cppobj std::allocator<std::pair<unsigned short const ,CNSProduct *> >::rebind<char>
{
};

/* 1686 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_39
{
  const void *pVFTable;
  void *spare;
  char name[39];
};

/* 1687 */
struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};

/* 1688 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_34
{
  const void *pVFTable;
  void *spare;
  char name[34];
};

/* 1689 */
struct MD5state_st
{
  unsigned int A;
  unsigned int B;
  unsigned int C;
  unsigned int D;
  unsigned int Nl;
  unsigned int Nh;
  unsigned int data[16];
  int num;
};

/* 1690 */
struct __declspec(align(4)) CNSPc::PetFood::__l2::_FoodTable
{
  unsigned int dwValue;
  unsigned __int16 wFood;
};

/* 1691 */
struct __declspec(align(4)) CNSPc::DBAliasList::__l2::_AliasList
{
  int nAliasSeq;
  char szUserAlias[25];
  char btRace;
  char btJob;
  char btBody;
  char btLevel;
  unsigned __int16 btStr;
  unsigned __int16 btCon;
  unsigned __int16 btDex;
  unsigned __int16 btInt;
  char btRegion;
  unsigned __int16 wPosX;
  unsigned __int16 wPosY;
  char btTransRegion;
  unsigned __int16 wTransPosX;
  unsigned __int16 wTransPosY;
};

/* 1692 */
struct __cppobj CNSNpcStateUnderground : CNSNpcState
{
};

/* 1693 */
struct __cppobj CNSNpcStateStand : CNSNpcState
{
  unsigned int m_dwCheckTime;
};

/* 1694 */
struct __cppobj CNSNpcStateSkill : CNSNpcState
{
  int m_nAttackCount;
  unsigned int m_dwAttackTime;
  unsigned int m_dwSkillStartTime;
};

/* 1695 */
struct __cppobj CNSNpcStateRunaway : CNSNpcState
{
};

/* 1696 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_25
{
  const void *pVFTable;
  void *spare;
  char name[25];
};

/* 1697 */
struct __cppobj CNSNpcStateReturn : CNSNpcState
{
};

/* 1698 */
struct __cppobj CNSNpcStateMove : CNSNpcState
{
  unsigned int m_dwCounter;
};

/* 1699 */
struct __cppobj CNSNpcStateGlobal : CNSNpcState
{
  unsigned int m_dwRecoveryTime;
  unsigned int m_dwCheckTime;
  unsigned int m_statPrev;
  int m_nStaPer;
};

/* 1700 */
struct __cppobj CNSNpcStateDead : CNSNpcState
{
  int m_bItemExist;
};

/* 1701 */
struct __cppobj CNSNpcStateAttack : CNSNpcState
{
  int m_nAttackCount;
  unsigned int m_dwAttackTime;
  unsigned int m_dwCheckTime;
};

/* 1702 */
struct __declspec(align(4)) _NpcSkillTypeTable
{
  CNSNpcSkill::NPCSKILLTYPE skillType;
  unsigned __int16 wSkillId;
};

/* 1703 */
struct __cppobj CSingleton<CNSBlockSysManager>
{
};

/* 1704 */
struct __cppobj CNSBlockSysManager : CSingleton<CNSBlockSysManager>
{
  CNSBlockSysManagerVtbl *vfptr;
  CNSBlockSysManager::_Block m_BlockArray[200];
};

/* 1705 */
struct CNSBlockSysManagerVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSBlockSysManager *this, unsigned int);
  int (__thiscall *Init)(CNSBlockSysManager *this);
};

/* 1706 */
struct __declspec(align(2)) CNSBlockSysManager::_Block
{
  unsigned int dwObjectId;
  char btRegion;
  NSPOINT2 cell;
  char btSize;
};

/* 1707 */
struct __unaligned __declspec(align(4)) ATL::COleDateTime
{
  long double m_dt;
  ATL::COleDateTime::DateTimeStatus m_status;
};

/* 1708 */
struct UDATE
{
  _SYSTEMTIME st;
  unsigned __int16 wDayOfYear;
};

/* 1709 */
struct __unaligned __declspec(align(4)) ATL::COleDateTimeSpan
{
  long double m_span;
  ATL::COleDateTimeSpan::DateTimeSpanStatus m_status;
};

/* 1710 */
struct ATL::CSimpleStringT<char,0>
{
  char *m_pszData;
};

/* 1711 */
struct __cppobj ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > : ATL::CSimpleStringT<char,0>
{
};

/* 1712 */
struct CNSItem::GetDescription::__l2::_ItemTypeTable
{
  char btType;
};

/* 1713 */
struct CNSItem::GetDescription::__l2::_JobNameTable
{
  char btRegion;
  char btJob;
};

/* 1714 */
struct tagCONNECTDATA
{
  IUnknown *pUnk;
  unsigned int dwCookie;
};

/* 1715 */
struct __cppobj IConnectionPoint : IUnknown
{
};

/* 1716 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_16
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[4];
  _BYTE gap10[1];
};

/* 1717 */
struct _POINTL
{
  int x;
  int y;
};

/* 1718 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_45
{
  const void *pVFTable;
  void *spare;
  char name[45];
};

/* 1719 */
struct HKEY__
{
  int unused;
};

/* 1720 */
struct _SECURITY_ATTRIBUTES
{
  unsigned int nLength;
  void *lpSecurityDescriptor;
  int bInheritHandle;
};

/* 1721 */
struct _DLLVERSIONINFO
{
  unsigned int cbSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformID;
};

/* 1722 */
struct ATL::ATLSTRINGRESOURCEIMAGE
{
  unsigned __int16 nLength;
  wchar_t achString[];
};

/* 1723 */
struct ATL::CSimpleMap<char *,wchar_t *,ATL::CExpansionVectorEqualHelper>
{
  char **m_aKey;
  wchar_t **m_aVal;
  int m_nSize;
};

/* 1724 */
struct __cppobj ATL::CExpansionVector : ATL::CSimpleMap<char *,wchar_t *,ATL::CExpansionVectorEqualHelper>
{
};

/* 1725 */
struct __cppobj IPersist : IUnknown
{
};

/* 1726 */
struct __cppobj IPersistStream : IPersist
{
};

/* 1727 */
struct ATL::CComPtrBase<IPersistStream>
{
  IPersistStream *p;
};

/* 1728 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IPersistStream> : IPersistStream
{
};

/* 1729 */
struct ATL::CComCriticalSection
{
  _RTL_CRITICAL_SECTION m_sec;
};

/* 1730 */
struct ATL::_AtlCreateWndData
{
  void *m_pThis;
  unsigned int m_dwThreadID;
  ATL::_AtlCreateWndData *m_pNext;
};

/* 1731 */
struct ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
{
  unsigned __int16 *m_aT;
  int m_nSize;
  int m_nAllocSize;
};

/* 1732 */
struct ATL::_ATL_WIN_MODULE70
{
  unsigned int cbSize;
  ATL::CComCriticalSection m_csWindowCreate;
  ATL::_AtlCreateWndData *m_pCreateWndList;
  ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> > m_rgWindowClassAtoms;
};

/* 1733 */
const struct ATL::_ATL_CATMAP_ENTRY
{
  int iType;
  _GUID *pcatid;
};

/* 1734 */
struct ATL::_ATL_OBJMAP_ENTRY30
{
  _GUID *pclsid;
  HRESULT (__stdcall *pfnUpdateRegistry)(int);
  HRESULT (__stdcall *pfnGetClassObject)(void *, _GUID *, void **);
  HRESULT (__stdcall *pfnCreateInstance)(void *, _GUID *, void **);
  IUnknown *pCF;
  unsigned int dwRegister;
  const char *(__stdcall *pfnGetObjectDescription)();
  ATL::_ATL_CATMAP_ENTRY *(__cdecl *pfnGetCategoryMap)();
  void (__stdcall *pfnObjectMain)(bool);
};

/* 1735 */
struct ATL::_ATL_COM_MODULE70
{
  unsigned int cbSize;
  HINSTANCE__ *m_hInstTypeLib;
  ATL::_ATL_OBJMAP_ENTRY30 **m_ppAutoObjMapFirst;
  ATL::_ATL_OBJMAP_ENTRY30 **m_ppAutoObjMapLast;
  ATL::CComCriticalSection m_csObjMap;
};

/* 1736 */
struct ATL::CStringData
{
  ATL::IAtlStringMgr *pStringMgr;
  int nDataLength;
  int nAllocLength;
  int nRefs;
};

/* 1737 */
struct ATL::IAtlStringMgr
{
  ATL::IAtlStringMgrVtbl *vfptr;
};

/* 1738 */
struct ATL::IAtlStringMgrVtbl
{
  ATL::CStringData *(__thiscall *Allocate)(ATL::IAtlStringMgr *this, int, int);
  void (__thiscall *Free)(ATL::IAtlStringMgr *this, ATL::CStringData *);
  ATL::CStringData *(__thiscall *Reallocate)(ATL::IAtlStringMgr *this, ATL::CStringData *, int, int);
  ATL::CStringData *(__thiscall *GetNilString)(ATL::IAtlStringMgr *this);
  ATL::IAtlStringMgr *(__thiscall *Clone)(ATL::IAtlStringMgr *this);
};

/* 1739 */
struct ATL::CTempBuffer<char,256,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[256];
};

/* 1740 */
struct ATL::IAtlMemMgr
{
  ATL::IAtlMemMgrVtbl *vfptr;
};

/* 1741 */
struct ATL::IAtlMemMgrVtbl
{
  void *(__thiscall *Allocate)(ATL::IAtlMemMgr *this, unsigned int);
  void (__thiscall *Free)(ATL::IAtlMemMgr *this, void *);
  void *(__thiscall *Reallocate)(ATL::IAtlMemMgr *this, void *, unsigned int);
  unsigned int (__thiscall *GetSize)(ATL::IAtlMemMgr *this, void *);
};

/* 1742 */
struct __cppobj ATL::CGlobalHeap : ATL::IAtlMemMgr
{
};

/* 1743 */
struct __cppobj ATL::ChTraitsBase<char>
{
};

/* 1744 */
struct __cppobj ATL::ChTraitsCRT<char> : ATL::ChTraitsBase<char>
{
};

/* 1745 */
struct ATL::CTime
{
  __int64 m_time;
};

/* 1746 */
struct ATL::CTimeSpan
{
  __int64 m_timeSpan;
};

/* 1747 */
struct ATL::IFixedStringLog
{
  ATL::IFixedStringLogVtbl *vfptr;
};

/* 1748 */
struct ATL::IFixedStringLogVtbl
{
  void (__thiscall *OnAllocateSpill)(ATL::IFixedStringLog *this, int, int, ATL::CStringData *);
  void (__thiscall *OnReallocateSpill)(ATL::IFixedStringLog *this, int, int, ATL::CStringData *);
};

/* 1749 */
struct __cppobj IConnectionPointContainer : IUnknown
{
};

/* 1750 */
struct ATL::CComPtrBase<IConnectionPointContainer>
{
  IConnectionPointContainer *p;
};

/* 1751 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IConnectionPointContainer> : IConnectionPointContainer
{
};

/* 1752 */
struct ATL::CComPtrBase<IConnectionPoint>
{
  IConnectionPoint *p;
};

/* 1753 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IConnectionPoint> : IConnectionPoint
{
};

/* 1754 */
struct __cppobj ATL::ChTraitsBase<wchar_t>
{
};

/* 1755 */
struct ATL::CAutoVectorPtr<wchar_t>
{
  wchar_t *m_p;
};

/* 1756 */
struct __cppobj IMalloc : IUnknown
{
};

/* 1757 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<IMalloc> : IMalloc
{
};

/* 1758 */
struct ATL::CSimpleMap<char *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<wchar_t *>
{
  wchar_t *t;
};

/* 1759 */
struct ATL::CSimpleMap<char *,wchar_t *,ATL::CExpansionVectorEqualHelper>::Wrapper<char *>
{
  char *t;
};

/* 1760 */
struct ATL::_ATL_REGMAP_ENTRY
{
  const wchar_t *szKey;
  const wchar_t *szData;
};

/* 1761 */
struct __cppobj ATL::CLocalHeap : ATL::IAtlMemMgr
{
};

/* 1762 */
struct __cppobj ATL::CAtlComModule : ATL::_ATL_COM_MODULE70
{
};

/* 1763 */
struct ATL::_ATL_TERMFUNC_ELEM
{
  void (__stdcall *pFunc)(unsigned int);
  unsigned int dw;
  ATL::_ATL_TERMFUNC_ELEM *pNext;
};

/* 1764 */
struct ATL::_ATL_MODULE70
{
  unsigned int cbSize;
  int m_nLockCnt;
  ATL::_ATL_TERMFUNC_ELEM *m_pTermFuncs;
  ATL::CComCriticalSection m_csStaticDataInitAndTypeInfo;
};

/* 1765 */
struct ATL::CComPtrBase<IUnknown>
{
  IUnknown *p;
};

/* 1766 */
struct ATL::CTempBuffer<char,128,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[128];
};

/* 1767 */
struct __cppobj ATL::ChTraitsCRT<wchar_t> : ATL::ChTraitsBase<wchar_t>
{
};

/* 1768 */
struct __cppobj ATL::CAtlModule : ATL::_ATL_MODULE70
{
  ATL::CAtlModuleVtbl *vfptr;
  IGlobalInterfaceTable *m_pGIT;
};

/* 1769 */
struct __cppobj IGlobalInterfaceTable : IUnknown
{
};

/* 1770 */
struct __cppobj IRegistrarBase : IUnknown
{
};

/* 1771 */
struct ATL::CAtlModuleVtbl
{
  void *(__thiscall *__vecDelDtor)(ATL::CAtlModule *this, unsigned int);
  int (__thiscall *Lock)(ATL::CAtlModule *this);
  int (__thiscall *Unlock)(ATL::CAtlModule *this);
  int (__thiscall *GetLockCount)(ATL::CAtlModule *this);
  HRESULT (__thiscall *GetGITPtr)(ATL::CAtlModule *this, IGlobalInterfaceTable **);
  HRESULT (__thiscall *AddCommonRGSReplacements)(ATL::CAtlModule *this, IRegistrarBase *);
};

/* 1772 */
struct __cppobj ATL::CAtlModuleT<ATL::CComModule> : ATL::CAtlModule
{
};

/* 1773 */
struct __cppobj ATL::CComModule : ATL::CAtlModuleT<ATL::CComModule>
{
  ATL::_ATL_OBJMAP_ENTRY30 *m_pObjMap;
};

/* 1774 */
struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode
{
  ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode *m_pNext;
  char _pad[4];
};

/* 1775 */
struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
{
  ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferNode *m_pHead;
};

/* 1776 */
struct __cppobj ATL::CRTThreadTraits
{
};

/* 1777 */
struct __cppobj ATL::CComAutoCriticalSection : ATL::CComCriticalSection
{
};

/* 1778 */
struct __cppobj ATL::CComPtr<IConnectionPoint> : ATL::CComPtrBase<IConnectionPoint>
{
};

/* 1779 */
struct __cppobj ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > : ATL::ChTraitsCRT<char>
{
};

/* 1780 */
struct ATL::CComApartment
{
  unsigned int m_dwThreadID;
  void *m_hThread;
  int m_nLockCnt;
};

/* 1781 */
struct __cppobj ATL::CLocalAllocator
{
};

/* 1782 */
struct __cppobj ATL::CComPtr<IPersistStream> : ATL::CComPtrBase<IPersistStream>
{
};

/* 1783 */
struct ATL::_AtlAptCreateObjData
{
  HRESULT (__stdcall *pfnCreateInstance)(void *, _GUID *, void **);
  _GUID *piid;
  void *hEvent;
  IStream *pStream;
  HRESULT hRes;
};

/* 1784 */
struct ATL::CComPtrBase<IDispatch>
{
  IDispatch *p;
};

/* 1785 */
struct ATL::CSimpleStringT<char,1>
{
  char *m_pszData;
};

/* 1786 */
struct __cppobj ATL::CComPtr<IUnknown> : ATL::CComPtrBase<IUnknown>
{
};

/* 1787 */
struct __cppobj ATL::CComQIPtr<IUnknown,&IID_IUnknown> : ATL::CComPtr<IUnknown>
{
};

/* 1788 */
struct __cppobj __declspec(align(4)) ATL::CComSafeDeleteCriticalSection : ATL::CComCriticalSection
{
  bool m_bInitialized;
};

/* 1789 */
struct __cppobj ATL::CComAutoDeleteCriticalSection : ATL::CComSafeDeleteCriticalSection
{
};

/* 1790 */
struct __cppobj ATL::CRegObject : IRegistrarBase
{
  ATL::CExpansionVector m_RepMap;
  ATL::CComAutoDeleteCriticalSection m_csMap;
};

/* 1791 */
struct ATL::CRegParser
{
  char *m_pchCur;
  ATL::CRegObject *m_pRegObj;
};

/* 1792 */
struct ATL::CRegKey
{
  HKEY__ *m_hKey;
  unsigned int m_samWOW64;
};

/* 1793 */
struct ATL::CRegParser::CParseBuffer
{
  int nPos;
  int nSize;
  char *p;
};

/* 1794 */
struct __cppobj ATL::CCRTHeap : ATL::IAtlMemMgr
{
};

/* 1795 */
struct ATL::CSimpleArray<HINSTANCE__ *,ATL::CSimpleArrayEqualHelper<HINSTANCE__ *> >
{
  HINSTANCE__ **m_aT;
  int m_nSize;
  int m_nAllocSize;
};

/* 1796 */
struct ATL::CComBSTR
{
  wchar_t *m_str;
};

/* 1797 */
struct ATL::IAtlAutoThreadModule
{
  ATL::IAtlAutoThreadModuleVtbl *vfptr;
};

/* 1798 */
struct ATL::IAtlAutoThreadModuleVtbl
{
  HRESULT (__thiscall *CreateInstance)(ATL::IAtlAutoThreadModule *this, void *, _GUID *, void **);
};

/* 1799 */
struct ATL::CComSimpleThreadAllocator
{
  int m_nThread;
};

/* 1800 */
struct __cppobj ATL::CAtlAutoThreadModuleT<ATL::CAtlAutoThreadModule,ATL::CComSimpleThreadAllocator,4294967295> : ATL::IAtlAutoThreadModule
{
  unsigned int dwThreadID;
  int m_nThreads;
  ATL::CComApartment *m_pApartments;
  ATL::CComSimpleThreadAllocator m_Allocator;
};

/* 1801 */
struct ATL::CComPtrBase<IMalloc>
{
  IMalloc *p;
};

/* 1802 */
struct ATL::CAtlException
{
  HRESULT m_hr;
};

/* 1803 */
struct ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[1024];
};

/* 1804 */
struct __cppobj ATL::CComMultiThreadModel
{
};

/* 1805 */
struct __cppobj ATL::CComMultiThreadModelNoCS
{
};

/* 1806 */
struct ATL::CFileTimeSpan
{
  __int64 m_nSpan;
};

/* 1807 */
struct __cppobj ATL::CComAllocator
{
};

/* 1808 */
struct __cppobj ATL::CComPtr<IConnectionPointContainer> : ATL::CComPtrBase<IConnectionPointContainer>
{
};

/* 1809 */
struct __cppobj ICatRegister : IUnknown
{
};

/* 1810 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ICatRegister> : ICatRegister
{
};

/* 1811 */
struct ATL::CComPtrBase<ITypeLib>
{
  ITypeLib *p;
};

/* 1812 */
struct __cppobj ATL::_NoAddRefReleaseOnCComPtr<ITypeLib> : ITypeLib
{
};

/* 1813 */
struct ATL::CTempBuffer<wchar_t,128,ATL::CCRTAllocator>
{
  wchar_t *m_p;
  char m_abFixedBuffer[128];
};

/* 1814 */
struct __cppobj ATL::CGlobalAllocator
{
};

/* 1815 */
struct ATL::CHandle
{
  void *m_h;
};

/* 1816 */
struct __declspec(align(4)) ATL::CCritSecLock
{
  _RTL_CRITICAL_SECTION *m_cs;
  bool m_bLocked;
};

/* 1817 */
struct __cppobj ATL::CComSingleThreadModel
{
};

/* 1818 */
struct __cppobj ATL::CComFakeCriticalSection
{
};

/* 1819 */
struct ATL::_ATL_BASE_MODULE70
{
  unsigned int cbSize;
  HINSTANCE__ *m_hInst;
  HINSTANCE__ *m_hInstResource;
  unsigned int dwAtlBuildVer;
  _GUID *pguidVer;
  ATL::CComCriticalSection m_csResource;
  ATL::CSimpleArray<HINSTANCE__ *,ATL::CSimpleArrayEqualHelper<HINSTANCE__ *> > m_rgResourceInstance;
};

/* 1820 */
struct __cppobj ATL::CAtlBaseModule : ATL::_ATL_BASE_MODULE70
{
};

/* 1821 */
struct __cppobj ATL::CComHeap : ATL::IAtlMemMgr
{
};

/* 1822 */
struct __cppobj ATL::CComPtr<ITypeLib> : ATL::CComPtrBase<ITypeLib>
{
};

/* 1823 */
struct ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
{
  char *m_p;
  char m_abFixedBuffer[256];
};

/* 1824 */
struct __cppobj ATL::CNilStringData : ATL::CStringData
{
  wchar_t achNil[2];
};

/* 1825 */
struct __cppobj ATL::CComVariant : tagVARIANT
{
};

/* 1826 */
struct ATL::_ATL_INTMAP_ENTRY
{
  _GUID *piid;
  unsigned int dw;
  HRESULT (__stdcall *pFunc)(void *, _GUID *, void **, unsigned int);
};

/* 1827 */
struct __cppobj ATL::ChTraitsOS<wchar_t> : ATL::ChTraitsBase<wchar_t>
{
};

/* 1828 */
struct ATL::CAutoVectorPtr<char>
{
  char *m_p;
};

/* 1829 */
struct __cppobj ATL::CComPtr<IMalloc> : ATL::CComPtrBase<IMalloc>
{
};

/* 1830 */
struct __cppobj ATL::CFixedStringLog : ATL::IFixedStringLog
{
};

/* 1831 */
struct __cppobj ATL::CFileTime : _FILETIME
{
};

/* 1832 */
struct __cppobj ATL::CAtlWinModule : ATL::_ATL_WIN_MODULE70
{
};

/* 1833 */
struct ATL::CComPtrBase<ICatRegister>
{
  ICatRegister *p;
};

/* 1834 */
struct __cppobj ATL::CCRTAllocator
{
};

/* 1835 */
struct __cppobj ATL::CExpansionVectorEqualHelper
{
};

/* 1836 */
struct __cppobj ATL::Win32WaitTraits
{
};

/* 1837 */
struct __cppobj __declspec(align(4)) ATL::CWin32Heap : ATL::IAtlMemMgr
{
  void *m_hHeap;
  bool m_bOwnHeap;
};

/* 1838 */
struct __cppobj ATL::CComPtr<ICatRegister> : ATL::CComPtrBase<ICatRegister>
{
};

/* 1839 */
struct __declspec(align(4)) ATL::CComCritSecLock<ATL::CComCriticalSection>
{
  ATL::CComCriticalSection *m_cs;
  bool m_bLocked;
};

/* 1840 */
struct __cppobj ATL::CComPtr<IDispatch> : ATL::CComPtrBase<IDispatch>
{
};

/* 1841 */
struct __cppobj ATL::CFixedStringMgr : ATL::IAtlStringMgr
{
  ATL::IAtlStringMgr *m_pMgr;
  ATL::CStringData *m_pData;
};

/* 1842 */
struct __cppobj ATL::CTraceCategory
{
};

/* 1843 */
struct __cppobj ATL::Win32ThreadTraits
{
};

/* 1844 */
struct __cppobj ATL::CAtlStringMgr : ATL::IAtlStringMgr
{
  ATL::IAtlMemMgr *m_pMemMgr;
  ATL::CNilStringData m_nil;
};

/* 1845 */
struct $5ACE225D4D14CE0550A9F5A217E306C5
{
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
};

/* 1846 */
union $634F31243DCDCA59D41F3895F0055A57
{
  $5ACE225D4D14CE0550A9F5A217E306C5 __s0;
  _POINTL dmPosition;
};

/* 1847 */
union $309666D137CBB19809FA597AD348B415
{
  unsigned int dmDisplayFlags;
  unsigned int dmNup;
};

/* 1848 */
struct _devicemodeA
{
  char dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $634F31243DCDCA59D41F3895F0055A57 ___u6;
  __int16 dmScale;
  __int16 dmCopies;
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  char dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u21;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/* 1849 */
struct __declspec(align(4)) tagTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  wchar_t tmFirstChar;
  wchar_t tmLastChar;
  wchar_t tmDefaultChar;
  wchar_t tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};

/* 1850 */
struct tagPOINT
{
  int x;
  int y;
};

/* 1851 */
struct tagMSG
{
  HWND__ *hwnd;
  unsigned int message;
  unsigned int wParam;
  int lParam;
  unsigned int time;
  tagPOINT pt;
};

/* 1852 */
struct __cppobj IEnumConnections : IUnknown
{
};

/* 1853 */
struct HRSRC__
{
  int unused;
};

/* 1854 */
struct tagCATEGORYINFO
{
  _GUID catid;
  unsigned int lcid;
  wchar_t szDescription[128];
};

/* 1855 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_102
{
  const void *pVFTable;
  void *spare;
  char name[102];
};

/* 1856 */
struct _devicemodeW
{
  wchar_t dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $634F31243DCDCA59D41F3895F0055A57 ___u6;
  __int16 dmScale;
  __int16 dmCopies;
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  wchar_t dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u21;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/* 1857 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/* 1858 */
struct __cppobj IEnumConnectionPoints : IUnknown
{
};

/* 1859 */
struct __cppobj IRegistrar : IRegistrarBase
{
};

/* 1860 */
struct __cppobj IObjectWithSite : IUnknown
{
};

/* 1861 */
struct Define_the_symbol__ATL_MIXED::Thank_you
{
  Define_the_symbol__ATL_MIXED::Thank_youVtbl *vfptr;
};

/* 1862 */
struct Define_the_symbol__ATL_MIXED::Thank_youVtbl
{
  void (__thiscall *one)(Define_the_symbol__ATL_MIXED::Thank_you *this);
};

/* 1863 */
struct __cppobj Inconsistent_definition_of_symbol__ATL_MIXED::_Please_define_it_the_same_throughout_your_project
{
};

/* 1864 */
struct __declspec(align(4)) tagTEXTMETRICA
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  char tmFirstChar;
  char tmLastChar;
  char tmDefaultChar;
  char tmBreakChar;
  char tmItalic;
  char tmUnderlined;
  char tmStruckOut;
  char tmPitchAndFamily;
  char tmCharSet;
};

/* 1865 */
struct __s_GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/* 1866 */
struct CNSDbManager::_SocketBillSend::__l2::MsgCash2
{
  unsigned __int16 wType;
  unsigned __int16 wSeq;
  unsigned __int16 wPDULength;
  unsigned __int16 wDummy;
  unsigned int dwClientTick;
  int ID;
  int C_Type;
  char GameServer[4];
  char User_id[40];
  char User_reg_no[8];
  char User_IP[16];
  char Item_no[40];
  int Amount;
  char Order_Type[4];
};

/* 1867 */
struct __cppobj std::_Deque_const_iterator<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *>,0> : std::_Ranit<CNSDbManager::_SavePc *,int,CNSDbManager::_SavePc * const *,CNSDbManager::_SavePc * const &>
{
  unsigned int _Myoff;
};

/* 1868 */
struct __cppobj std::_Deque_iterator<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *>,0> : std::_Deque_const_iterator<CNSDbManager::_SavePc *,std::allocator<CNSDbManager::_SavePc *>,0>
{
};

/* 1869 */
struct __cppobj std::_Nonscalar_ptr_iterator_tag
{
};

/* 1870 */
struct __cppobj boost::singleton_pool<SteamEngine::Win32::Net::CPacket,8220,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type : boost::details::pool::win32_mutex
{
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 1871 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<SteamEngine::Win32::Net::CPacket,8220,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
};

/* 1872 */
struct __cppobj boost::singleton_pool<SteamEngine::Win32::Net::CPacket,8220,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
};

/* 1873 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<SteamEngine::Win32::Net::CPacket,8220,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
};

/* 1874 */
union $252809AF9AD2D35C847B88006853556B
{
  char cblock[8];
  unsigned int deslong[2];
};

/* 1875 */
struct des_ks_struct
{
  $252809AF9AD2D35C847B88006853556B ks;
  int weak_key;
};

/* 1876 */
struct $_TypeDescriptor$_extraBytes_48
{
  const void *pVFTable;
  void *spare;
  char name[48];
};

/* 1877 */
struct CNSBuff::GetName::__l2::_BuffTable
{
  CNSBuff::BUFFTYPE buffType;
};

/* 1878 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_14
{
  const void *pVFTable;
  void *spare;
  char name[14];
};

/* 1879 */
struct CNSAuction::DBAuctionList::__l2::_ItemFilterTable
{
  CNSAuction::SEARCHTYPE searchType;
  unsigned __int16 wStart;
  unsigned __int16 wEnd;
};

/* 1880 */
struct CNSAuction::DebugDBAuctionList::__l2::_ItemFilterTable
{
  CNSAuction::SEARCHTYPE searchType;
  unsigned __int16 wStart;
  unsigned __int16 wEnd;
};

/* 1881 */
struct CNSAuction::CheckItem::__l2::_auctionItem
{
  int nSeq;
  char szItemName[25];
  int nUserSeq;
  int nAliasSeq;
  char szOwnerUserAlias[25];
  unsigned __int16 wDurationHour;
  char btBillMode;
  unsigned int dwGold;
};

/* 1882 */
struct __cppobj SteamEngine::Win32::System::CWin32Exception : SteamEngine::Win32::System::CException
{
  unsigned int m_dwError;
};

/* 1883 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_47
{
  const void *pVFTable;
  void *spare;
  char name[47];
};

/* 1884 */
struct _OSVERSIONINFOEXA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  char wProductType;
  char wReserved;
};

/* 1885 */
struct _OSVERSIONINFOA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
};

/* 1886 */
struct _PROCESS_MEMORY_COUNTERS
{
  unsigned int cb;
  unsigned int PageFaultCount;
  unsigned int PeakWorkingSetSize;
  unsigned int WorkingSetSize;
  unsigned int QuotaPeakPagedPoolUsage;
  unsigned int QuotaPagedPoolUsage;
  unsigned int QuotaPeakNonPagedPoolUsage;
  unsigned int QuotaNonPagedPoolUsage;
  unsigned int PagefileUsage;
  unsigned int PeakPagefileUsage;
};

/* 1887 */
struct $_TypeDescriptor$_extraBytes_44
{
  const void *pVFTable;
  void *spare;
  char name[44];
};

/* 1888 */
struct SteamEngine::Win32::System::CThreadManager
{
  SteamEngine::Win32::System::CThreadManagerVtbl *vfptr;
  std::list<void *,std::allocator<void *> > ListThreadHandle;
};

/* 1889 */
struct SteamEngine::Win32::System::CThreadManagerVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::System::CThreadManager *this, unsigned int);
};

/* 1890 */
struct __cppobj std::_Allocator_base<std::_List_nod<void *,std::allocator<void *> >::_Node>
{
};

/* 1891 */
struct __cppobj std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node> : std::_Allocator_base<std::_List_nod<void *,std::allocator<void *> >::_Node>
{
};

/* 1892 */
struct __cppobj __declspec(align(4)) std::_List_nod<void *,std::allocator<void *> > : std::_Container_base_aux_alloc_real<std::allocator<void *> >
{
  std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node> _Alnod;
};

/* 1893 */
struct __cppobj std::_Allocator_base<std::_List_nod<void *,std::allocator<void *> >::_Node *>
{
};

/* 1894 */
struct __cppobj std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node *> : std::_Allocator_base<std::_List_nod<void *,std::allocator<void *> >::_Node *>
{
};

/* 1895 */
struct __cppobj __declspec(align(4)) std::_List_ptr<void *,std::allocator<void *> > : std::_List_nod<void *,std::allocator<void *> >
{
  std::allocator<std::_List_nod<void *,std::allocator<void *> >::_Node *> _Alptr;
};

/* 1896 */
struct __cppobj __declspec(align(4)) std::_List_val<void *,std::allocator<void *> > : std::_List_ptr<void *,std::allocator<void *> >
{
  std::allocator<void *> _Alval;
};

/* 1897 */
struct std::_List_nod<void *,std::allocator<void *> >::_Node
{
  std::_List_nod<void *,std::allocator<void *> >::_Node *_Next;
  std::_List_nod<void *,std::allocator<void *> >::_Node *_Prev;
  void *_Myval;
};

/* 1898 */
struct __cppobj std::list<void *,std::allocator<void *> > : std::_List_val<void *,std::allocator<void *> >
{
  std::_List_nod<void *,std::allocator<void *> >::_Node *_Myhead;
  unsigned int _Mysize;
};

/* 1899 */
struct __cppobj std::_Iterator_with_base<std::bidirectional_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1900 */
struct __cppobj std::_Bidit<void *,int,void * const *,void * const &> : std::_Iterator_with_base<std::bidirectional_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux>
{
};

/* 1901 */
struct __cppobj std::list<void *,std::allocator<void *> >::_Const_iterator<1> : std::_Bidit<void *,int,void * const *,void * const &>
{
  std::_List_nod<void *,std::allocator<void *> >::_Node *_Ptr;
};

/* 1902 */
struct __cppobj std::list<void *,std::allocator<void *> >::_Iterator<1> : std::list<void *,std::allocator<void *> >::_Const_iterator<1>
{
};

/* 1903 */
struct __cppobj std::allocator<void *>::rebind<std::_List_nod<void *,std::allocator<void *> >::_Node>
{
};

/* 1904 */
struct __cppobj std::allocator<void *>::rebind<std::_List_nod<void *,std::allocator<void *> >::_Node *>
{
};

/* 1905 */
struct __cppobj CSingleton<CSnapShotStack>
{
};

/* 1906 */
struct __cppobj CSnapShotStack : CSingleton<CSnapShotStack>
{
  CSnapShotStackVtbl *vfptr;
};

/* 1907 */
struct CSnapShotStackVtbl
{
  void *(__thiscall *__vecDelDtor)(CSnapShotStack *this, unsigned int);
  int (__thiscall *Init)(CSnapShotStack *this);
};

/* 1908 */
struct CSnapShotStack::_ThreadArg
{
  unsigned int dwThreadId;
  char szMsg[4096];
  void *hEvent;
};

/* 1909 */
struct __declspec(align(4)) _SYMBOL_INFO
{
  unsigned int SizeOfStruct;
  unsigned int TypeIndex;
  unsigned __int64 Reserved[2];
  unsigned int Index;
  unsigned int Size;
  unsigned __int64 ModBase;
  unsigned int Flags;
  unsigned __int64 Value;
  unsigned __int64 Address;
  unsigned int Register;
  unsigned int Scope;
  unsigned int Tag;
  unsigned int NameLen;
  unsigned int MaxNameLen;
  char Name[1];
};

/* 1910 */
struct _tagSTACKFRAME
{
  _tagADDRESS AddrPC;
  _tagADDRESS AddrReturn;
  _tagADDRESS AddrFrame;
  _tagADDRESS AddrStack;
  void *FuncTableEntry;
  unsigned int Params[4];
  int Far;
  int Virtual;
  unsigned int Reserved[3];
  _KDHELP KdHelp;
  _tagADDRESS AddrBStore;
};

/* 1911 */
struct _IMAGEHLP_LINE
{
  unsigned int SizeOfStruct;
  void *Key;
  unsigned int LineNumber;
  char *FileName;
  unsigned int Address;
};

/* 1912 */
struct hostent
{
  char *h_name;
  char **h_aliases;
  __int16 h_addrtype;
  __int16 h_length;
  char **h_addr_list;
};

/* 1913 */
struct __cppobj std::_Iterator_with_base<std::random_access_iterator_tag,SteamEngine::Win32::Net::CSession *,int,SteamEngine::Win32::Net::CSession * const *,SteamEngine::Win32::Net::CSession * const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1914 */
struct __cppobj std::_Ranit<SteamEngine::Win32::Net::CSession *,int,SteamEngine::Win32::Net::CSession * const *,SteamEngine::Win32::Net::CSession * const &> : std::_Iterator_with_base<std::random_access_iterator_tag,SteamEngine::Win32::Net::CSession *,int,SteamEngine::Win32::Net::CSession * const *,SteamEngine::Win32::Net::CSession * const &,std::_Iterator_base_aux>
{
};

/* 1915 */
struct __cppobj std::_Deque_const_iterator<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *>,1> : std::_Ranit<SteamEngine::Win32::Net::CSession *,int,SteamEngine::Win32::Net::CSession * const *,SteamEngine::Win32::Net::CSession * const &>
{
  unsigned int _Myoff;
};

/* 1916 */
struct __cppobj std::_Deque_iterator<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *>,1> : std::_Deque_const_iterator<SteamEngine::Win32::Net::CSession *,std::allocator<SteamEngine::Win32::Net::CSession *>,1>
{
};

/* 1917 */
struct __cppobj std::allocator<SteamEngine::Win32::Net::CSession *>::rebind<SteamEngine::Win32::Net::CSession * *>
{
};

/* 1918 */
struct __cppobj SteamEngine::Win32::System::CIOCompletionWorker : SteamEngine::Win32::System::CThread
{
  unsigned int m_dwDispatchCount;
  unsigned int m_dwReadBytes;
  unsigned int m_dwStartTick;
};

/* 1919 */
struct SteamEngine::Win32::System::CIOCompletionHandler
{
  SteamEngine::Win32::System::CIOCompletionHandlerVtbl *vfptr;
  SteamEngine::Win32::Net::CIOCompletionPort *IOCP;
  SteamEngine::Win32::System::CIOCompletionWorker **WorkerThread;
  unsigned int m_dwMaxWorker;
};

/* 1920 */
struct SteamEngine::Win32::System::CIOCompletionHandlerVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::System::CIOCompletionHandler *this, unsigned int);
};

/* 1921 */
struct SteamEngine::Win32::Net::CIOCompletionPort
{
  void *m_hIocp;
};

/* 1922 */
struct timeval
{
  int tv_sec;
  int tv_usec;
};

/* 1923 */
struct fd_set
{
  unsigned int fd_count;
  unsigned int fd_array[64];
};

/* 1924 */
struct _WSANETWORKEVENTS
{
  int lNetworkEvents;
  int iErrorCode[10];
};

/* 1925 */
struct SteamEngine::Win32::Net::CServerSocket
{
  SteamEngine::Win32::Net::CServerSocketVtbl *vfptr;
  CChSocket m_socket;
};

/* 1926 */
struct SteamEngine::Win32::Net::CServerSocketVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::Net::CServerSocket *this, unsigned int);
};

/* 1927 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_43
{
  const void *pVFTable;
  void *spare;
  char name[43];
};

/* 1928 */
struct __cppobj CMiniDumperCS : SteamEngine::Win32::System::CMiniDumper
{
};

/* 1929 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_51
{
  const void *pVFTable;
  void *spare;
  char name[51];
};

/* 1930 */
struct $_TypeDescriptor$_extraBytes_52
{
  const void *pVFTable;
  void *spare;
  char name[52];
};

/* 1931 */
struct SteamEngine::Win32::System::CEvent
{
  SteamEngine::Win32::System::CEventVtbl *vfptr;
  void *m_hEvent;
};

/* 1932 */
struct SteamEngine::Win32::System::CEventVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::System::CEvent *this, unsigned int);
};

/* 1933 */
struct SteamEngine::Win32::Net::CClientSocket
{
  SteamEngine::Win32::Net::CClientSocketVtbl *vfptr;
  CChSocket m_socket;
  int m_bConnected;
  HWND__ *m_hwndNotify;
  char m_szReceiveBuffer[8192];
  int m_nReceivedPacketSize;
  void *m_eventRecv;
  void (__cdecl *m_pfnNotify)(SteamEngine::Win32::Net::CClientSocket *, unsigned int, unsigned int);
  void (__cdecl *m_pfnProcess)(SteamEngine::Win32::Net::CPacket *, SteamEngine::Win32::Net::CClientSocket *, void *);
  void *m_pProcessArg;
  SteamEngine::Win32::System::CCriticalSection m_csQueue;
  SteamEngine::Win32::System::CCriticalSection m_csSocket;
  Queue<SteamEngine::Win32::Net::CPacket> m_queueRecv;
};

/* 1934 */
struct SteamEngine::Win32::Net::CClientSocketVtbl
{
  void *(__thiscall *__vecDelDtor)(SteamEngine::Win32::Net::CClientSocket *this, unsigned int);
  _BYTE gap4[4];
  void (__thiscall *Close)(SteamEngine::Win32::Net::CClientSocket *this);
  unsigned int (__thiscall *GetQueueCount)(SteamEngine::Win32::Net::CClientSocket *this);
  int (__thiscall *SendPacket)(SteamEngine::Win32::Net::CClientSocket *this, SteamEngine::Win32::Net::CPacket *);
  void (__thiscall *_SelectEvent)(SteamEngine::Win32::Net::CClientSocket *this);
  void (__thiscall *SelectEvent)(SteamEngine::Win32::Net::CClientSocket *this, int);
  int (__thiscall *OnRecvPacket)(SteamEngine::Win32::Net::CClientSocket *this, SteamEngine::Win32::Net::CPacket *);
  void (__thiscall *OnBeforeProcess)(SteamEngine::Win32::Net::CClientSocket *this, SteamEngine::Win32::Net::CPacket *);
  void (__thiscall *OnAfterProcess)(SteamEngine::Win32::Net::CClientSocket *this, SteamEngine::Win32::Net::CPacket *);
  void (__thiscall *OnConnect)(SteamEngine::Win32::Net::CClientSocket *this, unsigned int);
  void (__thiscall *OnClose)(SteamEngine::Win32::Net::CClientSocket *this);
  void (__thiscall *OnReceive)(SteamEngine::Win32::Net::CClientSocket *this);
};

/* 1935 */
struct Queue<SteamEngine::Win32::Net::CPacket>::Node
{
  SteamEngine::Win32::Net::CPacket _data;
  Queue<SteamEngine::Win32::Net::CPacket>::Node *_next;
};

/* 1936 */
struct Queue<SteamEngine::Win32::Net::CPacket>
{
  Queue<SteamEngine::Win32::Net::CPacket>::Node *_head;
  Queue<SteamEngine::Win32::Net::CPacket>::Node *_tail;
  int _count;
};

/* 1937 */
struct WSAData
{
  unsigned __int16 wVersion;
  unsigned __int16 wHighVersion;
  char szDescription[257];
  char szSystemStatus[129];
  unsigned __int16 iMaxSockets;
  unsigned __int16 iMaxUdpDg;
  char *lpVendorInfo;
};

/* 1938 */
struct __cppobj SteamEngine::Win32::Net::CAcceptor : SteamEngine::Win32::System::CThread
{
  SteamEngine::Win32::Net::CServerSocket m_serverSocket;
};

/* 1939 */
struct __cppobj CNSTest
{
};

/* 1940 */
struct CNSTest2
{
  int m_nTest;
};

/* 1941 */
struct CMapTest
{
  CMapTestVtbl *vfptr;
  std::map<int,unsigned long,std::less<int>,std::allocator<std::pair<int const ,unsigned long> > > m_mapReserveUser;
};

/* 1942 */
struct CMapTestVtbl
{
  void *(__thiscall *__vecDelDtor)(CMapTest *this, unsigned int);
};

/* 1943 */
struct SkillListTest::__l4::CNSChar
{
  SkillListTest::__l2::CNSSList m_SkillList;
  _BYTE gap0[8];
};

/* 1944 */
struct __cppobj SkillListTest::__l3::CNSSList2 : struct SkillListTest::__l2::CNSSList
{
  _BYTE gap0[8];
  unsigned int m_SkillList[10];
};

/* 1945 */
struct SkillListTest::__l2::CNSSListVtbl
{
  unsigned int (__thiscall *GetMaxList)(SkillListTest::__l2::CNSSList *this);
  unsigned int (__thiscall *Test2)(SkillListTest::__l2::CNSSList *this);
};

/* 1946 */
struct SkillListTest::__l2::CNSSList
{
  SkillListTest::__l2::CNSSListVtbl *vfptr;
  unsigned int m_SkillList[1];
};

/* 1947 */
struct SkillListTest::__l4::CNSPc
{
  _BYTE m_SkillList[];
  _BYTE gap0[48];
};

/* 1948 */
struct __cppobj OVERLAPPED2 : _OVERLAPPED
{
  unsigned int flags;
};

/* 1949 */
struct __cppobj OVERLAPPED2_SEND : OVERLAPPED2
{
  char pSendBuff[8192];
};

/* 1950 */
struct __cppobj boost::fast_pool_allocator<OVERLAPPED2_SEND,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
};

/* 1951 */
struct __cppobj boost::object_pool<OVERLAPPED2_SEND,boost::default_user_allocator_new_delete> : boost::pool<boost::default_user_allocator_new_delete>
{
};

/* 1952 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<std::allocator<int> > : std::_Container_base_aux
{
  std::allocator<std::_Aux_cont> _Alaux;
};

/* 1953 */
struct __cppobj __declspec(align(4)) std::_Vector_val<int,std::allocator<int> > : std::_Container_base_aux_alloc_real<std::allocator<int> >
{
  std::allocator<int> _Alval;
};

/* 1954 */
struct __cppobj std::vector<int,std::allocator<int> > : std::_Vector_val<int,std::allocator<int> >
{
  int *_Myfirst;
  int *_Mylast;
  int *_Myend;
};

/* 1955 */
struct __cppobj std::_Iterator_with_base<std::random_access_iterator_tag,int,int,int const *,int const &,std::_Iterator_base_aux> : std::_Iterator_base_aux
{
};

/* 1956 */
struct __cppobj std::_Ranit<int,int,int const *,int const &> : std::_Iterator_with_base<std::random_access_iterator_tag,int,int,int const *,int const &,std::_Iterator_base_aux>
{
};

/* 1957 */
struct __cppobj std::_Vector_const_iterator<int,std::allocator<int> > : std::_Ranit<int,int,int const *,int const &>
{
  int *_Myptr;
};

/* 1958 */
struct __cppobj std::_Vector_iterator<int,std::allocator<int> > : std::_Vector_const_iterator<int,std::allocator<int> >
{
};

/* 1959 */
struct __cppobj boost::pool_allocator<std::_Aux_cont,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
};

/* 1960 */
struct __cppobj __declspec(align(4)) std::_Container_base_aux_alloc_real<boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > : std::_Container_base_aux
{
  boost::pool_allocator<std::_Aux_cont,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alaux;
};

/* 1961 */
struct __cppobj boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
};

/* 1962 */
struct __cppobj __declspec(align(4)) std::_Vector_val<int,boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > : std::_Container_base_aux_alloc_real<boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> _Alval;
};

/* 1963 */
struct __cppobj std::vector<int,boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > : std::_Vector_val<int,boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
  int *_Myfirst;
  int *_Mylast;
  int *_Myend;
};

/* 1964 */
struct __cppobj std::_Vector_const_iterator<int,boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > : std::_Ranit<int,int,int const *,int const &>
{
  int *_Myptr;
};

/* 1965 */
struct __cppobj std::_Vector_iterator<int,boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> > : std::_Vector_const_iterator<int,boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32> >
{
};

/* 1966 */
struct __cppobj std::_Num_base
{
};

/* 1967 */
struct __cppobj std::_Num_float_base : std::_Num_base
{
};

/* 1968 */
struct __cppobj std::_Num_int_base : std::_Num_base
{
};

/* 1969 */
struct __cppobj std::numeric_limits<unsigned int> : std::_Num_int_base
{
};

/* 1970 */
struct __cppobj std::binary_function<void *,void *,bool>
{
};

/* 1971 */
struct __cppobj std::greater<void *> : std::binary_function<void *,void *,bool>
{
};

/* 1972 */
struct __cppobj std::less<void *> : std::binary_function<void *,void *,bool>
{
};

/* 1973 */
struct __cppobj std::numeric_limits<float> : std::_Num_float_base
{
};

/* 1974 */
struct __cppobj std::numeric_limits<__int64> : std::_Num_int_base
{
};

/* 1975 */
struct __cppobj std::allocator<int>::rebind<std::_Aux_cont>
{
};

/* 1976 */
struct __cppobj std::allocator<int>::rebind<int>
{
};

/* 1977 */
struct __cppobj std::numeric_limits<bool> : std::_Num_int_base
{
};

/* 1978 */
struct __cppobj std::numeric_limits<unsigned short> : std::_Num_int_base
{
};

/* 1979 */
struct __cppobj std::less_equal<void *> : std::binary_function<void *,void *,bool>
{
};

/* 1980 */
struct __cppobj std::numeric_limits<unsigned long> : std::_Num_int_base
{
};

/* 1981 */
struct __cppobj std::numeric_limits<int> : std::_Num_int_base
{
};

/* 1982 */
struct __cppobj std::numeric_limits<char> : std::_Num_int_base
{
};

/* 1983 */
struct __cppobj std::numeric_limits<double> : std::_Num_float_base
{
};

/* 1984 */
struct __cppobj std::numeric_limits<long double> : std::_Num_float_base
{
};

/* 1985 */
struct __cppobj std::numeric_limits<long> : std::_Num_int_base
{
};

/* 1986 */
struct __cppobj std::numeric_limits<wchar_t> : std::_Num_int_base
{
};

/* 1987 */
struct __cppobj std::numeric_limits<unsigned char> : std::_Num_int_base
{
};

/* 1988 */
struct __cppobj std::numeric_limits<unsigned __int64> : std::_Num_int_base
{
};

/* 1989 */
struct __cppobj std::numeric_limits<short> : std::_Num_int_base
{
};

/* 1990 */
struct __cppobj std::numeric_limits<signed char> : std::_Num_int_base
{
};

/* 1991 */
union _Dconst
{
  unsigned __int16 _Word[8];
  float _Float;
  long double _Double;
  long double _Long_double;
};

/* 1992 */
struct __cppobj boost::fast_pool_allocator_tag
{
};

/* 1993 */
struct __cppobj boost::singleton_pool<boost::fast_pool_allocator_tag,8216,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type : boost::details::pool::win32_mutex
{
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 1994 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,8216,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
};

/* 1995 */
struct __cppobj boost::singleton_pool<boost::fast_pool_allocator_tag,8216,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
};

/* 1996 */
struct __cppobj boost::pool_allocator_tag
{
};

/* 1997 */
struct __cppobj boost::singleton_pool<boost::pool_allocator_tag,4,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type : boost::details::pool::win32_mutex
{
  boost::pool<boost::default_user_allocator_new_delete> p;
};

/* 1998 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<boost::pool_allocator_tag,4,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>
{
};

/* 1999 */
struct __cppobj boost::singleton_pool<boost::pool_allocator_tag,4,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>
{
};

/* 2000 */
struct __cppobj boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<std::_Aux_cont>
{
};

/* 2001 */
struct __cppobj boost::pool_allocator<int,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::rebind<int>
{
};

/* 2002 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<boost::fast_pool_allocator_tag,8216,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
};

/* 2003 */
struct __cppobj boost::details::pool::singleton_default<boost::singleton_pool<boost::pool_allocator_tag,4,boost::default_user_allocator_new_delete,boost::details::pool::win32_mutex,32>::pool_type>::object_creator
{
};

/* 2004 */
struct __cppobj CSingleton<CNSGameServerParams>
{
};

/* 2005 */
struct __cppobj CNSGameServerParams : CSingleton<CNSGameServerParams>
{
  CNSGameServerParamsVtbl *vfptr;
  int m_nUserMax;
  int m_nServerPort;
};

/* 2006 */
struct CNSGameServerParamsVtbl
{
  void *(__thiscall *__vecDelDtor)(CNSGameServerParams *this, unsigned int);
};

/* 2007 */
struct __cppobj CMiniDumper2 : SteamEngine::Win32::System::CMiniDumper
{
};

/* 2008 */
struct __cppobj std::_Init_locks
{
};

/* 2009 */
struct TypeDescriptor
{
  unsigned int hash;
  void *spare;
  char name[];
};

/* WARNING: no name found for type 2010 */

/* 2011 */
struct _s_CatchableType
{
  unsigned int properties;
  TypeDescriptor *pType;
  #2010 thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 2012 */
struct _s_CatchableTypeArray
{
  int nCatchableTypes;
  _s_CatchableType *arrayOfCatchableTypes[];
};

/* 2013 */
struct _s_ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (*pForwardCompat)(...);
  _s_CatchableTypeArray *pCatchableTypeArray;
};

/* 2014 */
struct EHExceptionRecord::EHParameters
{
  unsigned int magicNumber;
  void *pExceptionObject;
  _s_ThrowInfo *pThrowInfo;
};

/* 2015 */
struct EHExceptionRecord
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  EHExceptionRecord::EHParameters params;
};

/* 2016 */
struct __cppobj <CrtImplementationDetails>::NativeDll
{
};

/* 2017 */
struct PreAttribute
{
  unsigned int Deref;
  SA_YesNoMaybe Valid;
  SA_YesNoMaybe Null;
  SA_YesNoMaybe Tainted;
  SA_AccessType Access;
  unsigned int ValidElementsConst;
  unsigned int ValidBytesConst;
  const wchar_t *ValidElements;
  const wchar_t *ValidBytes;
  const wchar_t *ValidElementsLength;
  const wchar_t *ValidBytesLength;
  unsigned int WritableElementsConst;
  unsigned int WritableBytesConst;
  const wchar_t *WritableElements;
  const wchar_t *WritableBytes;
  const wchar_t *WritableElementsLength;
  const wchar_t *WritableBytesLength;
  unsigned int ElementSizeConst;
  const wchar_t *ElementSize;
  SA_YesNoMaybe NullTerminated;
  const wchar_t *Condition;
};

/* 2018 */
struct PostAttribute
{
  unsigned int Deref;
  SA_YesNoMaybe Valid;
  SA_YesNoMaybe Null;
  SA_YesNoMaybe Tainted;
  SA_AccessType Access;
  unsigned int ValidElementsConst;
  unsigned int ValidBytesConst;
  const wchar_t *ValidElements;
  const wchar_t *ValidBytes;
  const wchar_t *ValidElementsLength;
  const wchar_t *ValidBytesLength;
  unsigned int WritableElementsConst;
  unsigned int WritableBytesConst;
  const wchar_t *WritableElements;
  const wchar_t *WritableBytes;
  const wchar_t *WritableElementsLength;
  const wchar_t *WritableBytesLength;
  unsigned int ElementSizeConst;
  const wchar_t *ElementSize;
  SA_YesNoMaybe NullTerminated;
  SA_YesNoMaybe MustCheck;
  const wchar_t *Condition;
};

/* 2019 */
struct FormatStringAttribute
{
  const wchar_t *Style;
  const wchar_t *UnformattedAlternative;
};

/* 2020 */
struct _startupinfo
{
  int newmode;
};

/* 2021 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/* 2022 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/* 2023 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 2024 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/* 2025 */
struct _EXCEPTION_REGISTRATION_RECORD
{
  _EXCEPTION_REGISTRATION_RECORD *Next;
  _EXCEPTION_DISPOSITION (__cdecl *Handler)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);
};

/* 2026 */
struct _NT_TIB
{
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 2027 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 2028 */
struct _IMAGE_OPTIONAL_HEADER64
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned __int64 ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned __int64 SizeOfStackReserve;
  unsigned __int64 SizeOfStackCommit;
  unsigned __int64 SizeOfHeapReserve;
  unsigned __int64 SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 2029 */
struct _exception
{
  int type;
  char *name;
  long double arg1;
  long double arg2;
  long double retval;
};

/* 2030 */
union FT
{
  unsigned __int64 ft_scalar;
  _FILETIME ft_struct;
};

/* 2031 */
union __m128
{
  float m128_f32[4];
  unsigned __int64 m128_u64[2];
  char m128_i8[16];
  __int16 m128_i16[8];
  int m128_i32[4];
  __int64 m128_i64[2];
  char m128_u8[16];
  unsigned __int16 m128_u16[8];
  unsigned int m128_u32[4];
};

/* 2032 */
union __m64
{
  unsigned __int64 m64_u64;
  float m64_f32[2];
  char m64_i8[8];
  __int16 m64_i16[4];
  int m64_i32[2];
  __int64 m64_i64;
  char m64_u8[8];
  unsigned __int16 m64_u16[4];
  unsigned int m64_u32[2];
};

/* 2033 */
union $22971E98F1DCAE471B592EC18ECB1551
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 2034 */
struct _IMAGE_SECTION_HEADER
{
  char Name[8];
  $22971E98F1DCAE471B592EC18ECB1551 Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/* 2035 */
struct _TEB_ACTIVE_FRAME_CONTEXT
{
  unsigned int Flags;
  const char *FrameName;
};

/* 2036 */
struct _PEB_FREE_BLOCK
{
  _PEB_FREE_BLOCK *Next;
  unsigned int Size;
};

/* 2037 */
struct __declspec(align(4)) _Wx86ThreadState
{
  unsigned int *CallBx86Eip;
  void *DeallocationCpu;
  char UseKnownWx86Dll;
  char OleStubInvoked;
};

/* 2038 */
struct _TEB_ACTIVE_FRAME
{
  unsigned int Flags;
  _TEB_ACTIVE_FRAME *Previous;
  _TEB_ACTIVE_FRAME_CONTEXT *Context;
};

/* 2039 */
struct _UNICODE_STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned __int16 *Buffer;
};

/* 2040 */
struct _ACTIVATION_CONTEXT_STACK
{
  unsigned int Flags;
  unsigned int NextCookieSequenceNumber;
  _RTL_ACTIVATION_CONTEXT_STACK_FRAME *ActiveFrame;
  _LIST_ENTRY FrameListCache;
};

/* 2041 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 2042 */
struct _PEB_LDR_DATA
{
  unsigned int Length;
  char Initialized;
  void *SsHandle;
  _LIST_ENTRY InLoadOrderModuleList;
  _LIST_ENTRY InMemoryOrderModuleList;
  _LIST_ENTRY InInitializationOrderModuleList;
  void *EntryInProgress;
};

/* 2043 */
struct _CLIENT_ID
{
  void *UniqueProcess;
  void *UniqueThread;
};

/* 2044 */
struct _KSYSTEM_TIME
{
  unsigned int LowPart;
  int High1Time;
  int High2Time;
};

/* 2045 */
struct _GDI_TEB_BATCH
{
  unsigned int Offset;
  unsigned int HDC;
  unsigned int Buffer[310];
};

/* 2046 */
union __unaligned __declspec(align(4)) $36CB26522447F5A1059FC2D34F52D67D
{
  _KSYSTEM_TIME TickCount;
  volatile unsigned __int64 TickCountQuad;
};

/* 2047 */
struct __declspec(align(8)) _KUSER_SHARED_DATA
{
  unsigned int TickCountLowDeprecated;
  unsigned int TickCountMultiplier;
  _KSYSTEM_TIME InterruptTime;
  _KSYSTEM_TIME SystemTime;
  _KSYSTEM_TIME TimeZoneBias;
  unsigned __int16 ImageNumberLow;
  unsigned __int16 ImageNumberHigh;
  wchar_t NtSystemRoot[260];
  unsigned int MaxStackTraceDepth;
  unsigned int CryptoExponent;
  unsigned int TimeZoneId;
  unsigned int LargePageMinimum;
  unsigned int Reserved2[7];
  _NT_PRODUCT_TYPE NtProductType;
  char ProductTypeIsValid;
  unsigned int NtMajorVersion;
  unsigned int NtMinorVersion;
  char ProcessorFeatures[64];
  unsigned int Reserved1;
  unsigned int Reserved3;
  volatile unsigned int TimeSlip;
  _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  _LARGE_INTEGER SystemExpirationDate;
  unsigned int SuiteMask;
  char KdDebuggerEnabled;
  volatile unsigned int ActiveConsoleId;
  volatile unsigned int DismountCount;
  unsigned int ComPlusPackage;
  unsigned int LastSystemRITEventTickCount;
  unsigned int NumberOfPhysicalPages;
  char SafeBootMode;
  unsigned int TraceLogging;
  unsigned __int64 Fill0;
  unsigned __int64 SystemCall[4];
  $36CB26522447F5A1059FC2D34F52D67D ___u34;
};

/* 2048 */
struct _PEB
{
  char InheritedAddressSpace;
  char ReadImageFileExecOptions;
  char BeingDebugged;
  char SpareBool;
  void *Mutant;
  void *ImageBaseAddress;
  _PEB_LDR_DATA *Ldr;
  _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;
  void *SubSystemData;
  void *ProcessHeap;
  _RTL_CRITICAL_SECTION *FastPebLock;
  void *SparePtr1;
  void *SparePtr2;
  unsigned int EnvironmentUpdateCount;
  void *KernelCallbackTable;
  unsigned int SystemReserved[1];
  unsigned __int32 ExecuteOptions : 2;
  unsigned __int32 SpareBits : 30;
  _PEB_FREE_BLOCK *FreeList;
  unsigned int TlsExpansionCounter;
  void *TlsBitmap;
  unsigned int TlsBitmapBits[2];
  void *ReadOnlySharedMemoryBase;
  void *ReadOnlySharedMemoryHeap;
  void **ReadOnlyStaticServerData;
  void *AnsiCodePageData;
  void *OemCodePageData;
  void *UnicodeCaseTableData;
  unsigned int NumberOfProcessors;
  unsigned int NtGlobalFlag;
  _LARGE_INTEGER CriticalSectionTimeout;
  unsigned int HeapSegmentReserve;
  unsigned int HeapSegmentCommit;
  unsigned int HeapDeCommitTotalFreeThreshold;
  unsigned int HeapDeCommitFreeBlockThreshold;
  unsigned int NumberOfHeaps;
  unsigned int MaximumNumberOfHeaps;
  void **ProcessHeaps;
  void *GdiSharedHandleTable;
  void *ProcessStarterHelper;
  unsigned int GdiDCAttributeList;
  _RTL_CRITICAL_SECTION *LoaderLock;
  unsigned int OSMajorVersion;
  unsigned int OSMinorVersion;
  unsigned __int16 OSBuildNumber;
  unsigned __int16 OSCSDVersion;
  unsigned int OSPlatformId;
  unsigned int ImageSubsystem;
  unsigned int ImageSubsystemMajorVersion;
  unsigned int ImageSubsystemMinorVersion;
  unsigned int ImageProcessAffinityMask;
  unsigned int GdiHandleBuffer[34];
  void (__cdecl *PostProcessInitRoutine)();
  void *TlsExpansionBitmap;
  unsigned int TlsExpansionBitmapBits[32];
  unsigned int SessionId;
  _ULARGE_INTEGER AppCompatFlags;
  _ULARGE_INTEGER AppCompatFlagsUser;
  void *pShimData;
  void *AppCompatInfo;
  _UNICODE_STRING CSDVersion;
  _ACTIVATION_CONTEXT_DATA *ActivationContextData;
  _ASSEMBLY_STORAGE_MAP *ProcessAssemblyStorageMap;
  _ACTIVATION_CONTEXT_DATA *SystemDefaultActivationContextData;
  _ASSEMBLY_STORAGE_MAP *SystemAssemblyStorageMap;
  unsigned int MinimumStackCommit;
  void **FlsCallback;
  _LIST_ENTRY FlsListHead;
  void *FlsBitmap;
  unsigned int FlsBitmapBits[4];
  unsigned int FlsHighIndex;
};

/* 2049 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 2050 */
struct _TEB
{
  _NT_TIB NtTib;
  void *EnvironmentPointer;
  _CLIENT_ID ClientId;
  void *ActiveRpcHandle;
  void *ThreadLocalStoragePointer;
  _PEB *ProcessEnvironmentBlock;
  unsigned int LastErrorValue;
  unsigned int CountOfOwnedCriticalSections;
  void *CsrClientThread;
  void *Win32ThreadInfo;
  unsigned int User32Reserved[26];
  unsigned int UserReserved[5];
  void *WOW32Reserved;
  unsigned int CurrentLocale;
  unsigned int FpSoftwareStatusRegister;
  void *SystemReserved1[54];
  int ExceptionCode;
  _ACTIVATION_CONTEXT_STACK ActivationContextStack;
  char SpareBytes1[24];
  _GDI_TEB_BATCH GdiTebBatch;
  _CLIENT_ID RealClientId;
  void *GdiCachedProcessHandle;
  unsigned int GdiClientPID;
  unsigned int GdiClientTID;
  void *GdiThreadLocalInfo;
  unsigned int Win32ClientInfo[62];
  void *glDispatchTable[233];
  unsigned int glReserved1[29];
  void *glReserved2;
  void *glSectionInfo;
  void *glSection;
  void *glTable;
  void *glCurrentRC;
  void *glContext;
  unsigned int LastStatusValue;
  _UNICODE_STRING StaticUnicodeString;
  wchar_t StaticUnicodeBuffer[261];
  void *DeallocationStack;
  void *TlsSlots[64];
  _LIST_ENTRY TlsLinks;
  void *Vdm;
  void *ReservedForNtRpc;
  void *DbgSsReserved[2];
  unsigned int HardErrorMode;
  void *Instrumentation[16];
  void *WinSockData;
  unsigned int GdiBatchCount;
  char InDbgPrint;
  char FreeStackOnTermination;
  char HasFiberData;
  char IdealProcessor;
  unsigned int Spare3;
  void *ReservedForPerf;
  void *ReservedForOle;
  unsigned int WaitingOnLoaderLock;
  _Wx86ThreadState Wx86Thread;
  void **TlsExpansionSlots;
  unsigned int ImpersonationLocale;
  unsigned int IsImpersonating;
  void *NlsCache;
  void *pShimData;
  unsigned int HeapVirtualAffinity;
  void *CurrentTransactionHandle;
  _TEB_ACTIVE_FRAME *ActiveFrame;
  void *FlsData;
};

/* 2051 */
struct $992A88C5856F6BE6869BBDDAC7BE31AD
{
  int dw0;
  int dw1;
  int dw2;
};

/* 2052 */
struct IMAGE_LOAD_CONFIG_DIRECTORY32_2
{
  unsigned int Size;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int GlobalFlagsClear;
  unsigned int GlobalFlagsSet;
  unsigned int CriticalSectionDefaultTimeout;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int LockPrefixTable;
  unsigned int MaximumAllocationSize;
  unsigned int VirtualMemoryThreshold;
  unsigned int ProcessHeapFlags;
  unsigned int ProcessAffinityMask;
  unsigned __int16 CSDVersion;
  unsigned __int16 Reserved1;
  unsigned int EditList;
  unsigned int *SecurityCookie;
  void **SEHandlerTable;
  unsigned int SEHandlerCount;
};

/* 2053 */
typedef unsigned __int16 wchar_t;

/* 2054 */
typedef char *LPBYTE;

/* 2055 */
typedef IUnknown *LPUNKNOWN;

/* 2056 */
typedef HKEY__ **PHKEY;

/* 2057 */
typedef unsigned __int16 PROPVAR_PAD2;

/* 2058 */
typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(void *, unsigned int, void *);

/* 2059 */
typedef int (__stdcall *FARPROC)();

/* 2060 */
typedef IConnectionPoint *LPCONNECTIONPOINT;

/* 2061 */
typedef _PEB_LDR_DATA *PPEB_LDR_DATA;

/* 2062 */
typedef float FLOAT;

/* 2063 */
typedef tagVARIANT *LPVARIANT;

/* 2064 */
typedef unsigned int UINT;

/* 2065 */
typedef unsigned int *PULONG;

/* 2066 */
typedef _TEB_ACTIVE_FRAME *PTEB_ACTIVE_FRAME;

/* 2067 */
typedef unsigned __int16 PROPVAR_PAD3;

/* 2068 */
typedef wchar_t *PWCHAR;

/* 2069 */
typedef tagSAFEARRAY *LPSAFEARRAY;

/* 2070 */
typedef _SYMBOL_INFO *PSYMBOL_INFO;

/* 2071 */
typedef _EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD;

/* 2072 */
typedef int LRESULT;

/* 2073 */
typedef int HRESULT;

/* 2074 */
typedef unsigned int (__stdcall *PGET_MODULE_BASE_ROUTINE)(void *, unsigned int);

/* 2075 */
typedef unsigned int *PDWORD;

/* 2076 */
typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 2077 */
typedef unsigned int uintptr_t;

/* 2078 */
typedef void (__stdcall *PTP_CLEANUP_GROUP_CANCEL_CALLBACK)(void *, void *);

/* 2079 */
typedef __int64 LONG64;

/* 2080 */
typedef _tagADDRESS *LPADDRESS;

/* 2081 */
typedef char *va_list;

/* 2082 */
typedef _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;

/* 2083 */
typedef __int16 SQLRETURN;

/* 2084 */
typedef char BYTE;

/* 2085 */
typedef _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

/* 2086 */
typedef void *PVOID;

/* 2087 */
typedef HRESULT __stdcall _ATL_CREATORARGFUNC(void *, _GUID *, void **, unsigned int);

/* 2088 */
typedef _WSANETWORKEVENTS *LPWSANETWORKEVENTS;

/* 2089 */
typedef unsigned __int16 PROPVAR_PAD1;

/* 2090 */
typedef int DISPID;

/* 2091 */
typedef _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

/* 2092 */
typedef _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

/* 2093 */
typedef int LPARAM;

/* 2094 */
typedef const void *LPCVOID;

/* 2095 */
typedef _SYSTEMTIME *LPSYSTEMTIME;

/* 2096 */
typedef unsigned int WPARAM;

/* 2097 */
typedef _OSVERSIONINFOA *LPOSVERSIONINFOA;

/* 2098 */
typedef _KDHELP *PKDHELP;

/* 2099 */
typedef int NTSTATUS;

/* 2100 */
typedef des_ks_struct des_key_schedule[16];

/* 2101 */
typedef __int64 LONGLONG;

/* 2102 */
typedef _PROCESS_MEMORY_COUNTERS *PPROCESS_MEMORY_COUNTERS;

/* 2103 */
typedef unsigned __int64 ULONGLONG;

/* 2104 */
typedef char *LPCH;

/* 2105 */
typedef unsigned __int16 SQLUSMALLINT;

/* 2106 */
typedef unsigned int SECURITY_INFORMATION;

/* 2107 */
typedef void *HGLOBAL;

/* 2108 */
typedef unsigned __int16 wint_t;

/* 2109 */
typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 2110 */
typedef int (__stdcall *PREAD_PROCESS_MEMORY_ROUTINE)(void *, unsigned int, void *, unsigned int, unsigned int *);

/* 2111 */
typedef _CONSOLE_SCREEN_BUFFER_INFO *PCONSOLE_SCREEN_BUFFER_INFO;

/* 2112 */
typedef threadmbcinfostruct *pthreadmbcinfo;

/* 2113 */
typedef __int16 SQLSMALLINT;

/* 2114 */
typedef unsigned __int16 WORD;

/* 2115 */
typedef unsigned __int16 USHORT;

/* 2116 */
typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 2117 */
typedef _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;

/* 2118 */
typedef void **PPVOID;

/* 2119 */
typedef int MEMBERID;

/* 2120 */
typedef void *LPVOID;

/* 2121 */
typedef WSAData *LPWSADATA;

/* 2122 */
typedef unsigned __int16 *LPWORD;

/* 2123 */
typedef int LONG;

/* 2124 */
typedef int *LPLONG;

/* 2125 */
typedef _EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 2126 */
typedef __int64 time_t;

/* 2127 */
typedef threadlocaleinfostruct *pthreadlocinfo;

/* 2128 */
typedef _FILETIME *LPFILETIME;

/* 2129 */
typedef char CHAR;

/* 2130 */
typedef const char *__stdcall _ATL_DESCRIPTIONFUNC();

/* 2131 */
typedef void **PHANDLE;

/* 2132 */
typedef int (__stdcall *MINIDUMP_CALLBACK_ROUTINE)(void *, _MINIDUMP_CALLBACK_INPUT *const , _MINIDUMP_CALLBACK_OUTPUT *);

/* 2133 */
typedef _MINIDUMP_CALLBACK_INFORMATION *PMINIDUMP_CALLBACK_INFORMATION;

/* 2134 */
typedef void *SQLHDBC;

/* 2135 */
typedef _NT_TIB *PNT_TIB;

/* 2136 */
typedef int (__stdcall *LPTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 2137 */
typedef unsigned int TP_VERSION;

/* 2138 */
typedef long double DOUBLE;

/* 2139 */
typedef int (__cdecl *lua_CFunction)(struct lua_State *);

/* 2140 */
typedef _MINIDUMP_EXCEPTION_INFORMATION *PMINIDUMP_EXCEPTION_INFORMATION;

/* 2141 */
typedef unsigned int SIZE_T;

/* 2142 */
typedef unsigned int size_t;

/* 2143 */
typedef __int16 VARIANT_BOOL;

/* 2144 */
typedef _FILETIME *PFILETIME;

/* 2145 */
typedef unsigned __int64 *PDWORD64;

/* 2146 */
typedef unsigned int *PUINT_PTR;

/* 2147 */
typedef _CONTEXT *LPCONTEXT;

/* 2148 */
typedef __int16 SHORT;

/* 2149 */
typedef unsigned int REGSAM;

/* 2150 */
typedef _tagADDRESS64 *LPADDRESS64;

/* 2151 */
typedef _devicemodeA *LPDEVMODEA;

/* 2152 */
typedef const wchar_t *LPCOLESTR;

/* 2153 */
typedef unsigned int UINT_PTR;

/* 2154 */
typedef char _TSCHAR;

/* 2155 */
typedef _MINIDUMP_USER_STREAM_INFORMATION *PMINIDUMP_USER_STREAM_INFORMATION;

/* 2156 */
typedef void (__cdecl *_PVFV)();

/* 2157 */
typedef IPersistStream *LPPERSISTSTREAM;

/* 2158 */
typedef unsigned int DWORD;

/* 2159 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;

/* 2160 */
typedef __int16 SWORD;

/* 2161 */
typedef HINSTANCE__ *HMODULE;

/* 2162 */
typedef localeinfo_struct *_locale_t;

/* 2163 */
typedef unsigned int (__stdcall *LPTHREAD_START_ROUTINE)(void *);

/* 2164 */
typedef unsigned int *PULONG_PTR;

/* 2165 */
typedef const char *PCSTR;

/* 2166 */
typedef char *PBYTE;

/* 2167 */
typedef _GUID *LPCLSID;

/* 2168 */
typedef unsigned int *LPDWORD;

/* 2169 */
typedef int LSTATUS;

/* 2170 */
typedef unsigned __int64 ULONG64;

/* 2171 */
typedef unsigned int DWORD_PTR;

/* 2172 */
typedef _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

/* 2173 */
typedef void (__cdecl *PPS_POST_PROCESS_INIT_ROUTINE)();

/* 2174 */
typedef int __time32_t;

/* 2175 */
typedef _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

/* 2176 */
typedef _MINIDUMP_CALLBACK_INPUT *PMINIDUMP_CALLBACK_INPUT;

/* 2177 */
typedef void *SQLPOINTER;

/* 2178 */
typedef int INT;

/* 2179 */
typedef _MINIDUMP_CALLBACK_OUTPUT *PMINIDUMP_CALLBACK_OUTPUT;

/* 2180 */
typedef wchar_t **SNB;

/* 2181 */
typedef _MINIDUMP_USER_STREAM *PMINIDUMP_USER_STREAM;

/* 2182 */
typedef unsigned int LCID;

/* 2183 */
typedef char *LPSTR;

/* 2184 */
typedef IMalloc *LPMALLOC;

/* 2185 */
typedef char const_des_cblock[8];

/* 2186 */
typedef IStream *LPSTREAM;

/* 2187 */
typedef _RTL_CRITICAL_SECTION *LPCRITICAL_SECTION;

/* 2188 */
typedef wchar_t *LPOLESTR;

/* 2189 */
typedef void *SQLHENV;

/* 2190 */
typedef HWND__ *SQLHWND;

/* 2191 */
typedef long double DATE;

/* 2192 */
typedef unsigned int (__stdcall *PTHREAD_START_ROUTINE)(void *);

/* 2193 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER;

/* 2194 */
typedef int SCODE;

/* 2195 */
typedef wchar_t *PUWSTR;

/* 2196 */
typedef int (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 2197 */
typedef long double lua_Number;

/* 2198 */
typedef unsigned int u_long;

/* 2199 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

/* 2200 */
typedef _CONTEXT *PCONTEXT;

/* 2201 */
typedef int (__cdecl *_onexit_t)();

/* 2202 */
typedef unsigned int rsize_t;

/* 2203 */
typedef tagTEXTMETRICW *LPTEXTMETRICW;

/* 2204 */
typedef unsigned __int16 VARTYPE;

/* 2205 */
typedef tagTEXTMETRICA *LPTEXTMETRICA;

/* 2206 */
typedef HRESULT (__cdecl *_ATL_PERFREGFUNC)(HINSTANCE__ *);

/* 2207 */
typedef int (__cdecl *_PIFV)();

/* 2208 */
typedef unsigned __int16 u_short;

/* 2209 */
typedef int mbstate_t;

/* 2210 */
typedef tagVersionedStream *LPVERSIONEDSTREAM;

/* 2211 */
typedef int INT_PTR;

/* 2212 */
typedef _TP_CALLBACK_INSTANCE *PTP_CALLBACK_INSTANCE;

/* 2213 */
typedef _tagSTACKFRAME *LPSTACKFRAME;

/* 2214 */
typedef char des_cblock[8];

/* 2215 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 2216 */
typedef _LUID *PLUID;

/* 2217 */
typedef void (__cdecl *_PMFN)();

/* 2218 */
typedef unsigned int SOCKET;

/* 2219 */
typedef _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;

/* 2220 */
typedef HINSTANCE__ *HINSTANCE;

/* 2221 */
typedef const char *LPCTSTR;

/* 2222 */
typedef unsigned int u_int;

/* 2223 */
typedef int SQLINTEGER;

/* 2224 */
typedef __int16 RETCODE;

/* 2225 */
typedef int _Mbstatet;

/* 2226 */
typedef unsigned int ACCESS_MASK;

/* 2227 */
typedef unsigned int ULONG32;

/* 2228 */
typedef void (__fastcall *PCOOKIE_CHECK)(unsigned int);

/* 2229 */
typedef void (__stdcall *PTP_SIMPLE_CALLBACK)(_TP_CALLBACK_INSTANCE *, void *);

/* 2230 */
typedef _TP_CALLBACK_ENVIRON *PTP_CALLBACK_ENVIRON;

/* 2231 */
typedef void *(__stdcall *PFUNCTION_TABLE_ACCESS_ROUTINE)(void *, unsigned int);

/* 2232 */
typedef wchar_t **LPBSTR;

/* 2233 */
typedef unsigned int SQLUINTEGER;

/* 2234 */
typedef void *SQLHSTMT;

/* 2235 */
typedef unsigned __int16 *PWSTR;

/* 2236 */
typedef const char *LPCSTR;

/* 2237 */
typedef int errno_t;

/* 2238 */
typedef int LONG_PTR;

/* 2239 */
typedef unsigned int (__stdcall *PTRANSLATE_ADDRESS_ROUTINE)(void *, void *, _tagADDRESS *);

/* 2240 */
typedef HRESULT (__stdcall *DLLGETVERSIONPROC)(_DLLVERSIONINFO *);

/* 2241 */
typedef void *HANDLE;

/* 2242 */
typedef unsigned int GDI_HANDLE_BUFFER[34];

/* 2243 */
typedef tagPARAMDESCEX *LPPARAMDESCEX;

/* 2244 */
typedef int (__stdcall *MINIDUMPWRITEDUMP)(void *, unsigned int, void *, _MINIDUMP_TYPE, _MINIDUMP_EXCEPTION_INFORMATION *const , _MINIDUMP_USER_STREAM_INFORMATION *const , _MINIDUMP_CALLBACK_INFORMATION *const );

/* 2245 */
typedef _OVERLAPPED *LPOVERLAPPED;

/* 2246 */
typedef int streamoff;

/* 2247 */
typedef _TP_CLEANUP_GROUP *PTP_CLEANUP_GROUP;

/* 2248 */
typedef hostent *PHOSTENT;

/* 2249 */
typedef HRSRC__ *HRSRC;

/* 2250 */
typedef _devicemodeW *LPDEVMODEW;

/* 2251 */
typedef void *SQLHANDLE;

/* 2252 */
typedef HRESULT (__cdecl *_ATL_PERFUNREGFUNC)();

/* 2253 */
typedef char SQLCHAR;

/* 2254 */
typedef unsigned int HREFTYPE;

/* 2255 */
typedef void *PSECURITY_DESCRIPTOR;

/* 2256 */
typedef const wchar_t *PCUWSTR;

/* 2257 */
typedef void *HLOCAL;

/* 2258 */
typedef HKEY__ *HKEY;

/* 2259 */
typedef tagCONNECTDATA *LPCONNECTDATA;

/* 2260 */
typedef _PEB *PPEB;

/* 2261 */
typedef _EXCEPTION_DISPOSITION (__cdecl *PEXCEPTION_ROUTINE)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);

/* 2262 */
typedef unsigned __int64 DWORD64;

/* 2263 */
typedef unsigned int ULONG_PTR;

/* 2264 */
typedef HWND__ *HWND;

/* 2265 */
typedef tagMSG *LPMSG;

/* 2266 */
typedef int BOOL;

/* 2267 */
typedef int *LPBOOL;

/* 2268 */
typedef _TEB_ACTIVE_FRAME_CONTEXT *PCTEB_ACTIVE_FRAME_CONTEXT;

/* 2269 */
typedef char *PCHAR;

/* 2270 */
typedef __int64 __time64_t;

/* 2271 */
typedef char TCHAR;

/* 2272 */
typedef char UCHAR;

/* 2273 */
typedef const wchar_t *LPCWSTR;

/* 2274 */
typedef _IMAGEHLP_LINE *PIMAGEHLP_LINE;

/* 2275 */
typedef wchar_t *BSTR;

/* 2276 */
typedef _KDHELP64 *PKDHELP64;

/* 2277 */
typedef wchar_t *LPWSTR;

/* 2278 */
typedef _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;

/* 2279 */
typedef ATL::_ATL_CATMAP_ENTRY *__cdecl _ATL_CATMAPFUNC();

/* 2280 */
typedef int *PLONG;

/* 2281 */
typedef unsigned int ULONG;

/* 2282 */
typedef char *LPTSTR;

/* 2283 */
typedef void __stdcall _ATL_TERMFUNC(unsigned int);

/* 2284 */
typedef void (__cdecl *PMFN)();

/* 2285 */
typedef int ptrdiff_t;

/* 2286 */
typedef HRESULT __stdcall _ATL_CREATORFUNC(void *, _GUID *, void **);

/* 2287 */
typedef char BOOLEAN;

/* 2288 */
typedef _TP_POOL *PTP_POOL;

/* 2289 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 2290 */
struct _EH3_EXCEPTION_REGISTRATION
{
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 2291 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 2292 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 2293 */
struct CPPEH_RECORD
{
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 2294 */
#pragma pack(push, 1)
struct type_info
{
  void *vftable;
  int _m_data;
  char _m_d_name[];
};
#pragma pack(pop)

/* 2295 */
#pragma pack(push, 1)
struct PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};
#pragma pack(pop)

/* 2296 */
#pragma pack(push, 1)
struct RTTIBaseClassDescriptor
{
  void *pTypeDescriptor;
  int numContainedBases;
  PMD pmd;
  int attributes;
};
#pragma pack(pop)

/* 2297 */
#pragma pack(push, 1)
struct RTTIClassHierarchyDescriptor
{
  int signature;
  int attributes;
  int numBaseClasses;
  void *pBaseClassArray;
};
#pragma pack(pop)

/* 2298 */
#pragma pack(push, 1)
struct RTTICompleteObjectLocator
{
  int signature;
  int offset;
  int cdOffset;
  void *pTypeDescriptor;
  void *pClassDescriptor;
};
#pragma pack(pop)

/* 2299 */
#pragma pack(push, 1)
struct RTCI
{
  void *m_lpszClassName;
  int m_nObjectSize;
  int m_wSchema;
  void *m_pfnCreateObject;
  void *m_pfnGetBaseClass;
  int m_pNextClass;
  int m_pClassInit;
};
#pragma pack(pop)

/* 2300 */
struct _EH4_SCOPETABLE_RECORD
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 2301 */
struct _EH4_SCOPETABLE
{
  DWORD GSCookieOffset;
  DWORD GSCookieXOROffset;
  DWORD EHCookieOffset;
  DWORD EHCookieXOROffset;
  struct _EH4_SCOPETABLE_RECORD ScopeRecord[];
};

